{"dependencies":[{"name":"./path","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":54},"end":{"line":2,"column":35,"index":89}}],"key":"fLgVgLGCXWzozZVWish/SygMBB4=","exportNames":["*"],"imports":1}},{"name":"./url","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":90},"end":{"line":3,"column":53,"index":143}}],"key":"yvV8OElsINQcWHj+V4jjurOl35o=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"PathUtilities\", {\n    enumerable: true,\n    get: function () {\n      return PathUtilities;\n    }\n  });\n  var _path = require(_dependencyMap[0], \"./path\");\n  var nodePath = _interopNamespace(_path);\n  var _url = require(_dependencyMap[1], \"./url\");\n  function uriObjectToString(path) {\n    return typeof path === 'string' ? path : path.uri;\n  }\n  class PathUtilities {\n    /**\n     * Joins path segments into a single path.\n     * @param paths - An array of path segments.\n     * @returns A string representing the joined path.\n     */\n    static join(...paths) {\n      const [firstSegment, ...rest] = paths.map(uriObjectToString);\n      const pathAsUrl = (0, _url.asUrl)(firstSegment);\n      if (pathAsUrl) {\n        pathAsUrl.pathname = nodePath.join(pathAsUrl.pathname, ...rest.map(_url.encodeURLChars));\n        return pathAsUrl.toString();\n      }\n      return nodePath.join(firstSegment, ...rest.map(_url.encodeURLChars));\n    }\n\n    /**\n     * Resolves a relative path to an absolute path.\n     * @param from - The base path.\n     * @param to - The relative path.\n     * @returns A string representing the resolved path.\n     */\n    static relative(from, to) {\n      const fromString = uriObjectToString(from);\n      const toString = uriObjectToString(to);\n\n      // If the first path is a file URL, convert it to a path\n      if ((0, _url.isUrl)(fromString)) {\n        from = (0, _url.asUrl)(fromString).pathname;\n      }\n      // If the second path is a file URL, convert it to a path\n      if ((0, _url.isUrl)(toString)) {\n        to = (0, _url.asUrl)(toString).pathname;\n      }\n      return nodePath.relative(fromString, toString);\n    }\n\n    /**\n     * Checks if a path is absolute.\n     * @param path - The path to check.\n     * @returns `true` if the path is absolute, `false` otherwise.\n     */\n    static isAbsolute(path) {\n      const pathString = uriObjectToString(path);\n      if ((0, _url.isUrl)(pathString)) {\n        return true;\n      }\n      return nodePath.isAbsolute(pathString);\n    }\n\n    /**\n     * Normalizes a path.\n     * @param path - The path to normalize.\n     * @returns A string representing the normalized path.\n     */\n    static normalize(path) {\n      const pathString = uriObjectToString(path);\n      const pathURL = (0, _url.asUrl)((0, _url.encodeURLChars)(pathString));\n      if (pathURL) {\n        pathURL.pathname = (0, _url.encodeURLChars)(nodePath.normalize(decodeURIComponent(pathURL.pathname)));\n        return pathURL.toString();\n      }\n      return nodePath.normalize(pathString);\n    }\n\n    /**\n     * Returns the directory name of a path.\n     * @param path - The path to get the directory name from.\n     * @returns A string representing the directory name.\n     */\n    static dirname(path) {\n      const pathString = uriObjectToString(path);\n      const pathURL = (0, _url.asUrl)(pathString);\n      if (pathURL) {\n        pathURL.pathname = (0, _url.encodeURLChars)(nodePath.dirname(decodeURIComponent(pathURL.pathname)));\n        return pathURL.toString();\n      }\n      return nodePath.dirname(pathString);\n    }\n\n    /**\n     * Returns the base name of a path.\n     * @param path - The path to get the base name from.\n     * @param ext - An optional file extension.\n     * @returns A string representing the base name.\n     */\n    static basename(path, ext) {\n      const pathString = uriObjectToString(path);\n      const pathURL = (0, _url.asUrl)(pathString);\n      if (pathURL) {\n        return nodePath.basename(decodeURIComponent(pathURL.pathname));\n      }\n      return nodePath.basename(pathString, ext);\n    }\n\n    /**\n     * Returns the extension of a path.\n     * @param path - The path to get the extension from.\n     * @returns A string representing the extension.\n     */\n    static extname(path) {\n      const pathString = uriObjectToString(path);\n      const pathURL = (0, _url.asUrl)(pathString);\n      if (pathURL) {\n        return nodePath.extname(decodeURIComponent(pathURL.pathname));\n      }\n      return nodePath.extname(pathString);\n    }\n\n    /**\n     * Parses a path into its components.\n     * @param path - The path to parse.\n     * @returns An object containing the parsed path components.\n     */\n    static parse(path) {\n      const pathString = uriObjectToString(path);\n      const pathURL = (0, _url.asUrl)(pathString);\n      if (pathURL) {\n        return nodePath.parse(decodeURIComponent(pathURL.pathname));\n      }\n      return nodePath.parse(pathString);\n    }\n  }\n});","lineCount":157,"map":[[22,2,9,0,"Object"],[22,8,9,0],[22,9,9,0,"defineProperty"],[22,23,9,0],[22,24,9,0,"exports"],[22,31,9,0],[23,4,9,0,"enumerable"],[23,14,9,0],[24,4,9,0,"get"],[24,7,9,0],[24,18,9,0,"get"],[24,19,9,0],[25,6,9,0],[25,13,9,0,"PathUtilities"],[25,26,9,0],[26,4,9,0],[27,2,9,0],[28,2,2,0],[28,6,2,0,"_path"],[28,11,2,0],[28,14,2,0,"require"],[28,21,2,0],[28,22,2,0,"_dependencyMap"],[28,36,2,0],[29,2,2,0],[29,6,2,0,"nodePath"],[29,14,2,0],[29,17,2,0,"_interopNamespace"],[29,34,2,0],[29,35,2,0,"_path"],[29,40,2,0],[30,2,3,0],[30,6,3,0,"_url"],[30,10,3,0],[30,13,3,0,"require"],[30,20,3,0],[30,21,3,0,"_dependencyMap"],[30,35,3,0],[31,2,5,0],[31,11,5,9,"uriObjectToString"],[31,28,5,26,"uriObjectToString"],[31,29,5,27,"path"],[31,33,5,58],[31,35,5,68],[32,4,6,2],[32,11,6,9],[32,18,6,16,"path"],[32,22,6,20],[32,27,6,25],[32,35,6,33],[32,38,6,36,"path"],[32,42,6,40],[32,45,6,43,"path"],[32,49,6,47],[32,50,6,48,"uri"],[32,53,6,51],[33,2,7,0],[34,2,9,7],[34,8,9,13,"PathUtilities"],[34,21,9,26],[34,22,9,27],[35,4,10,2],[36,0,11,0],[37,0,12,0],[38,0,13,0],[39,0,14,0],[40,4,15,2],[40,11,15,9,"join"],[40,15,15,13,"join"],[40,16,15,14],[40,19,15,17,"paths"],[40,24,15,53],[40,26,15,63],[41,6,16,4],[41,12,16,10],[41,13,16,11,"firstSegment"],[41,25,16,23],[41,27,16,25],[41,30,16,28,"rest"],[41,34,16,32],[41,35,16,33],[41,38,16,36,"paths"],[41,43,16,41],[41,44,16,42,"map"],[41,47,16,45],[41,48,16,46,"uriObjectToString"],[41,65,16,63],[41,66,16,64],[42,6,17,4],[42,12,17,10,"pathAsUrl"],[42,21,17,19],[42,24,17,22],[42,28,17,22,"asUrl"],[42,32,17,27],[42,33,17,27,"asUrl"],[42,38,17,27],[42,40,17,28,"firstSegment"],[42,52,17,40],[42,53,17,41],[43,6,18,4],[43,10,18,8,"pathAsUrl"],[43,19,18,17],[43,21,18,19],[44,8,19,6,"pathAsUrl"],[44,17,19,15],[44,18,19,16,"pathname"],[44,26,19,24],[44,29,19,27,"nodePath"],[44,37,19,35],[44,38,19,36,"join"],[44,42,19,40],[44,43,19,41,"pathAsUrl"],[44,52,19,50],[44,53,19,51,"pathname"],[44,61,19,59],[44,63,19,61],[44,66,19,64,"rest"],[44,70,19,68],[44,71,19,69,"map"],[44,74,19,72],[44,75,19,73,"encodeURLChars"],[44,79,19,87],[44,80,19,87,"encodeURLChars"],[44,94,19,87],[44,95,19,88],[44,96,19,89],[45,8,20,6],[45,15,20,13,"pathAsUrl"],[45,24,20,22],[45,25,20,23,"toString"],[45,33,20,31],[45,34,20,32],[45,35,20,33],[46,6,21,4],[47,6,22,4],[47,13,22,11,"nodePath"],[47,21,22,19],[47,22,22,20,"join"],[47,26,22,24],[47,27,22,25,"firstSegment"],[47,39,22,37],[47,41,22,39],[47,44,22,42,"rest"],[47,48,22,46],[47,49,22,47,"map"],[47,52,22,50],[47,53,22,51,"encodeURLChars"],[47,57,22,65],[47,58,22,65,"encodeURLChars"],[47,72,22,65],[47,73,22,66],[47,74,22,67],[48,4,23,2],[50,4,25,2],[51,0,26,0],[52,0,27,0],[53,0,28,0],[54,0,29,0],[55,0,30,0],[56,4,31,2],[56,11,31,9,"relative"],[56,19,31,17,"relative"],[56,20,31,18,"from"],[56,24,31,49],[56,26,31,51,"to"],[56,28,31,80],[56,30,31,90],[57,6,32,4],[57,12,32,10,"fromString"],[57,22,32,20],[57,25,32,23,"uriObjectToString"],[57,42,32,40],[57,43,32,41,"from"],[57,47,32,45],[57,48,32,46],[58,6,33,4],[58,12,33,10,"toString"],[58,20,33,18],[58,23,33,21,"uriObjectToString"],[58,40,33,38],[58,41,33,39,"to"],[58,43,33,41],[58,44,33,42],[60,6,35,4],[61,6,36,4],[61,10,36,8],[61,14,36,8,"isUrl"],[61,18,36,13],[61,19,36,13,"isUrl"],[61,24,36,13],[61,26,36,14,"fromString"],[61,36,36,24],[61,37,36,25],[61,39,36,27],[62,8,37,6,"from"],[62,12,37,10],[62,15,37,13],[62,19,37,13,"asUrl"],[62,23,37,18],[62,24,37,18,"asUrl"],[62,29,37,18],[62,31,37,19,"fromString"],[62,41,37,29],[62,42,37,30],[62,43,37,32,"pathname"],[62,51,37,40],[63,6,38,4],[64,6,39,4],[65,6,40,4],[65,10,40,8],[65,14,40,8,"isUrl"],[65,18,40,13],[65,19,40,13,"isUrl"],[65,24,40,13],[65,26,40,14,"toString"],[65,34,40,22],[65,35,40,23],[65,37,40,25],[66,8,41,6,"to"],[66,10,41,8],[66,13,41,11],[66,17,41,11,"asUrl"],[66,21,41,16],[66,22,41,16,"asUrl"],[66,27,41,16],[66,29,41,17,"toString"],[66,37,41,25],[66,38,41,26],[66,39,41,28,"pathname"],[66,47,41,36],[67,6,42,4],[68,6,43,4],[68,13,43,11,"nodePath"],[68,21,43,19],[68,22,43,20,"relative"],[68,30,43,28],[68,31,43,29,"fromString"],[68,41,43,39],[68,43,43,41,"toString"],[68,51,43,49],[68,52,43,50],[69,4,44,2],[71,4,46,2],[72,0,47,0],[73,0,48,0],[74,0,49,0],[75,0,50,0],[76,4,51,2],[76,11,51,9,"isAbsolute"],[76,21,51,19,"isAbsolute"],[76,22,51,20,"path"],[76,26,51,51],[76,28,51,62],[77,6,52,4],[77,12,52,10,"pathString"],[77,22,52,20],[77,25,52,23,"uriObjectToString"],[77,42,52,40],[77,43,52,41,"path"],[77,47,52,45],[77,48,52,46],[78,6,53,4],[78,10,53,8],[78,14,53,8,"isUrl"],[78,18,53,13],[78,19,53,13,"isUrl"],[78,24,53,13],[78,26,53,14,"pathString"],[78,36,53,24],[78,37,53,25],[78,39,53,27],[79,8,54,6],[79,15,54,13],[79,19,54,17],[80,6,55,4],[81,6,56,4],[81,13,56,11,"nodePath"],[81,21,56,19],[81,22,56,20,"isAbsolute"],[81,32,56,30],[81,33,56,31,"pathString"],[81,43,56,41],[81,44,56,42],[82,4,57,2],[84,4,59,2],[85,0,60,0],[86,0,61,0],[87,0,62,0],[88,0,63,0],[89,4,64,2],[89,11,64,9,"normalize"],[89,20,64,18,"normalize"],[89,21,64,19,"path"],[89,25,64,50],[89,27,64,60],[90,6,65,4],[90,12,65,10,"pathString"],[90,22,65,20],[90,25,65,23,"uriObjectToString"],[90,42,65,40],[90,43,65,41,"path"],[90,47,65,45],[90,48,65,46],[91,6,66,4],[91,12,66,10,"pathURL"],[91,19,66,17],[91,22,66,20],[91,26,66,20,"asUrl"],[91,30,66,25],[91,31,66,25,"asUrl"],[91,36,66,25],[91,38,66,26],[91,42,66,26,"encodeURLChars"],[91,46,66,40],[91,47,66,40,"encodeURLChars"],[91,61,66,40],[91,63,66,41,"pathString"],[91,73,66,51],[91,74,66,52],[91,75,66,53],[92,6,67,4],[92,10,67,8,"pathURL"],[92,17,67,15],[92,19,67,17],[93,8,68,6,"pathURL"],[93,15,68,13],[93,16,68,14,"pathname"],[93,24,68,22],[93,27,68,25],[93,31,68,25,"encodeURLChars"],[93,35,68,39],[93,36,68,39,"encodeURLChars"],[93,50,68,39],[93,52,68,40,"nodePath"],[93,60,68,48],[93,61,68,49,"normalize"],[93,70,68,58],[93,71,68,59,"decodeURIComponent"],[93,89,68,77],[93,90,68,78,"pathURL"],[93,97,68,85],[93,98,68,86,"pathname"],[93,106,68,94],[93,107,68,95],[93,108,68,96],[93,109,68,97],[94,8,69,6],[94,15,69,13,"pathURL"],[94,22,69,20],[94,23,69,21,"toString"],[94,31,69,29],[94,32,69,30],[94,33,69,31],[95,6,70,4],[96,6,71,4],[96,13,71,11,"nodePath"],[96,21,71,19],[96,22,71,20,"normalize"],[96,31,71,29],[96,32,71,30,"pathString"],[96,42,71,40],[96,43,71,41],[97,4,72,2],[99,4,74,2],[100,0,75,0],[101,0,76,0],[102,0,77,0],[103,0,78,0],[104,4,79,2],[104,11,79,9,"dirname"],[104,18,79,16,"dirname"],[104,19,79,17,"path"],[104,23,79,48],[104,25,79,58],[105,6,80,4],[105,12,80,10,"pathString"],[105,22,80,20],[105,25,80,23,"uriObjectToString"],[105,42,80,40],[105,43,80,41,"path"],[105,47,80,45],[105,48,80,46],[106,6,81,4],[106,12,81,10,"pathURL"],[106,19,81,17],[106,22,81,20],[106,26,81,20,"asUrl"],[106,30,81,25],[106,31,81,25,"asUrl"],[106,36,81,25],[106,38,81,26,"pathString"],[106,48,81,36],[106,49,81,37],[107,6,82,4],[107,10,82,8,"pathURL"],[107,17,82,15],[107,19,82,17],[108,8,83,6,"pathURL"],[108,15,83,13],[108,16,83,14,"pathname"],[108,24,83,22],[108,27,83,25],[108,31,83,25,"encodeURLChars"],[108,35,83,39],[108,36,83,39,"encodeURLChars"],[108,50,83,39],[108,52,83,40,"nodePath"],[108,60,83,48],[108,61,83,49,"dirname"],[108,68,83,56],[108,69,83,57,"decodeURIComponent"],[108,87,83,75],[108,88,83,76,"pathURL"],[108,95,83,83],[108,96,83,84,"pathname"],[108,104,83,92],[108,105,83,93],[108,106,83,94],[108,107,83,95],[109,8,84,6],[109,15,84,13,"pathURL"],[109,22,84,20],[109,23,84,21,"toString"],[109,31,84,29],[109,32,84,30],[109,33,84,31],[110,6,85,4],[111,6,86,4],[111,13,86,11,"nodePath"],[111,21,86,19],[111,22,86,20,"dirname"],[111,29,86,27],[111,30,86,28,"pathString"],[111,40,86,38],[111,41,86,39],[112,4,87,2],[114,4,89,2],[115,0,90,0],[116,0,91,0],[117,0,92,0],[118,0,93,0],[119,0,94,0],[120,4,95,2],[120,11,95,9,"basename"],[120,19,95,17,"basename"],[120,20,95,18,"path"],[120,24,95,49],[120,26,95,51,"ext"],[120,29,95,63],[120,31,95,73],[121,6,96,4],[121,12,96,10,"pathString"],[121,22,96,20],[121,25,96,23,"uriObjectToString"],[121,42,96,40],[121,43,96,41,"path"],[121,47,96,45],[121,48,96,46],[122,6,97,4],[122,12,97,10,"pathURL"],[122,19,97,17],[122,22,97,20],[122,26,97,20,"asUrl"],[122,30,97,25],[122,31,97,25,"asUrl"],[122,36,97,25],[122,38,97,26,"pathString"],[122,48,97,36],[122,49,97,37],[123,6,98,4],[123,10,98,8,"pathURL"],[123,17,98,15],[123,19,98,17],[124,8,99,6],[124,15,99,13,"nodePath"],[124,23,99,21],[124,24,99,22,"basename"],[124,32,99,30],[124,33,99,31,"decodeURIComponent"],[124,51,99,49],[124,52,99,50,"pathURL"],[124,59,99,57],[124,60,99,58,"pathname"],[124,68,99,66],[124,69,99,67],[124,70,99,68],[125,6,100,4],[126,6,101,4],[126,13,101,11,"nodePath"],[126,21,101,19],[126,22,101,20,"basename"],[126,30,101,28],[126,31,101,29,"pathString"],[126,41,101,39],[126,43,101,41,"ext"],[126,46,101,44],[126,47,101,45],[127,4,102,2],[129,4,104,2],[130,0,105,0],[131,0,106,0],[132,0,107,0],[133,0,108,0],[134,4,109,2],[134,11,109,9,"extname"],[134,18,109,16,"extname"],[134,19,109,17,"path"],[134,23,109,48],[134,25,109,58],[135,6,110,4],[135,12,110,10,"pathString"],[135,22,110,20],[135,25,110,23,"uriObjectToString"],[135,42,110,40],[135,43,110,41,"path"],[135,47,110,45],[135,48,110,46],[136,6,111,4],[136,12,111,10,"pathURL"],[136,19,111,17],[136,22,111,20],[136,26,111,20,"asUrl"],[136,30,111,25],[136,31,111,25,"asUrl"],[136,36,111,25],[136,38,111,26,"pathString"],[136,48,111,36],[136,49,111,37],[137,6,112,4],[137,10,112,8,"pathURL"],[137,17,112,15],[137,19,112,17],[138,8,113,6],[138,15,113,13,"nodePath"],[138,23,113,21],[138,24,113,22,"extname"],[138,31,113,29],[138,32,113,30,"decodeURIComponent"],[138,50,113,48],[138,51,113,49,"pathURL"],[138,58,113,56],[138,59,113,57,"pathname"],[138,67,113,65],[138,68,113,66],[138,69,113,67],[139,6,114,4],[140,6,115,4],[140,13,115,11,"nodePath"],[140,21,115,19],[140,22,115,20,"extname"],[140,29,115,27],[140,30,115,28,"pathString"],[140,40,115,38],[140,41,115,39],[141,4,116,2],[143,4,118,2],[144,0,119,0],[145,0,120,0],[146,0,121,0],[147,0,122,0],[148,4,123,2],[148,11,123,9,"parse"],[148,16,123,14,"parse"],[148,17,123,15,"path"],[148,21,123,46],[148,23,129,4],[149,6,130,4],[149,12,130,10,"pathString"],[149,22,130,20],[149,25,130,23,"uriObjectToString"],[149,42,130,40],[149,43,130,41,"path"],[149,47,130,45],[149,48,130,46],[150,6,131,4],[150,12,131,10,"pathURL"],[150,19,131,17],[150,22,131,20],[150,26,131,20,"asUrl"],[150,30,131,25],[150,31,131,25,"asUrl"],[150,36,131,25],[150,38,131,26,"pathString"],[150,48,131,36],[150,49,131,37],[151,6,132,4],[151,10,132,8,"pathURL"],[151,17,132,15],[151,19,132,17],[152,8,133,6],[152,15,133,13,"nodePath"],[152,23,133,21],[152,24,133,22,"parse"],[152,29,133,27],[152,30,133,28,"decodeURIComponent"],[152,48,133,46],[152,49,133,47,"pathURL"],[152,56,133,54],[152,57,133,55,"pathname"],[152,65,133,63],[152,66,133,64],[152,67,133,65],[153,6,134,4],[154,6,135,4],[154,13,135,11,"nodePath"],[154,21,135,19],[154,22,135,20,"parse"],[154,27,135,25],[154,28,135,26,"pathString"],[154,38,135,36],[154,39,135,37],[155,4,136,2],[156,2,137,0],[157,0,137,1],[157,3]],"functionMap":{"names":["<global>","uriObjectToString","PathUtilities","PathUtilities.join","PathUtilities.relative","PathUtilities.isAbsolute","PathUtilities.normalize","PathUtilities.dirname","PathUtilities.basename","PathUtilities.extname","PathUtilities.parse"],"mappings":"AAA;ACI;CDE;OEE;ECM;GDQ;EEQ;GFa;EGO;GHM;EIO;GJQ;EKO;GLQ;EMQ;GNO;EOO;GPO;EQO;GRa;CFC"},"hasCjsExports":false},"type":"js/module"}]}