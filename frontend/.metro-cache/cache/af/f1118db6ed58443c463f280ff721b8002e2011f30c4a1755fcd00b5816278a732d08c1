{"dependencies":[{"name":"./ExpoFileSystem","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"/tbHENDhUbs1v4pHoMIuHmAVnrg=","exportNames":["*"],"imports":1}},{"name":"./pathUtilities","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":120},"end":{"line":3,"column":48,"index":168}}],"key":"wSdBUVfuDd6va5dVO/iTbNgXYKw=","exportNames":["*"],"imports":1}},{"name":"./streams","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":169},"end":{"line":4,"column":83,"index":252}}],"key":"Ae4Xv6sBFHzbqqhb6pHh3gVEEWE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"Paths\", {\n    enumerable: true,\n    get: function () {\n      return Paths;\n    }\n  });\n  Object.defineProperty(exports, \"File\", {\n    enumerable: true,\n    get: function () {\n      return File;\n    }\n  });\n  Object.defineProperty(exports, \"Directory\", {\n    enumerable: true,\n    get: function () {\n      return Directory;\n    }\n  });\n  var _ExpoFileSystem = require(_dependencyMap[0], \"./ExpoFileSystem\");\n  var ExpoFileSystem = _interopDefault(_ExpoFileSystem);\n  var _pathUtilities = require(_dependencyMap[1], \"./pathUtilities\");\n  var _streams = require(_dependencyMap[2], \"./streams\");\n  class Paths extends _pathUtilities.PathUtilities {\n    /**\n     * A property containing the cache directory – a place to store files that can be deleted by the system when the device runs low on storage.\n     */\n    static get cache() {\n      return new Directory(ExpoFileSystem.default.cacheDirectory);\n    }\n\n    /**\n     * A property containing the bundle directory – the directory where assets bundled with the application are stored.\n     */\n    static get bundle() {\n      return new Directory(ExpoFileSystem.default.bundleDirectory);\n    }\n\n    /**\n     * A property containing the document directory – a place to store files that are safe from being deleted by the system.\n     */\n    static get document() {\n      return new Directory(ExpoFileSystem.default.documentDirectory);\n    }\n    static get appleSharedContainers() {\n      const containers = ExpoFileSystem.default.appleSharedContainers ?? {};\n      const result = {};\n      for (const appGroupId in containers) {\n        if (containers[appGroupId]) {\n          result[appGroupId] = new Directory(containers[appGroupId]);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A property that represents the total space on device's internal storage, represented in bytes.\n     */\n    static get totalDiskSpace() {\n      return ExpoFileSystem.default.totalDiskSpace;\n    }\n\n    /**\n     * A property that represents the available space on device's internal storage, represented in bytes.\n     */\n    static get availableDiskSpace() {\n      return ExpoFileSystem.default.availableDiskSpace;\n    }\n\n    /**\n     * Returns an object that indicates if the specified path represents a directory.\n     */\n    static info(...uris) {\n      return ExpoFileSystem.default.info(uris.join('/'));\n    }\n  }\n\n  /**\n   * Represents a file on the filesystem.\n   *\n   * A `File` instance can be created for any path, and does not need to exist on the filesystem during creation.\n   *\n   * The constructor accepts an array of strings that are joined to create the file URI. The first argument can also be a `Directory` instance (like `Paths.cache`) or a `File` instance (which creates a new reference to the same file).\n   * @example\n   * ```ts\n   * const file = new File(File.cache, \"subdirName\", \"file.txt\");\n   * ```\n   */\n  class File extends ExpoFileSystem.default.FileSystemFile {\n    /**\n     * Creates an instance of a file. It can be created for any path, and does not need to exist on the filesystem during creation.\n     *\n     * The constructor accepts an array of strings that are joined to create the file URI. The first argument can also be a `Directory` instance (like `Paths.cache`) or a `File` instance (which creates a new reference to the same file).\n     * @param uris An array of: `file:///` string URIs, `File` instances, and `Directory` instances representing an arbitrary location on the file system.\n     * @example\n     * ```ts\n     * const file = new File(File.cache, \"subdirName\", \"file.txt\");\n     * ```\n     */\n    constructor(...uris) {\n      super(Paths.join(...uris));\n      this.validatePath();\n    }\n\n    /*\n     * Directory containing the file.\n     */\n    get parentDirectory() {\n      return new Directory(Paths.dirname(this.uri));\n    }\n\n    /**\n     * File extension.\n     * @example '.png'\n     */\n    get extension() {\n      return Paths.extname(this.uri);\n    }\n\n    /**\n     * File name. Includes the extension.\n     */\n    get name() {\n      return Paths.basename(this.uri);\n    }\n    readableStream() {\n      return new ReadableStream(new _streams.FileSystemReadableStreamSource(super.open()));\n    }\n    writableStream() {\n      return new WritableStream(new _streams.FileSystemWritableSink(super.open()));\n    }\n    async arrayBuffer() {\n      const bytes = await this.bytes();\n      return bytes.buffer;\n    }\n    stream() {\n      return this.readableStream();\n    }\n    slice(start, end, contentType) {\n      return new Blob([this.bytesSync().slice(start, end)], {\n        type: contentType\n      });\n    }\n  }\n\n  // Cannot use `static` keyword in class declaration because of a runtime error.\n  File.downloadFileAsync = async function downloadFileAsync(url, to, options) {\n    const outputURI = await ExpoFileSystem.default.downloadFileAsync(url, to, options);\n    return new File(outputURI);\n  };\n  File.pickFileAsync = async function (initialUri, mimeType) {\n    const file = (await ExpoFileSystem.default.pickFileAsync(initialUri, mimeType)).uri;\n    return new File(file);\n  };\n\n  /**\n   * Represents a directory on the filesystem.\n   *\n   * A `Directory` instance can be created for any path, and does not need to exist on the filesystem during creation.\n   *\n   * The constructor accepts an array of strings that are joined to create the directory URI. The first argument can also be a `Directory` instance (like `Paths.cache`).\n   * @example\n   * ```ts\n   * const directory = new Directory(File.cache, \"subdirName\");\n   * ```\n   */\n  class Directory extends ExpoFileSystem.default.FileSystemDirectory {\n    /**\n     * Creates an instance of a directory. It can be created for any path, and does not need to exist on the filesystem during creation.\n     *\n     * The constructor accepts an array of strings that are joined to create the directory URI. The first argument can also be a `Directory` instance (like `Paths.cache`).\n     * @param uris An array of: `file:///` string URIs, `File` instances, and `Directory` instances representing an arbitrary location on the file system.\n     * @example\n     * ```ts\n     * const directory = new Directory(File.cache, \"subdirName\");\n     * ```\n     */\n    constructor(...uris) {\n      super(Paths.join(...uris));\n      this.validatePath();\n    }\n\n    /*\n     * Directory containing the file.\n     */\n    get parentDirectory() {\n      return new Directory(Paths.join(this.uri, '..'));\n    }\n\n    /**\n     * Lists the contents of a directory.\n     * Calling this method if the parent directory does not exist will throw an error.\n     * @returns An array of `Directory` and `File` instances.\n     */\n    list() {\n      // We need to wrap it in the JS File/Directory classes, and returning SharedObjects in lists is not supported yet on Android.\n      return super.listAsRecords().map(({\n        isDirectory,\n        uri\n      }) => isDirectory ? new Directory(uri) : new File(uri));\n    }\n\n    /**\n     * Directory name.\n     */\n    get name() {\n      return Paths.basename(this.uri);\n    }\n    createFile(name, mimeType) {\n      // Wrapping with the JS child class for additional, JS-only methods.\n      return new File(super.createFile(name, mimeType).uri);\n    }\n    createDirectory(name) {\n      return new Directory(super.createDirectory(name).uri);\n    }\n  }\n  Directory.pickDirectoryAsync = async function (initialUri) {\n    const directory = (await ExpoFileSystem.default.pickDirectoryAsync(initialUri)).uri;\n    return new Directory(directory);\n  };\n});","lineCount":231,"map":[[12,2,6,0,"Object"],[12,8,6,0],[12,9,6,0,"defineProperty"],[12,23,6,0],[12,24,6,0,"exports"],[12,31,6,0],[13,4,6,0,"enumerable"],[13,14,6,0],[14,4,6,0,"get"],[14,7,6,0],[14,18,6,0,"get"],[14,19,6,0],[15,6,6,0],[15,13,6,0,"Paths"],[15,18,6,0],[16,4,6,0],[17,2,6,0],[18,2,71,0,"Object"],[18,8,71,0],[18,9,71,0,"defineProperty"],[18,23,71,0],[18,24,71,0,"exports"],[18,31,71,0],[19,4,71,0,"enumerable"],[19,14,71,0],[20,4,71,0,"get"],[20,7,71,0],[20,18,71,0,"get"],[20,19,71,0],[21,6,71,0],[21,13,71,0,"File"],[21,17,71,0],[22,4,71,0],[23,2,71,0],[24,2,157,0,"Object"],[24,8,157,0],[24,9,157,0,"defineProperty"],[24,23,157,0],[24,24,157,0,"exports"],[24,31,157,0],[25,4,157,0,"enumerable"],[25,14,157,0],[26,4,157,0,"get"],[26,7,157,0],[26,18,157,0,"get"],[26,19,157,0],[27,6,157,0],[27,13,157,0,"Directory"],[27,22,157,0],[28,4,157,0],[29,2,157,0],[30,2,1,0],[30,6,1,0,"_ExpoFileSystem"],[30,21,1,0],[30,24,1,0,"require"],[30,31,1,0],[30,32,1,0,"_dependencyMap"],[30,46,1,0],[31,2,1,0],[31,6,1,0,"ExpoFileSystem"],[31,20,1,0],[31,23,1,0,"_interopDefault"],[31,38,1,0],[31,39,1,0,"_ExpoFileSystem"],[31,54,1,0],[32,2,3,0],[32,6,3,0,"_pathUtilities"],[32,20,3,0],[32,23,3,0,"require"],[32,30,3,0],[32,31,3,0,"_dependencyMap"],[32,45,3,0],[33,2,4,0],[33,6,4,0,"_streams"],[33,14,4,0],[33,17,4,0,"require"],[33,24,4,0],[33,25,4,0,"_dependencyMap"],[33,39,4,0],[34,2,6,7],[34,8,6,13,"Paths"],[34,13,6,18],[34,22,6,27,"PathUtilities"],[34,36,6,40],[34,37,6,40,"PathUtilities"],[34,50,6,40],[34,51,6,41],[35,4,7,2],[36,0,8,0],[37,0,9,0],[38,4,10,2],[38,15,10,13,"cache"],[38,20,10,18,"cache"],[38,21,10,18],[38,23,10,21],[39,6,11,4],[39,13,11,11],[39,17,11,15,"Directory"],[39,26,11,24],[39,27,11,25,"ExpoFileSystem"],[39,41,11,39],[39,42,11,39,"default"],[39,49,11,39],[39,50,11,40,"cacheDirectory"],[39,64,11,54],[39,65,11,55],[40,4,12,2],[42,4,14,2],[43,0,15,0],[44,0,16,0],[45,4,17,2],[45,15,17,13,"bundle"],[45,21,17,19,"bundle"],[45,22,17,19],[45,24,17,22],[46,6,18,4],[46,13,18,11],[46,17,18,15,"Directory"],[46,26,18,24],[46,27,18,25,"ExpoFileSystem"],[46,41,18,39],[46,42,18,39,"default"],[46,49,18,39],[46,50,18,40,"bundleDirectory"],[46,65,18,55],[46,66,18,56],[47,4,19,2],[49,4,21,2],[50,0,22,0],[51,0,23,0],[52,4,24,2],[52,15,24,13,"document"],[52,23,24,21,"document"],[52,24,24,21],[52,26,24,24],[53,6,25,4],[53,13,25,11],[53,17,25,15,"Directory"],[53,26,25,24],[53,27,25,25,"ExpoFileSystem"],[53,41,25,39],[53,42,25,39,"default"],[53,49,25,39],[53,50,25,40,"documentDirectory"],[53,67,25,57],[53,68,25,58],[54,4,26,2],[55,4,27,2],[55,15,27,13,"appleSharedContainers"],[55,36,27,34,"appleSharedContainers"],[55,37,27,34],[55,39,27,37],[56,6,28,4],[56,12,28,10,"containers"],[56,22,28,44],[56,25,28,47,"ExpoFileSystem"],[56,39,28,61],[56,40,28,61,"default"],[56,47,28,61],[56,48,28,62,"appleSharedContainers"],[56,69,28,83],[56,73,28,87],[56,74,28,88],[56,75,28,89],[57,6,29,4],[57,12,29,10,"result"],[57,18,29,43],[57,21,29,46],[57,22,29,47],[57,23,29,48],[58,6,30,4],[58,11,30,9],[58,17,30,15,"appGroupId"],[58,27,30,25],[58,31,30,29,"containers"],[58,41,30,39],[58,43,30,41],[59,8,31,6],[59,12,31,10,"containers"],[59,22,31,20],[59,23,31,21,"appGroupId"],[59,33,31,31],[59,34,31,32],[59,36,31,34],[60,10,32,8,"result"],[60,16,32,14],[60,17,32,15,"appGroupId"],[60,27,32,25],[60,28,32,26],[60,31,32,29],[60,35,32,33,"Directory"],[60,44,32,42],[60,45,32,43,"containers"],[60,55,32,53],[60,56,32,54,"appGroupId"],[60,66,32,64],[60,67,32,65],[60,68,32,66],[61,8,33,6],[62,6,34,4],[63,6,35,4],[63,13,35,11,"result"],[63,19,35,17],[64,4,36,2],[66,4,38,2],[67,0,39,0],[68,0,40,0],[69,4,41,2],[69,15,41,13,"totalDiskSpace"],[69,29,41,27,"totalDiskSpace"],[69,30,41,27],[69,32,41,30],[70,6,42,4],[70,13,42,11,"ExpoFileSystem"],[70,27,42,25],[70,28,42,25,"default"],[70,35,42,25],[70,36,42,26,"totalDiskSpace"],[70,50,42,40],[71,4,43,2],[73,4,45,2],[74,0,46,0],[75,0,47,0],[76,4,48,2],[76,15,48,13,"availableDiskSpace"],[76,33,48,31,"availableDiskSpace"],[76,34,48,31],[76,36,48,34],[77,6,49,4],[77,13,49,11,"ExpoFileSystem"],[77,27,49,25],[77,28,49,25,"default"],[77,35,49,25],[77,36,49,26,"availableDiskSpace"],[77,54,49,44],[78,4,50,2],[80,4,52,2],[81,0,53,0],[82,0,54,0],[83,4,55,2],[83,11,55,9,"info"],[83,15,55,13,"info"],[83,16,55,14],[83,19,55,17,"uris"],[83,23,55,31],[83,25,55,43],[84,6,56,4],[84,13,56,11,"ExpoFileSystem"],[84,27,56,25],[84,28,56,25,"default"],[84,35,56,25],[84,36,56,26,"info"],[84,40,56,30],[84,41,56,31,"uris"],[84,45,56,35],[84,46,56,36,"join"],[84,50,56,40],[84,51,56,41],[84,54,56,44],[84,55,56,45],[84,56,56,46],[85,4,57,2],[86,2,58,0],[88,2,60,0],[89,0,61,0],[90,0,62,0],[91,0,63,0],[92,0,64,0],[93,0,65,0],[94,0,66,0],[95,0,67,0],[96,0,68,0],[97,0,69,0],[98,0,70,0],[99,2,71,7],[99,8,71,13,"File"],[99,12,71,17],[99,21,71,26,"ExpoFileSystem"],[99,35,71,40],[99,36,71,40,"default"],[99,43,71,40],[99,44,71,41,"FileSystemFile"],[99,58,71,55],[99,59,71,72],[100,4,72,2],[101,0,73,0],[102,0,74,0],[103,0,75,0],[104,0,76,0],[105,0,77,0],[106,0,78,0],[107,0,79,0],[108,0,80,0],[109,0,81,0],[110,4,82,2,"constructor"],[110,15,82,13,"constructor"],[110,16,82,14],[110,19,82,17,"uris"],[110,23,82,52],[110,25,82,54],[111,6,83,4],[111,11,83,9],[111,12,83,10,"Paths"],[111,17,83,15],[111,18,83,16,"join"],[111,22,83,20],[111,23,83,21],[111,26,83,24,"uris"],[111,30,83,28],[111,31,83,29],[111,32,83,30],[112,6,84,4],[112,10,84,8],[112,11,84,9,"validatePath"],[112,23,84,21],[112,24,84,22],[112,25,84,23],[113,4,85,2],[115,4,87,2],[116,0,88,0],[117,0,89,0],[118,4,90,2],[118,8,90,6,"parentDirectory"],[118,23,90,21,"parentDirectory"],[118,24,90,21],[118,26,90,24],[119,6,91,4],[119,13,91,11],[119,17,91,15,"Directory"],[119,26,91,24],[119,27,91,25,"Paths"],[119,32,91,30],[119,33,91,31,"dirname"],[119,40,91,38],[119,41,91,39],[119,45,91,43],[119,46,91,44,"uri"],[119,49,91,47],[119,50,91,48],[119,51,91,49],[120,4,92,2],[122,4,94,2],[123,0,95,0],[124,0,96,0],[125,0,97,0],[126,4,98,2],[126,8,98,6,"extension"],[126,17,98,15,"extension"],[126,18,98,15],[126,20,98,18],[127,6,99,4],[127,13,99,11,"Paths"],[127,18,99,16],[127,19,99,17,"extname"],[127,26,99,24],[127,27,99,25],[127,31,99,29],[127,32,99,30,"uri"],[127,35,99,33],[127,36,99,34],[128,4,100,2],[130,4,102,2],[131,0,103,0],[132,0,104,0],[133,4,105,2],[133,8,105,6,"name"],[133,12,105,10,"name"],[133,13,105,10],[133,15,105,13],[134,6,106,4],[134,13,106,11,"Paths"],[134,18,106,16],[134,19,106,17,"basename"],[134,27,106,25],[134,28,106,26],[134,32,106,30],[134,33,106,31,"uri"],[134,36,106,34],[134,37,106,35],[135,4,107,2],[136,4,109,2,"readableStream"],[136,18,109,16,"readableStream"],[136,19,109,16],[136,21,109,19],[137,6,110,4],[137,13,110,11],[137,17,110,15,"ReadableStream"],[137,31,110,29],[137,32,110,30],[137,36,110,34,"FileSystemReadableStreamSource"],[137,44,110,64],[137,45,110,64,"FileSystemReadableStreamSource"],[137,75,110,64],[137,76,110,65],[137,81,110,70],[137,82,110,71,"open"],[137,86,110,75],[137,87,110,76],[137,88,110,77],[137,89,110,78],[137,90,110,79],[138,4,111,2],[139,4,113,2,"writableStream"],[139,18,113,16,"writableStream"],[139,19,113,16],[139,21,113,19],[140,6,114,4],[140,13,114,11],[140,17,114,15,"WritableStream"],[140,31,114,29],[140,32,114,42],[140,36,114,46,"FileSystemWritableSink"],[140,44,114,68],[140,45,114,68,"FileSystemWritableSink"],[140,67,114,68],[140,68,114,69],[140,73,114,74],[140,74,114,75,"open"],[140,78,114,79],[140,79,114,80],[140,80,114,81],[140,81,114,82],[140,82,114,83],[141,4,115,2],[142,4,117,2],[142,10,117,8,"arrayBuffer"],[142,21,117,19,"arrayBuffer"],[142,22,117,19],[142,24,117,44],[143,6,118,4],[143,12,118,10,"bytes"],[143,17,118,15],[143,20,118,18],[143,26,118,24],[143,30,118,28],[143,31,118,29,"bytes"],[143,36,118,34],[143,37,118,35],[143,38,118,36],[144,6,119,4],[144,13,119,11,"bytes"],[144,18,119,16],[144,19,119,17,"buffer"],[144,25,119,23],[145,4,120,2],[146,4,122,2,"stream"],[146,10,122,8,"stream"],[146,11,122,8],[146,13,122,52],[147,6,123,4],[147,13,123,11],[147,17,123,15],[147,18,123,16,"readableStream"],[147,32,123,30],[147,33,123,31],[147,34,123,32],[148,4,124,2],[149,4,126,2,"slice"],[149,9,126,7,"slice"],[149,10,126,8,"start"],[149,15,126,22],[149,17,126,24,"end"],[149,20,126,36],[149,22,126,38,"contentType"],[149,33,126,58],[149,35,126,66],[150,6,127,4],[150,13,127,11],[150,17,127,15,"Blob"],[150,21,127,19],[150,22,127,20],[150,23,127,21],[150,27,127,25],[150,28,127,26,"bytesSync"],[150,37,127,35],[150,38,127,36],[150,39,127,37],[150,40,127,38,"slice"],[150,45,127,43],[150,46,127,44,"start"],[150,51,127,49],[150,53,127,51,"end"],[150,56,127,54],[150,57,127,55],[150,58,127,56],[150,60,127,58],[151,8,127,60,"type"],[151,12,127,64],[151,14,127,66,"contentType"],[152,6,127,78],[152,7,127,79],[152,8,127,80],[153,4,128,2],[154,2,129,0],[156,2,131,0],[157,2,132,0,"File"],[157,6,132,4],[157,7,132,5,"downloadFileAsync"],[157,24,132,22],[157,27,132,25],[157,42,132,40,"downloadFileAsync"],[157,59,132,57,"downloadFileAsync"],[157,60,133,2,"url"],[157,63,133,13],[157,65,134,2,"to"],[157,67,134,22],[157,69,135,2,"options"],[157,76,135,27],[157,78,136,2],[158,4,137,2],[158,10,137,8,"outputURI"],[158,19,137,17],[158,22,137,20],[158,28,137,26,"ExpoFileSystem"],[158,42,137,40],[158,43,137,40,"default"],[158,50,137,40],[158,51,137,41,"downloadFileAsync"],[158,68,137,58],[158,69,137,59,"url"],[158,72,137,62],[158,74,137,64,"to"],[158,76,137,66],[158,78,137,68,"options"],[158,85,137,75],[158,86,137,76],[159,4,138,2],[159,11,138,9],[159,15,138,13,"File"],[159,19,138,17],[159,20,138,18,"outputURI"],[159,29,138,27],[159,30,138,28],[160,2,139,0],[160,3,139,1],[161,2,141,0,"File"],[161,6,141,4],[161,7,141,5,"pickFileAsync"],[161,20,141,18],[161,23,141,21],[161,39,141,37,"initialUri"],[161,49,141,56],[161,51,141,58,"mimeType"],[161,59,141,75],[161,61,141,77],[162,4,142,2],[162,10,142,8,"file"],[162,14,142,12],[162,17,142,15],[162,18,142,16],[162,24,142,22,"ExpoFileSystem"],[162,38,142,36],[162,39,142,36,"default"],[162,46,142,36],[162,47,142,37,"pickFileAsync"],[162,60,142,50],[162,61,142,51,"initialUri"],[162,71,142,61],[162,73,142,63,"mimeType"],[162,81,142,71],[162,82,142,72],[162,84,142,74,"uri"],[162,87,142,77],[163,4,143,2],[163,11,143,9],[163,15,143,13,"File"],[163,19,143,17],[163,20,143,18,"file"],[163,24,143,22],[163,25,143,23],[164,2,144,0],[164,3,144,1],[166,2,146,0],[167,0,147,0],[168,0,148,0],[169,0,149,0],[170,0,150,0],[171,0,151,0],[172,0,152,0],[173,0,153,0],[174,0,154,0],[175,0,155,0],[176,0,156,0],[177,2,157,7],[177,8,157,13,"Directory"],[177,17,157,22],[177,26,157,31,"ExpoFileSystem"],[177,40,157,45],[177,41,157,45,"default"],[177,48,157,45],[177,49,157,46,"FileSystemDirectory"],[177,68,157,65],[177,69,157,66],[178,4,158,2],[179,0,159,0],[180,0,160,0],[181,0,161,0],[182,0,162,0],[183,0,163,0],[184,0,164,0],[185,0,165,0],[186,0,166,0],[187,0,167,0],[188,4,168,2,"constructor"],[188,15,168,13,"constructor"],[188,16,168,14],[188,19,168,17,"uris"],[188,23,168,52],[188,25,168,54],[189,6,169,4],[189,11,169,9],[189,12,169,10,"Paths"],[189,17,169,15],[189,18,169,16,"join"],[189,22,169,20],[189,23,169,21],[189,26,169,24,"uris"],[189,30,169,28],[189,31,169,29],[189,32,169,30],[190,6,170,4],[190,10,170,8],[190,11,170,9,"validatePath"],[190,23,170,21],[190,24,170,22],[190,25,170,23],[191,4,171,2],[193,4,173,2],[194,0,174,0],[195,0,175,0],[196,4,176,2],[196,8,176,6,"parentDirectory"],[196,23,176,21,"parentDirectory"],[196,24,176,21],[196,26,176,24],[197,6,177,4],[197,13,177,11],[197,17,177,15,"Directory"],[197,26,177,24],[197,27,177,25,"Paths"],[197,32,177,30],[197,33,177,31,"join"],[197,37,177,35],[197,38,177,36],[197,42,177,40],[197,43,177,41,"uri"],[197,46,177,44],[197,48,177,46],[197,52,177,50],[197,53,177,51],[197,54,177,52],[198,4,178,2],[200,4,180,2],[201,0,181,0],[202,0,182,0],[203,0,183,0],[204,0,184,0],[205,4,185,11,"list"],[205,8,185,15,"list"],[205,9,185,15],[205,11,185,40],[206,6,186,4],[207,6,187,4],[207,13,187,11],[207,18,187,16],[207,19,188,7,"listAsRecords"],[207,32,188,20],[207,33,188,21],[207,34,188,22],[207,35,189,7,"map"],[207,38,189,10],[207,39,189,11],[207,40,189,12],[208,8,189,14,"isDirectory"],[208,19,189,25],[209,8,189,27,"uri"],[210,6,189,31],[210,7,189,32],[210,12,189,38,"isDirectory"],[210,23,189,49],[210,26,189,52],[210,30,189,56,"Directory"],[210,39,189,65],[210,40,189,66,"uri"],[210,43,189,69],[210,44,189,70],[210,47,189,73],[210,51,189,77,"File"],[210,55,189,81],[210,56,189,82,"uri"],[210,59,189,85],[210,60,189,87],[210,61,189,88],[211,4,190,2],[213,4,192,2],[214,0,193,0],[215,0,194,0],[216,4,195,2],[216,8,195,6,"name"],[216,12,195,10,"name"],[216,13,195,10],[216,15,195,13],[217,6,196,4],[217,13,196,11,"Paths"],[217,18,196,16],[217,19,196,17,"basename"],[217,27,196,25],[217,28,196,26],[217,32,196,30],[217,33,196,31,"uri"],[217,36,196,34],[217,37,196,35],[218,4,197,2],[219,4,199,2,"createFile"],[219,14,199,12,"createFile"],[219,15,199,13,"name"],[219,19,199,25],[219,21,199,27,"mimeType"],[219,29,199,50],[219,31,199,58],[220,6,200,4],[221,6,201,4],[221,13,201,11],[221,17,201,15,"File"],[221,21,201,19],[221,22,201,20],[221,27,201,25],[221,28,201,26,"createFile"],[221,38,201,36],[221,39,201,37,"name"],[221,43,201,41],[221,45,201,43,"mimeType"],[221,53,201,51],[221,54,201,52],[221,55,201,53,"uri"],[221,58,201,56],[221,59,201,57],[222,4,202,2],[223,4,204,2,"createDirectory"],[223,19,204,17,"createDirectory"],[223,20,204,18,"name"],[223,24,204,30],[223,26,204,43],[224,6,205,4],[224,13,205,11],[224,17,205,15,"Directory"],[224,26,205,24],[224,27,205,25],[224,32,205,30],[224,33,205,31,"createDirectory"],[224,48,205,46],[224,49,205,47,"name"],[224,53,205,51],[224,54,205,52],[224,55,205,53,"uri"],[224,58,205,56],[224,59,205,57],[225,4,206,2],[226,2,207,0],[227,2,209,0,"Directory"],[227,11,209,9],[227,12,209,10,"pickDirectoryAsync"],[227,30,209,28],[227,33,209,31],[227,49,209,47,"initialUri"],[227,59,209,66],[227,61,209,68],[228,4,210,2],[228,10,210,8,"directory"],[228,19,210,17],[228,22,210,20],[228,23,210,21],[228,29,210,27,"ExpoFileSystem"],[228,43,210,41],[228,44,210,41,"default"],[228,51,210,41],[228,52,210,42,"pickDirectoryAsync"],[228,70,210,60],[228,71,210,61,"initialUri"],[228,81,210,71],[228,82,210,72],[228,84,210,74,"uri"],[228,87,210,77],[229,4,211,2],[229,11,211,9],[229,15,211,13,"Directory"],[229,24,211,22],[229,25,211,23,"directory"],[229,34,211,32],[229,35,211,33],[230,2,212,0],[230,3,212,1],[231,0,212,2],[231,3]],"functionMap":{"names":["<global>","Paths","Paths.get__cache","Paths.get__bundle","Paths.get__document","Paths.get__appleSharedContainers","Paths.get__totalDiskSpace","Paths.get__availableDiskSpace","Paths.info","File","File#constructor","File#get__parentDirectory","File#get__extension","File#get__name","File#readableStream","File#writableStream","File#arrayBuffer","File#stream","File#slice","downloadFileAsync","File.pickFileAsync","Directory","Directory#constructor","Directory#get__parentDirectory","Directory#list","listAsRecords.map$argument_0","Directory#get__name","Directory#createFile","Directory#createDirectory","Directory.pickDirectoryAsync"],"mappings":"AAA;OCK;ECI;GDE;EEK;GFE;EGK;GHE;EIC;GJS;EKK;GLE;EMK;GNE;EOK;GPE;CDC;OSa;ECW;GDG;EEK;GFE;EGM;GHE;EIK;GJE;EKE;GLE;EME;GNE;EOE;GPG;EQE;GRE;ESE;GTE;CTC;yBmBG;CnBO;qBoBE;CpBG;OqBa;ECW;GDG;EEK;GFE;EGO;WCI,4ED;GHC;EKK;GLE;EME;GNG;EOE;GPE;CrBC;+B6BE;C7BG"},"hasCjsExports":false},"type":"js/module"}]}