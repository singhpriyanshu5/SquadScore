{"dependencies":[{"name":"./_lib/normalizeInterval.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"RgnQ5fGQDzGiH1jMCpSamjCAQN4=","exportNames":["*"],"imports":1}},{"name":"./addWeeks.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":65},"end":{"line":2,"column":41,"index":106}}],"key":"WbXWlJ47iqg6m+zxE/w0za675g4=","exportNames":["*"],"imports":1}},{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":107},"end":{"line":3,"column":51,"index":158}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"],"imports":1}},{"name":"./startOfWeek.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":159},"end":{"line":4,"column":47,"index":206}}],"key":"P3QLf1gnhZwOwCLzrccpsspoyVY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.eachWeekOfInterval = eachWeekOfInterval;\n  var _libNormalizeIntervalJs = require(_dependencyMap[0], \"./_lib/normalizeInterval.js\");\n  var _addWeeksJs = require(_dependencyMap[1], \"./addWeeks.js\");\n  var _constructFromJs = require(_dependencyMap[2], \"./constructFrom.js\");\n  var _startOfWeekJs = require(_dependencyMap[3], \"./startOfWeek.js\");\n  /**\n   * The {@link eachWeekOfInterval} function options.\n   */\n\n  /**\n   * The {@link eachWeekOfInterval} function result type. It resolves the proper data type.\n   * It uses the first argument date object type, starting from the interval start date,\n   * then the end interval date. If a context function is passed, it uses the context function return type.\n   */\n\n  /**\n   * @name eachWeekOfInterval\n   * @category Interval Helpers\n   * @summary Return the array of weeks within the specified time interval.\n   *\n   * @description\n   * Return the array of weeks within the specified time interval.\n   *\n   * @param interval - The interval.\n   * @param options - An object with options.\n   *\n   * @returns The array with starts of weeks from the week of the interval start to the week of the interval end\n   *\n   * @example\n   * // Each week within interval 6 October 2014 - 23 November 2014:\n   * const result = eachWeekOfInterval({\n   *   start: new Date(2014, 9, 6),\n   *   end: new Date(2014, 10, 23)\n   * })\n   * //=> [\n   * //   Sun Oct 05 2014 00:00:00,\n   * //   Sun Oct 12 2014 00:00:00,\n   * //   Sun Oct 19 2014 00:00:00,\n   * //   Sun Oct 26 2014 00:00:00,\n   * //   Sun Nov 02 2014 00:00:00,\n   * //   Sun Nov 09 2014 00:00:00,\n   * //   Sun Nov 16 2014 00:00:00,\n   * //   Sun Nov 23 2014 00:00:00\n   * // ]\n   */\n  function eachWeekOfInterval(interval, options) {\n    var _normalizeInterval = (0, _libNormalizeIntervalJs.normalizeInterval)(options?.in, interval),\n      start = _normalizeInterval.start,\n      end = _normalizeInterval.end;\n    var reversed = +start > +end;\n    var startDateWeek = reversed ? (0, _startOfWeekJs.startOfWeek)(end, options) : (0, _startOfWeekJs.startOfWeek)(start, options);\n    var endDateWeek = reversed ? (0, _startOfWeekJs.startOfWeek)(start, options) : (0, _startOfWeekJs.startOfWeek)(end, options);\n    startDateWeek.setHours(15);\n    endDateWeek.setHours(15);\n    var endTime = +endDateWeek.getTime();\n    var currentDate = startDateWeek;\n    var step = options?.step ?? 1;\n    if (!step) return [];\n    if (step < 0) {\n      step = -step;\n      reversed = !reversed;\n    }\n    var dates = [];\n    while (+currentDate <= endTime) {\n      currentDate.setHours(0);\n      dates.push((0, _constructFromJs.constructFrom)(start, currentDate));\n      currentDate = (0, _addWeeksJs.addWeeks)(currentDate, step);\n      currentDate.setHours(15);\n    }\n    return reversed ? dates.reverse() : dates;\n  }\n\n  // Fallback for modularized imports:\n  var _default = eachWeekOfInterval;\n});","lineCount":87,"map":[[7,2,83,0,"Object"],[7,8,83,0],[7,9,83,0,"defineProperty"],[7,23,83,0],[7,24,83,0,"exports"],[7,31,83,0],[8,4,83,0,"enumerable"],[8,14,83,0],[9,4,83,0,"get"],[9,7,83,0],[9,18,83,0,"get"],[9,19,83,0],[10,6,83,0],[10,13,83,0,"_default"],[10,21,83,0],[11,4,83,0],[12,2,83,0],[13,2,46,0,"exports"],[13,9,46,0],[13,10,46,0,"eachWeekOfInterval"],[13,28,46,0],[13,31,46,0,"eachWeekOfInterval"],[13,49,46,0],[14,2,1,0],[14,6,1,0,"_libNormalizeIntervalJs"],[14,29,1,0],[14,32,1,0,"require"],[14,39,1,0],[14,40,1,0,"_dependencyMap"],[14,54,1,0],[15,2,2,0],[15,6,2,0,"_addWeeksJs"],[15,17,2,0],[15,20,2,0,"require"],[15,27,2,0],[15,28,2,0,"_dependencyMap"],[15,42,2,0],[16,2,3,0],[16,6,3,0,"_constructFromJs"],[16,22,3,0],[16,25,3,0,"require"],[16,32,3,0],[16,33,3,0,"_dependencyMap"],[16,47,3,0],[17,2,4,0],[17,6,4,0,"_startOfWeekJs"],[17,20,4,0],[17,23,4,0,"require"],[17,30,4,0],[17,31,4,0,"_dependencyMap"],[17,45,4,0],[18,2,6,0],[19,0,7,0],[20,0,8,0],[22,2,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[28,2,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,0,36,0],[49,0,37,0],[50,0,38,0],[51,0,39,0],[52,0,40,0],[53,0,41,0],[54,0,42,0],[55,0,43,0],[56,0,44,0],[57,0,45,0],[58,2,46,7],[58,11,46,16,"eachWeekOfInterval"],[58,29,46,34,"eachWeekOfInterval"],[58,30,46,35,"interval"],[58,38,46,43],[58,40,46,45,"options"],[58,47,46,52],[58,49,46,54],[59,4,47,2],[59,8,47,2,"_normalizeInterval"],[59,26,47,2],[59,29,47,25],[59,33,47,25,"normalizeInterval"],[59,56,47,42],[59,57,47,42,"normalizeInterval"],[59,74,47,42],[59,76,47,43,"options"],[59,83,47,50],[59,85,47,52,"in"],[59,87,47,54],[59,89,47,56,"interval"],[59,97,47,64],[59,98,47,65],[60,6,47,10,"start"],[60,11,47,15],[60,14,47,15,"_normalizeInterval"],[60,32,47,15],[60,33,47,10,"start"],[60,38,47,15],[61,6,47,17,"end"],[61,9,47,20],[61,12,47,20,"_normalizeInterval"],[61,30,47,20],[61,31,47,17,"end"],[61,34,47,20],[62,4,49,2],[62,8,49,6,"reversed"],[62,16,49,14],[62,19,49,17],[62,20,49,18,"start"],[62,25,49,23],[62,28,49,26],[62,29,49,27,"end"],[62,32,49,30],[63,4,50,2],[63,8,50,8,"startDateWeek"],[63,21,50,21],[63,24,50,24,"reversed"],[63,32,50,32],[63,35,51,6],[63,39,51,6,"startOfWeek"],[63,53,51,17],[63,54,51,17,"startOfWeek"],[63,65,51,17],[63,67,51,18,"end"],[63,70,51,21],[63,72,51,23,"options"],[63,79,51,30],[63,80,51,31],[63,83,52,6],[63,87,52,6,"startOfWeek"],[63,101,52,17],[63,102,52,17,"startOfWeek"],[63,113,52,17],[63,115,52,18,"start"],[63,120,52,23],[63,122,52,25,"options"],[63,129,52,32],[63,130,52,33],[64,4,53,2],[64,8,53,8,"endDateWeek"],[64,19,53,19],[64,22,53,22,"reversed"],[64,30,53,30],[64,33,54,6],[64,37,54,6,"startOfWeek"],[64,51,54,17],[64,52,54,17,"startOfWeek"],[64,63,54,17],[64,65,54,18,"start"],[64,70,54,23],[64,72,54,25,"options"],[64,79,54,32],[64,80,54,33],[64,83,55,6],[64,87,55,6,"startOfWeek"],[64,101,55,17],[64,102,55,17,"startOfWeek"],[64,113,55,17],[64,115,55,18,"end"],[64,118,55,21],[64,120,55,23,"options"],[64,127,55,30],[64,128,55,31],[65,4,57,2,"startDateWeek"],[65,17,57,15],[65,18,57,16,"setHours"],[65,26,57,24],[65,27,57,25],[65,29,57,27],[65,30,57,28],[66,4,58,2,"endDateWeek"],[66,15,58,13],[66,16,58,14,"setHours"],[66,24,58,22],[66,25,58,23],[66,27,58,25],[66,28,58,26],[67,4,60,2],[67,8,60,8,"endTime"],[67,15,60,15],[67,18,60,18],[67,19,60,19,"endDateWeek"],[67,30,60,30],[67,31,60,31,"getTime"],[67,38,60,38],[67,39,60,39],[67,40,60,40],[68,4,61,2],[68,8,61,6,"currentDate"],[68,19,61,17],[68,22,61,20,"startDateWeek"],[68,35,61,33],[69,4,63,2],[69,8,63,6,"step"],[69,12,63,10],[69,15,63,13,"options"],[69,22,63,20],[69,24,63,22,"step"],[69,28,63,26],[69,32,63,30],[69,33,63,31],[70,4,64,2],[70,8,64,6],[70,9,64,7,"step"],[70,13,64,11],[70,15,64,13],[70,22,64,20],[70,24,64,22],[71,4,65,2],[71,8,65,6,"step"],[71,12,65,10],[71,15,65,13],[71,16,65,14],[71,18,65,16],[72,6,66,4,"step"],[72,10,66,8],[72,13,66,11],[72,14,66,12,"step"],[72,18,66,16],[73,6,67,4,"reversed"],[73,14,67,12],[73,17,67,15],[73,18,67,16,"reversed"],[73,26,67,24],[74,4,68,2],[75,4,70,2],[75,8,70,8,"dates"],[75,13,70,13],[75,16,70,16],[75,18,70,18],[76,4,72,2],[76,11,72,9],[76,12,72,10,"currentDate"],[76,23,72,21],[76,27,72,25,"endTime"],[76,34,72,32],[76,36,72,34],[77,6,73,4,"currentDate"],[77,17,73,15],[77,18,73,16,"setHours"],[77,26,73,24],[77,27,73,25],[77,28,73,26],[77,29,73,27],[78,6,74,4,"dates"],[78,11,74,9],[78,12,74,10,"push"],[78,16,74,14],[78,17,74,15],[78,21,74,15,"constructFrom"],[78,37,74,28],[78,38,74,28,"constructFrom"],[78,51,74,28],[78,53,74,29,"start"],[78,58,74,34],[78,60,74,36,"currentDate"],[78,71,74,47],[78,72,74,48],[78,73,74,49],[79,6,75,4,"currentDate"],[79,17,75,15],[79,20,75,18],[79,24,75,18,"addWeeks"],[79,35,75,26],[79,36,75,26,"addWeeks"],[79,44,75,26],[79,46,75,27,"currentDate"],[79,57,75,38],[79,59,75,40,"step"],[79,63,75,44],[79,64,75,45],[80,6,76,4,"currentDate"],[80,17,76,15],[80,18,76,16,"setHours"],[80,26,76,24],[80,27,76,25],[80,29,76,27],[80,30,76,28],[81,4,77,2],[82,4,79,2],[82,11,79,9,"reversed"],[82,19,79,17],[82,22,79,20,"dates"],[82,27,79,25],[82,28,79,26,"reverse"],[82,35,79,33],[82,36,79,34],[82,37,79,35],[82,40,79,38,"dates"],[82,45,79,43],[83,2,80,0],[85,2,82,0],[86,2,83,0],[86,6,83,0,"_default"],[86,14,83,0],[86,17,83,15,"eachWeekOfInterval"],[86,35,83,33],[87,0,83,34],[87,3]],"functionMap":{"names":["<global>","eachWeekOfInterval"],"mappings":"AAA;OC6C;CDkC"},"hasCjsExports":false},"type":"js/module"}]}