{"dependencies":[{"name":"@babel/runtime/helpers/toArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yxbT34yjmkVZuhOKwnPlwW2nTdA=","exportNames":["*"],"imports":1}},{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"p2HPneHw/OdTsxe3h3dVkKepjMk=","exportNames":["*"],"imports":1}},{"name":"./closestIndexTo.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":53,"index":112}}],"key":"sTrjGiGNFj5RRzg0+tzT7Ho4+rs=","exportNames":["*"],"imports":1}},{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":113},"end":{"line":3,"column":51,"index":164}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.closestTo = closestTo;\n  var _babelRuntimeHelpersToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/toArray\");\n  var _toArray = _interopDefault(_babelRuntimeHelpersToArray);\n  var _libNormalizeDatesJs = require(_dependencyMap[1], \"./_lib/normalizeDates.js\");\n  var _closestIndexToJs = require(_dependencyMap[2], \"./closestIndexTo.js\");\n  var _constructFromJs = require(_dependencyMap[3], \"./constructFrom.js\");\n  /**\n   * The {@link closestTo} function options.\n   */\n\n  /**\n   * The {@link closestTo} function result type. It resolves the proper data type.\n   * It uses the first argument date object type, starting from the date argument,\n   * then the start interval date, and finally the end interval date. If\n   * a context function is passed, it uses the context function return type.\n   */\n\n  /**\n   * @name closestTo\n   * @category Common Helpers\n   * @summary Return a date from the array closest to the given date.\n   *\n   * @description\n   * Return a date from the array closest to the given date.\n   *\n   * @typeParam DateToCompare - Date to compare argument type.\n   * @typeParam DatesType - Dates array argument type.\n   * @typeParam Options - Options type.\n   *\n   * @param dateToCompare - The date to compare with\n   * @param dates - The array to search\n   *\n   * @returns The date from the array closest to the given date or undefined if no valid value is given\n   *\n   * @example\n   * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?\n   * const dateToCompare = new Date(2015, 8, 6)\n   * const result = closestTo(dateToCompare, [\n   *   new Date(2000, 0, 1),\n   *   new Date(2030, 0, 1)\n   * ])\n   * //=> Tue Jan 01 2030 00:00:00\n   */\n  function closestTo(dateToCompare, dates, options) {\n    var _normalizeDates = (0, _libNormalizeDatesJs.normalizeDates)(options?.in, dateToCompare, ...dates),\n      _normalizeDates2 = (0, _toArray.default)(_normalizeDates),\n      dateToCompare_ = _normalizeDates2[0],\n      dates_ = _normalizeDates2.slice(1);\n    var index = (0, _closestIndexToJs.closestIndexTo)(dateToCompare_, dates_);\n    if (typeof index === \"number\" && isNaN(index)) return (0, _constructFromJs.constructFrom)(dateToCompare_, NaN);\n    if (index !== undefined) return dates_[index];\n  }\n\n  // Fallback for modularized imports:\n  var _default = closestTo;\n});","lineCount":73,"map":[[12,2,58,0,"Object"],[12,8,58,0],[12,9,58,0,"defineProperty"],[12,23,58,0],[12,24,58,0,"exports"],[12,31,58,0],[13,4,58,0,"enumerable"],[13,14,58,0],[14,4,58,0,"get"],[14,7,58,0],[14,18,58,0,"get"],[14,19,58,0],[15,6,58,0],[15,13,58,0,"_default"],[15,21,58,0],[16,4,58,0],[17,2,58,0],[18,2,42,0,"exports"],[18,9,42,0],[18,10,42,0,"closestTo"],[18,19,42,0],[18,22,42,0,"closestTo"],[18,31,42,0],[19,2,55,1],[19,6,55,1,"_babelRuntimeHelpersToArray"],[19,33,55,1],[19,36,55,1,"require"],[19,43,55,1],[19,44,55,1,"_dependencyMap"],[19,58,55,1],[20,2,55,1],[20,6,55,1,"_toArray"],[20,14,55,1],[20,17,55,1,"_interopDefault"],[20,32,55,1],[20,33,55,1,"_babelRuntimeHelpersToArray"],[20,60,55,1],[21,2,1,0],[21,6,1,0,"_libNormalizeDatesJs"],[21,26,1,0],[21,29,1,0,"require"],[21,36,1,0],[21,37,1,0,"_dependencyMap"],[21,51,1,0],[22,2,2,0],[22,6,2,0,"_closestIndexToJs"],[22,23,2,0],[22,26,2,0,"require"],[22,33,2,0],[22,34,2,0,"_dependencyMap"],[22,48,2,0],[23,2,3,0],[23,6,3,0,"_constructFromJs"],[23,22,3,0],[23,25,3,0,"require"],[23,32,3,0],[23,33,3,0,"_dependencyMap"],[23,47,3,0],[24,2,5,0],[25,0,6,0],[26,0,7,0],[28,2,9,0],[29,0,10,0],[30,0,11,0],[31,0,12,0],[32,0,13,0],[33,0,14,0],[35,2,16,0],[36,0,17,0],[37,0,18,0],[38,0,19,0],[39,0,20,0],[40,0,21,0],[41,0,22,0],[42,0,23,0],[43,0,24,0],[44,0,25,0],[45,0,26,0],[46,0,27,0],[47,0,28,0],[48,0,29,0],[49,0,30,0],[50,0,31,0],[51,0,32,0],[52,0,33,0],[53,0,34,0],[54,0,35,0],[55,0,36,0],[56,0,37,0],[57,0,38,0],[58,0,39,0],[59,0,40,0],[60,0,41,0],[61,2,42,7],[61,11,42,16,"closestTo"],[61,20,42,25,"closestTo"],[61,21,42,26,"dateToCompare"],[61,34,42,39],[61,36,42,41,"dates"],[61,41,42,46],[61,43,42,48,"options"],[61,50,42,55],[61,52,42,57],[62,4,43,2],[62,8,43,2,"_normalizeDates"],[62,23,43,2],[62,26,43,38],[62,30,43,38,"normalizeDates"],[62,50,43,52],[62,51,43,52,"normalizeDates"],[62,65,43,52],[62,67,44,4,"options"],[62,74,44,11],[62,76,44,13,"in"],[62,78,44,15],[62,80,45,4,"dateToCompare"],[62,93,45,17],[62,95,46,4],[62,98,46,7,"dates"],[62,103,47,2],[62,104,47,3],[63,6,47,3,"_normalizeDates2"],[63,22,47,3],[63,29,47,3,"_toArray"],[63,37,47,3],[63,38,47,3,"default"],[63,45,47,3],[63,47,47,3,"_normalizeDates"],[63,62,47,3],[64,6,43,9,"dateToCompare_"],[64,20,43,23],[64,23,43,23,"_normalizeDates2"],[64,39,43,23],[65,6,43,28,"dates_"],[65,12,43,34],[65,15,43,34,"_normalizeDates2"],[65,31,43,34],[65,32,43,34,"slice"],[65,37,43,34],[66,4,49,2],[66,8,49,8,"index"],[66,13,49,13],[66,16,49,16],[66,20,49,16,"closestIndexTo"],[66,37,49,30],[66,38,49,30,"closestIndexTo"],[66,52,49,30],[66,54,49,31,"dateToCompare_"],[66,68,49,45],[66,70,49,47,"dates_"],[66,76,49,53],[66,77,49,54],[67,4,51,2],[67,8,51,6],[67,15,51,13,"index"],[67,20,51,18],[67,25,51,23],[67,33,51,31],[67,37,51,35,"isNaN"],[67,42,51,40],[67,43,51,41,"index"],[67,48,51,46],[67,49,51,47],[67,51,52,4],[67,58,52,11],[67,62,52,11,"constructFrom"],[67,78,52,24],[67,79,52,24,"constructFrom"],[67,92,52,24],[67,94,52,25,"dateToCompare_"],[67,108,52,39],[67,110,52,41,"NaN"],[67,113,52,44],[67,114,52,45],[68,4,54,2],[68,8,54,6,"index"],[68,13,54,11],[68,18,54,16,"undefined"],[68,27,54,25],[68,29,54,27],[68,36,54,34,"dates_"],[68,42,54,40],[68,43,54,41,"index"],[68,48,54,46],[68,49,54,47],[69,2,55,0],[71,2,57,0],[72,2,58,0],[72,6,58,0,"_default"],[72,14,58,0],[72,17,58,15,"closestTo"],[72,26,58,24],[73,0,58,25],[73,3]],"functionMap":{"names":["<global>","closestTo"],"mappings":"AAA;OCyC;CDa"},"hasCjsExports":false},"type":"js/module"}]}