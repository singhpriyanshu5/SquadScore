{"dependencies":[{"name":"./_lib/normalizeInterval.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"RgnQ5fGQDzGiH1jMCpSamjCAQN4=","exportNames":["*"],"imports":1}},{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":65},"end":{"line":2,"column":51,"index":116}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.eachDayOfInterval = eachDayOfInterval;\n  var _libNormalizeIntervalJs = require(_dependencyMap[0], \"./_lib/normalizeInterval.js\");\n  var _constructFromJs = require(_dependencyMap[1], \"./constructFrom.js\");\n  /**\n   * The {@link eachDayOfInterval} function options.\n   */\n\n  /**\n   * The {@link eachDayOfInterval} function result type. It resolves the proper data type.\n   * It uses the first argument date object type, starting from the date argument,\n   * then the start interval date, and finally the end interval date. If\n   * a context function is passed, it uses the context function return type.\n   */\n\n  /**\n   * @name eachDayOfInterval\n   * @category Interval Helpers\n   * @summary Return the array of dates within the specified time interval.\n   *\n   * @description\n   * Return the array of dates within the specified time interval.\n   *\n   * @typeParam IntervalType - Interval type.\n   * @typeParam Options - Options type.\n   *\n   * @param interval - The interval.\n   * @param options - An object with options.\n   *\n   * @returns The array with starts of days from the day of the interval start to the day of the interval end\n   *\n   * @example\n   * // Each day between 6 October 2014 and 10 October 2014:\n   * const result = eachDayOfInterval({\n   *   start: new Date(2014, 9, 6),\n   *   end: new Date(2014, 9, 10)\n   * })\n   * //=> [\n   * //   Mon Oct 06 2014 00:00:00,\n   * //   Tue Oct 07 2014 00:00:00,\n   * //   Wed Oct 08 2014 00:00:00,\n   * //   Thu Oct 09 2014 00:00:00,\n   * //   Fri Oct 10 2014 00:00:00\n   * // ]\n   */\n  function eachDayOfInterval(interval, options) {\n    var _normalizeInterval = (0, _libNormalizeIntervalJs.normalizeInterval)(options?.in, interval),\n      start = _normalizeInterval.start,\n      end = _normalizeInterval.end;\n    var reversed = +start > +end;\n    var endTime = reversed ? +start : +end;\n    var date = reversed ? end : start;\n    date.setHours(0, 0, 0, 0);\n    var step = options?.step ?? 1;\n    if (!step) return [];\n    if (step < 0) {\n      step = -step;\n      reversed = !reversed;\n    }\n    var dates = [];\n    while (+date <= endTime) {\n      dates.push((0, _constructFromJs.constructFrom)(start, date));\n      date.setDate(date.getDate() + step);\n      date.setHours(0, 0, 0, 0);\n    }\n    return reversed ? dates.reverse() : dates;\n  }\n\n  // Fallback for modularized imports:\n  var _default = eachDayOfInterval;\n});","lineCount":82,"map":[[7,2,72,0,"Object"],[7,8,72,0],[7,9,72,0,"defineProperty"],[7,23,72,0],[7,24,72,0,"exports"],[7,31,72,0],[8,4,72,0,"enumerable"],[8,14,72,0],[9,4,72,0,"get"],[9,7,72,0],[9,18,72,0,"get"],[9,19,72,0],[10,6,72,0],[10,13,72,0,"_default"],[10,21,72,0],[11,4,72,0],[12,2,72,0],[13,2,45,0,"exports"],[13,9,45,0],[13,10,45,0,"eachDayOfInterval"],[13,27,45,0],[13,30,45,0,"eachDayOfInterval"],[13,47,45,0],[14,2,1,0],[14,6,1,0,"_libNormalizeIntervalJs"],[14,29,1,0],[14,32,1,0,"require"],[14,39,1,0],[14,40,1,0,"_dependencyMap"],[14,54,1,0],[15,2,2,0],[15,6,2,0,"_constructFromJs"],[15,22,2,0],[15,25,2,0,"require"],[15,32,2,0],[15,33,2,0,"_dependencyMap"],[15,47,2,0],[16,2,4,0],[17,0,5,0],[18,0,6,0],[20,2,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[27,2,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,0,36,0],[49,0,37,0],[50,0,38,0],[51,0,39,0],[52,0,40,0],[53,0,41,0],[54,0,42,0],[55,0,43,0],[56,0,44,0],[57,2,45,7],[57,11,45,16,"eachDayOfInterval"],[57,28,45,33,"eachDayOfInterval"],[57,29,45,34,"interval"],[57,37,45,42],[57,39,45,44,"options"],[57,46,45,51],[57,48,45,53],[58,4,46,2],[58,8,46,2,"_normalizeInterval"],[58,26,46,2],[58,29,46,25],[58,33,46,25,"normalizeInterval"],[58,56,46,42],[58,57,46,42,"normalizeInterval"],[58,74,46,42],[58,76,46,43,"options"],[58,83,46,50],[58,85,46,52,"in"],[58,87,46,54],[58,89,46,56,"interval"],[58,97,46,64],[58,98,46,65],[59,6,46,10,"start"],[59,11,46,15],[59,14,46,15,"_normalizeInterval"],[59,32,46,15],[59,33,46,10,"start"],[59,38,46,15],[60,6,46,17,"end"],[60,9,46,20],[60,12,46,20,"_normalizeInterval"],[60,30,46,20],[60,31,46,17,"end"],[60,34,46,20],[61,4,48,2],[61,8,48,6,"reversed"],[61,16,48,14],[61,19,48,17],[61,20,48,18,"start"],[61,25,48,23],[61,28,48,26],[61,29,48,27,"end"],[61,32,48,30],[62,4,49,2],[62,8,49,8,"endTime"],[62,15,49,15],[62,18,49,18,"reversed"],[62,26,49,26],[62,29,49,29],[62,30,49,30,"start"],[62,35,49,35],[62,38,49,38],[62,39,49,39,"end"],[62,42,49,42],[63,4,50,2],[63,8,50,8,"date"],[63,12,50,12],[63,15,50,15,"reversed"],[63,23,50,23],[63,26,50,26,"end"],[63,29,50,29],[63,32,50,32,"start"],[63,37,50,37],[64,4,51,2,"date"],[64,8,51,6],[64,9,51,7,"setHours"],[64,17,51,15],[64,18,51,16],[64,19,51,17],[64,21,51,19],[64,22,51,20],[64,24,51,22],[64,25,51,23],[64,27,51,25],[64,28,51,26],[64,29,51,27],[65,4,53,2],[65,8,53,6,"step"],[65,12,53,10],[65,15,53,13,"options"],[65,22,53,20],[65,24,53,22,"step"],[65,28,53,26],[65,32,53,30],[65,33,53,31],[66,4,54,2],[66,8,54,6],[66,9,54,7,"step"],[66,13,54,11],[66,15,54,13],[66,22,54,20],[66,24,54,22],[67,4,55,2],[67,8,55,6,"step"],[67,12,55,10],[67,15,55,13],[67,16,55,14],[67,18,55,16],[68,6,56,4,"step"],[68,10,56,8],[68,13,56,11],[68,14,56,12,"step"],[68,18,56,16],[69,6,57,4,"reversed"],[69,14,57,12],[69,17,57,15],[69,18,57,16,"reversed"],[69,26,57,24],[70,4,58,2],[71,4,60,2],[71,8,60,8,"dates"],[71,13,60,13],[71,16,60,16],[71,18,60,18],[72,4,62,2],[72,11,62,9],[72,12,62,10,"date"],[72,16,62,14],[72,20,62,18,"endTime"],[72,27,62,25],[72,29,62,27],[73,6,63,4,"dates"],[73,11,63,9],[73,12,63,10,"push"],[73,16,63,14],[73,17,63,15],[73,21,63,15,"constructFrom"],[73,37,63,28],[73,38,63,28,"constructFrom"],[73,51,63,28],[73,53,63,29,"start"],[73,58,63,34],[73,60,63,36,"date"],[73,64,63,40],[73,65,63,41],[73,66,63,42],[74,6,64,4,"date"],[74,10,64,8],[74,11,64,9,"setDate"],[74,18,64,16],[74,19,64,17,"date"],[74,23,64,21],[74,24,64,22,"getDate"],[74,31,64,29],[74,32,64,30],[74,33,64,31],[74,36,64,34,"step"],[74,40,64,38],[74,41,64,39],[75,6,65,4,"date"],[75,10,65,8],[75,11,65,9,"setHours"],[75,19,65,17],[75,20,65,18],[75,21,65,19],[75,23,65,21],[75,24,65,22],[75,26,65,24],[75,27,65,25],[75,29,65,27],[75,30,65,28],[75,31,65,29],[76,4,66,2],[77,4,68,2],[77,11,68,9,"reversed"],[77,19,68,17],[77,22,68,20,"dates"],[77,27,68,25],[77,28,68,26,"reverse"],[77,35,68,33],[77,36,68,34],[77,37,68,35],[77,40,68,38,"dates"],[77,45,68,43],[78,2,69,0],[80,2,71,0],[81,2,72,0],[81,6,72,0,"_default"],[81,14,72,0],[81,17,72,15,"eachDayOfInterval"],[81,34,72,32],[82,0,72,33],[82,3]],"functionMap":{"names":["<global>","eachDayOfInterval"],"mappings":"AAA;OC4C;CDwB"},"hasCjsExports":false},"type":"js/module"}]}