{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.buildMatchPatternFn = buildMatchPatternFn;\n  function buildMatchPatternFn(args) {\n    return function (string) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var matchResult = string.match(args.matchPattern);\n      if (!matchResult) return null;\n      var matchedString = matchResult[0];\n      var parseResult = string.match(args.parsePattern);\n      if (!parseResult) return null;\n      var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n\n      // [TODO] I challenge you to fix the type\n      value = options.valueCallback ? options.valueCallback(value) : value;\n      var rest = string.slice(matchedString.length);\n      return {\n        value,\n        rest\n      };\n    };\n  }\n});","lineCount":27,"map":[[7,2,1,0,"exports"],[7,9,1,0],[7,10,1,0,"buildMatchPatternFn"],[7,29,1,0],[7,32,1,0,"buildMatchPatternFn"],[7,51,1,0],[8,2,1,7],[8,11,1,16,"buildMatchPatternFn"],[8,30,1,35,"buildMatchPatternFn"],[8,31,1,36,"args"],[8,35,1,40],[8,37,1,42],[9,4,2,2],[9,11,2,9],[9,21,2,10,"string"],[9,27,2,16],[9,29,2,35],[10,6,2,35],[10,10,2,18,"options"],[10,17,2,25],[10,20,2,25,"arguments"],[10,29,2,25],[10,30,2,25,"length"],[10,36,2,25],[10,44,2,25,"arguments"],[10,53,2,25],[10,61,2,25,"undefined"],[10,70,2,25],[10,73,2,25,"arguments"],[10,82,2,25],[10,88,2,28],[10,89,2,29],[10,90,2,30],[11,6,3,4],[11,10,3,10,"matchResult"],[11,21,3,21],[11,24,3,24,"string"],[11,30,3,30],[11,31,3,31,"match"],[11,36,3,36],[11,37,3,37,"args"],[11,41,3,41],[11,42,3,42,"matchPattern"],[11,54,3,54],[11,55,3,55],[12,6,4,4],[12,10,4,8],[12,11,4,9,"matchResult"],[12,22,4,20],[12,24,4,22],[12,31,4,29],[12,35,4,33],[13,6,5,4],[13,10,5,10,"matchedString"],[13,23,5,23],[13,26,5,26,"matchResult"],[13,37,5,37],[13,38,5,38],[13,39,5,39],[13,40,5,40],[14,6,7,4],[14,10,7,10,"parseResult"],[14,21,7,21],[14,24,7,24,"string"],[14,30,7,30],[14,31,7,31,"match"],[14,36,7,36],[14,37,7,37,"args"],[14,41,7,41],[14,42,7,42,"parsePattern"],[14,54,7,54],[14,55,7,55],[15,6,8,4],[15,10,8,8],[15,11,8,9,"parseResult"],[15,22,8,20],[15,24,8,22],[15,31,8,29],[15,35,8,33],[16,6,9,4],[16,10,9,8,"value"],[16,15,9,13],[16,18,9,16,"args"],[16,22,9,20],[16,23,9,21,"valueCallback"],[16,36,9,34],[16,39,10,8,"args"],[16,43,10,12],[16,44,10,13,"valueCallback"],[16,57,10,26],[16,58,10,27,"parseResult"],[16,69,10,38],[16,70,10,39],[16,71,10,40],[16,72,10,41],[16,73,10,42],[16,76,11,8,"parseResult"],[16,87,11,19],[16,88,11,20],[16,89,11,21],[16,90,11,22],[18,6,13,4],[19,6,14,4,"value"],[19,11,14,9],[19,14,14,12,"options"],[19,21,14,19],[19,22,14,20,"valueCallback"],[19,35,14,33],[19,38,14,36,"options"],[19,45,14,43],[19,46,14,44,"valueCallback"],[19,59,14,57],[19,60,14,58,"value"],[19,65,14,63],[19,66,14,64],[19,69,14,67,"value"],[19,74,14,72],[20,6,16,4],[20,10,16,10,"rest"],[20,14,16,14],[20,17,16,17,"string"],[20,23,16,23],[20,24,16,24,"slice"],[20,29,16,29],[20,30,16,30,"matchedString"],[20,43,16,43],[20,44,16,44,"length"],[20,50,16,50],[20,51,16,51],[21,6,18,4],[21,13,18,11],[22,8,18,13,"value"],[22,13,18,18],[23,8,18,20,"rest"],[24,6,18,25],[24,7,18,26],[25,4,19,2],[25,5,19,3],[26,2,20,0],[27,0,20,1],[27,3]],"functionMap":{"names":["<global>","buildMatchPatternFn","<anonymous>"],"mappings":"AAA,OC;SCC;GDiB;CDC"},"hasCjsExports":false},"type":"js/module"}]}