{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"./_lib/defaultLocale.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"pt9gPO2ve6GSRFbXPAQkm4R9a2w=","exportNames":["*"],"imports":1}},{"name":"./_lib/defaultOptions.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":61,"index":118}}],"key":"RLyj7w3ZPZGGUSjkcz/7nwwn2xo=","exportNames":["*"],"imports":1}},{"name":"./_lib/getRoundingMethod.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":119},"end":{"line":3,"column":64,"index":183}}],"key":"LkiOAV1LQTQ7MnwpzKKtm1nDXGQ=","exportNames":["*"],"imports":1}},{"name":"./_lib/getTimezoneOffsetInMilliseconds.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":184},"end":{"line":4,"column":92,"index":276}}],"key":"AyqjCuTamFHRMXjptSd4N6rS1NE=","exportNames":["*"],"imports":1}},{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":277},"end":{"line":5,"column":58,"index":335}}],"key":"p2HPneHw/OdTsxe3h3dVkKepjMk=","exportNames":["*"],"imports":1}},{"name":"./compareAsc.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":336},"end":{"line":6,"column":45,"index":381}}],"key":"0qIXq/JoGP2oJkpZUgvMj3rdXHw=","exportNames":["*"],"imports":1}},{"name":"./constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":382},"end":{"line":12,"column":24,"index":490}}],"key":"46QfplZMuoT7/1B4GqMDknw8q/g=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.formatDistanceStrict = formatDistanceStrict;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _libDefaultLocaleJs = require(_dependencyMap[1], \"./_lib/defaultLocale.js\");\n  var _libDefaultOptionsJs = require(_dependencyMap[2], \"./_lib/defaultOptions.js\");\n  var _libGetRoundingMethodJs = require(_dependencyMap[3], \"./_lib/getRoundingMethod.js\");\n  var _libGetTimezoneOffsetInMillisecondsJs = require(_dependencyMap[4], \"./_lib/getTimezoneOffsetInMilliseconds.js\");\n  var _libNormalizeDatesJs = require(_dependencyMap[5], \"./_lib/normalizeDates.js\");\n  var _compareAscJs = require(_dependencyMap[6], \"./compareAsc.js\");\n  var _constantsJs = require(_dependencyMap[7], \"./constants.js\");\n  /**\n   * The {@link formatDistanceStrict} function options.\n   */\n\n  /**\n   * The unit used to format the distance in {@link formatDistanceStrict}.\n   */\n\n  /**\n   * @name formatDistanceStrict\n   * @category Common Helpers\n   * @summary Return the distance between the given dates in words.\n   *\n   * @description\n   * Return the distance between the given dates in words, using strict units.\n   * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n   * 'less than' and the like.\n   *\n   * | Distance between dates | Result              |\n   * |------------------------|---------------------|\n   * | 0 ... 59 secs          | [0..59] seconds     |\n   * | 1 ... 59 mins          | [1..59] minutes     |\n   * | 1 ... 23 hrs           | [1..23] hours       |\n   * | 1 ... 29 days          | [1..29] days        |\n   * | 1 ... 11 months        | [1..11] months      |\n   * | 1 ... N years          | [1..N]  years       |\n   *\n   * @param laterDate - The date\n   * @param earlierDate - The date to compare with\n   * @param options - An object with options\n   *\n   * @returns The distance in words\n   *\n   * @throws `date` must not be Invalid Date\n   * @throws `baseDate` must not be Invalid Date\n   * @throws `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\n   * @throws `options.locale` must contain `formatDistance` property\n   *\n   * @example\n   * // What is the distance between 2 July 2014 and 1 January 2015?\n   * const result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))\n   * //=> '6 months'\n   *\n   * @example\n   * // What is the distance between 1 January 2015 00:00:15\n   * // and 1 January 2015 00:00:00?\n   * const result = formatDistanceStrict(\n   *   new Date(2015, 0, 1, 0, 0, 15),\n   *   new Date(2015, 0, 1, 0, 0, 0)\n   * )\n   * //=> '15 seconds'\n   *\n   * @example\n   * // What is the distance from 1 January 2016\n   * // to 1 January 2015, with a suffix?\n   * const result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n   *   addSuffix: true\n   * })\n   * //=> '1 year ago'\n   *\n   * @example\n   * // What is the distance from 1 January 2016\n   * // to 1 January 2015, in minutes?\n   * const result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {\n   *   unit: 'minute'\n   * })\n   * //=> '525600 minutes'\n   *\n   * @example\n   * // What is the distance from 1 January 2015\n   * // to 28 January 2015, in months, rounded up?\n   * const result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {\n   *   unit: 'month',\n   *   roundingMethod: 'ceil'\n   * })\n   * //=> '1 month'\n   *\n   * @example\n   * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n   * import { eoLocale } from 'date-fns/locale/eo'\n   * const result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n   *   locale: eoLocale\n   * })\n   * //=> '1 jaro'\n   */\n\n  function formatDistanceStrict(laterDate, earlierDate, options) {\n    var defaultOptions = (0, _libDefaultOptionsJs.getDefaultOptions)();\n    var locale = options?.locale ?? defaultOptions.locale ?? _libDefaultLocaleJs.defaultLocale;\n    var comparison = (0, _compareAscJs.compareAsc)(laterDate, earlierDate);\n    if (isNaN(comparison)) {\n      throw new RangeError(\"Invalid time value\");\n    }\n    var localizeOptions = Object.assign({}, options, {\n      addSuffix: options?.addSuffix,\n      comparison: comparison\n    });\n    var _normalizeDates = (0, _libNormalizeDatesJs.normalizeDates)(options?.in, ...(comparison > 0 ? [earlierDate, laterDate] : [laterDate, earlierDate])),\n      _normalizeDates2 = (0, _slicedToArray.default)(_normalizeDates, 2),\n      laterDate_ = _normalizeDates2[0],\n      earlierDate_ = _normalizeDates2[1];\n    var roundingMethod = (0, _libGetRoundingMethodJs.getRoundingMethod)(options?.roundingMethod ?? \"round\");\n    var milliseconds = earlierDate_.getTime() - laterDate_.getTime();\n    var minutes = milliseconds / _constantsJs.millisecondsInMinute;\n    var timezoneOffset = (0, _libGetTimezoneOffsetInMillisecondsJs.getTimezoneOffsetInMilliseconds)(earlierDate_) - (0, _libGetTimezoneOffsetInMillisecondsJs.getTimezoneOffsetInMilliseconds)(laterDate_);\n\n    // Use DST-normalized difference in minutes for years, months and days;\n    // use regular difference in minutes for hours, minutes and seconds.\n    var dstNormalizedMinutes = (milliseconds - timezoneOffset) / _constantsJs.millisecondsInMinute;\n    var defaultUnit = options?.unit;\n    var unit;\n    if (!defaultUnit) {\n      if (minutes < 1) {\n        unit = \"second\";\n      } else if (minutes < 60) {\n        unit = \"minute\";\n      } else if (minutes < _constantsJs.minutesInDay) {\n        unit = \"hour\";\n      } else if (dstNormalizedMinutes < _constantsJs.minutesInMonth) {\n        unit = \"day\";\n      } else if (dstNormalizedMinutes < _constantsJs.minutesInYear) {\n        unit = \"month\";\n      } else {\n        unit = \"year\";\n      }\n    } else {\n      unit = defaultUnit;\n    }\n\n    // 0 up to 60 seconds\n    if (unit === \"second\") {\n      var seconds = roundingMethod(milliseconds / 1000);\n      return locale.formatDistance(\"xSeconds\", seconds, localizeOptions);\n\n      // 1 up to 60 mins\n    } else if (unit === \"minute\") {\n      var roundedMinutes = roundingMethod(minutes);\n      return locale.formatDistance(\"xMinutes\", roundedMinutes, localizeOptions);\n\n      // 1 up to 24 hours\n    } else if (unit === \"hour\") {\n      var hours = roundingMethod(minutes / 60);\n      return locale.formatDistance(\"xHours\", hours, localizeOptions);\n\n      // 1 up to 30 days\n    } else if (unit === \"day\") {\n      var days = roundingMethod(dstNormalizedMinutes / _constantsJs.minutesInDay);\n      return locale.formatDistance(\"xDays\", days, localizeOptions);\n\n      // 1 up to 12 months\n    } else if (unit === \"month\") {\n      var months = roundingMethod(dstNormalizedMinutes / _constantsJs.minutesInMonth);\n      return months === 12 && defaultUnit !== \"month\" ? locale.formatDistance(\"xYears\", 1, localizeOptions) : locale.formatDistance(\"xMonths\", months, localizeOptions);\n\n      // 1 year up to max Date\n    } else {\n      var years = roundingMethod(dstNormalizedMinutes / _constantsJs.minutesInYear);\n      return locale.formatDistance(\"xYears\", years, localizeOptions);\n    }\n  }\n\n  // Fallback for modularized imports:\n  var _default = formatDistanceStrict;\n});","lineCount":191,"map":[[12,2,189,0,"Object"],[12,8,189,0],[12,9,189,0,"defineProperty"],[12,23,189,0],[12,24,189,0,"exports"],[12,31,189,0],[13,4,189,0,"enumerable"],[13,14,189,0],[14,4,189,0,"get"],[14,7,189,0],[14,18,189,0,"get"],[14,19,189,0],[15,6,189,0],[15,13,189,0,"_default"],[15,21,189,0],[16,4,189,0],[17,2,189,0],[18,2,100,0,"exports"],[18,9,100,0],[18,10,100,0,"formatDistanceStrict"],[18,30,100,0],[18,33,100,0,"formatDistanceStrict"],[18,53,100,0],[19,2,186,1],[19,6,186,1,"_babelRuntimeHelpersSlicedToArray"],[19,39,186,1],[19,42,186,1,"require"],[19,49,186,1],[19,50,186,1,"_dependencyMap"],[19,64,186,1],[20,2,186,1],[20,6,186,1,"_slicedToArray"],[20,20,186,1],[20,23,186,1,"_interopDefault"],[20,38,186,1],[20,39,186,1,"_babelRuntimeHelpersSlicedToArray"],[20,72,186,1],[21,2,1,0],[21,6,1,0,"_libDefaultLocaleJs"],[21,25,1,0],[21,28,1,0,"require"],[21,35,1,0],[21,36,1,0,"_dependencyMap"],[21,50,1,0],[22,2,2,0],[22,6,2,0,"_libDefaultOptionsJs"],[22,26,2,0],[22,29,2,0,"require"],[22,36,2,0],[22,37,2,0,"_dependencyMap"],[22,51,2,0],[23,2,3,0],[23,6,3,0,"_libGetRoundingMethodJs"],[23,29,3,0],[23,32,3,0,"require"],[23,39,3,0],[23,40,3,0,"_dependencyMap"],[23,54,3,0],[24,2,4,0],[24,6,4,0,"_libGetTimezoneOffsetInMillisecondsJs"],[24,43,4,0],[24,46,4,0,"require"],[24,53,4,0],[24,54,4,0,"_dependencyMap"],[24,68,4,0],[25,2,5,0],[25,6,5,0,"_libNormalizeDatesJs"],[25,26,5,0],[25,29,5,0,"require"],[25,36,5,0],[25,37,5,0,"_dependencyMap"],[25,51,5,0],[26,2,6,0],[26,6,6,0,"_compareAscJs"],[26,19,6,0],[26,22,6,0,"require"],[26,29,6,0],[26,30,6,0,"_dependencyMap"],[26,44,6,0],[27,2,7,0],[27,6,7,0,"_constantsJs"],[27,18,7,0],[27,21,7,0,"require"],[27,28,7,0],[27,29,7,0,"_dependencyMap"],[27,43,7,0],[28,2,14,0],[29,0,15,0],[30,0,16,0],[32,2,18,0],[33,0,19,0],[34,0,20,0],[36,2,22,0],[37,0,23,0],[38,0,24,0],[39,0,25,0],[40,0,26,0],[41,0,27,0],[42,0,28,0],[43,0,29,0],[44,0,30,0],[45,0,31,0],[46,0,32,0],[47,0,33,0],[48,0,34,0],[49,0,35,0],[50,0,36,0],[51,0,37,0],[52,0,38,0],[53,0,39,0],[54,0,40,0],[55,0,41,0],[56,0,42,0],[57,0,43,0],[58,0,44,0],[59,0,45,0],[60,0,46,0],[61,0,47,0],[62,0,48,0],[63,0,49,0],[64,0,50,0],[65,0,51,0],[66,0,52,0],[67,0,53,0],[68,0,54,0],[69,0,55,0],[70,0,56,0],[71,0,57,0],[72,0,58,0],[73,0,59,0],[74,0,60,0],[75,0,61,0],[76,0,62,0],[77,0,63,0],[78,0,64,0],[79,0,65,0],[80,0,66,0],[81,0,67,0],[82,0,68,0],[83,0,69,0],[84,0,70,0],[85,0,71,0],[86,0,72,0],[87,0,73,0],[88,0,74,0],[89,0,75,0],[90,0,76,0],[91,0,77,0],[92,0,78,0],[93,0,79,0],[94,0,80,0],[95,0,81,0],[96,0,82,0],[97,0,83,0],[98,0,84,0],[99,0,85,0],[100,0,86,0],[101,0,87,0],[102,0,88,0],[103,0,89,0],[104,0,90,0],[105,0,91,0],[106,0,92,0],[107,0,93,0],[108,0,94,0],[109,0,95,0],[110,0,96,0],[111,0,97,0],[112,0,98,0],[114,2,100,7],[114,11,100,16,"formatDistanceStrict"],[114,31,100,36,"formatDistanceStrict"],[114,32,100,37,"laterDate"],[114,41,100,46],[114,43,100,48,"earlierDate"],[114,54,100,59],[114,56,100,61,"options"],[114,63,100,68],[114,65,100,70],[115,4,101,2],[115,8,101,8,"defaultOptions"],[115,22,101,22],[115,25,101,25],[115,29,101,25,"getDefaultOptions"],[115,49,101,42],[115,50,101,42,"getDefaultOptions"],[115,67,101,42],[115,69,101,43],[115,70,101,44],[116,4,102,2],[116,8,102,8,"locale"],[116,14,102,14],[116,17,102,17,"options"],[116,24,102,24],[116,26,102,26,"locale"],[116,32,102,32],[116,36,102,36,"defaultOptions"],[116,50,102,50],[116,51,102,51,"locale"],[116,57,102,57],[116,61,102,61,"defaultLocale"],[116,80,102,74],[116,81,102,74,"defaultLocale"],[116,94,102,74],[117,4,104,2],[117,8,104,8,"comparison"],[117,18,104,18],[117,21,104,21],[117,25,104,21,"compareAsc"],[117,38,104,31],[117,39,104,31,"compareAsc"],[117,49,104,31],[117,51,104,32,"laterDate"],[117,60,104,41],[117,62,104,43,"earlierDate"],[117,73,104,54],[117,74,104,55],[118,4,106,2],[118,8,106,6,"isNaN"],[118,13,106,11],[118,14,106,12,"comparison"],[118,24,106,22],[118,25,106,23],[118,27,106,25],[119,6,107,4],[119,12,107,10],[119,16,107,14,"RangeError"],[119,26,107,24],[119,27,107,25],[119,47,107,45],[119,48,107,46],[120,4,108,2],[121,4,110,2],[121,8,110,8,"localizeOptions"],[121,23,110,23],[121,26,110,26,"Object"],[121,32,110,32],[121,33,110,33,"assign"],[121,39,110,39],[121,40,110,40],[121,41,110,41],[121,42,110,42],[121,44,110,44,"options"],[121,51,110,51],[121,53,110,53],[122,6,111,4,"addSuffix"],[122,15,111,13],[122,17,111,15,"options"],[122,24,111,22],[122,26,111,24,"addSuffix"],[122,35,111,33],[123,6,112,4,"comparison"],[123,16,112,14],[123,18,112,16,"comparison"],[124,4,113,2],[124,5,113,3],[124,6,113,4],[125,4,115,2],[125,8,115,2,"_normalizeDates"],[125,23,115,2],[125,26,115,37],[125,30,115,37,"normalizeDates"],[125,50,115,51],[125,51,115,51,"normalizeDates"],[125,65,115,51],[125,67,116,4,"options"],[125,74,116,11],[125,76,116,13,"in"],[125,78,116,15],[125,80,117,4],[125,84,117,8,"comparison"],[125,94,117,18],[125,97,117,21],[125,98,117,22],[125,101,117,25],[125,102,117,26,"earlierDate"],[125,113,117,37],[125,115,117,39,"laterDate"],[125,124,117,48],[125,125,117,49],[125,128,117,52],[125,129,117,53,"laterDate"],[125,138,117,62],[125,140,117,64,"earlierDate"],[125,151,117,75],[125,152,117,76],[125,153,118,2],[125,154,118,3],[126,6,118,3,"_normalizeDates2"],[126,22,118,3],[126,29,118,3,"_slicedToArray"],[126,43,118,3],[126,44,118,3,"default"],[126,51,118,3],[126,53,118,3,"_normalizeDates"],[126,68,118,3],[127,6,115,9,"laterDate_"],[127,16,115,19],[127,19,115,19,"_normalizeDates2"],[127,35,115,19],[128,6,115,21,"earlierDate_"],[128,18,115,33],[128,21,115,33,"_normalizeDates2"],[128,37,115,33],[129,4,120,2],[129,8,120,8,"roundingMethod"],[129,22,120,22],[129,25,120,25],[129,29,120,25,"getRoundingMethod"],[129,52,120,42],[129,53,120,42,"getRoundingMethod"],[129,70,120,42],[129,72,120,43,"options"],[129,79,120,50],[129,81,120,52,"roundingMethod"],[129,95,120,66],[129,99,120,70],[129,106,120,77],[129,107,120,78],[130,4,122,2],[130,8,122,8,"milliseconds"],[130,20,122,20],[130,23,122,23,"earlierDate_"],[130,35,122,35],[130,36,122,36,"getTime"],[130,43,122,43],[130,44,122,44],[130,45,122,45],[130,48,122,48,"laterDate_"],[130,58,122,58],[130,59,122,59,"getTime"],[130,66,122,66],[130,67,122,67],[130,68,122,68],[131,4,123,2],[131,8,123,8,"minutes"],[131,15,123,15],[131,18,123,18,"milliseconds"],[131,30,123,30],[131,33,123,33,"millisecondsInMinute"],[131,45,123,53],[131,46,123,53,"millisecondsInMinute"],[131,66,123,53],[132,4,125,2],[132,8,125,8,"timezoneOffset"],[132,22,125,22],[132,25,126,4],[132,29,126,4,"getTimezoneOffsetInMilliseconds"],[132,66,126,35],[132,67,126,35,"getTimezoneOffsetInMilliseconds"],[132,98,126,35],[132,100,126,36,"earlierDate_"],[132,112,126,48],[132,113,126,49],[132,116,127,4],[132,120,127,4,"getTimezoneOffsetInMilliseconds"],[132,157,127,35],[132,158,127,35,"getTimezoneOffsetInMilliseconds"],[132,189,127,35],[132,191,127,36,"laterDate_"],[132,201,127,46],[132,202,127,47],[134,4,129,2],[135,4,130,2],[136,4,131,2],[136,8,131,8,"dstNormalizedMinutes"],[136,28,131,28],[136,31,132,4],[136,32,132,5,"milliseconds"],[136,44,132,17],[136,47,132,20,"timezoneOffset"],[136,61,132,34],[136,65,132,38,"millisecondsInMinute"],[136,77,132,58],[136,78,132,58,"millisecondsInMinute"],[136,98,132,58],[137,4,134,2],[137,8,134,8,"defaultUnit"],[137,19,134,19],[137,22,134,22,"options"],[137,29,134,29],[137,31,134,31,"unit"],[137,35,134,35],[138,4,135,2],[138,8,135,6,"unit"],[138,12,135,10],[139,4,136,2],[139,8,136,6],[139,9,136,7,"defaultUnit"],[139,20,136,18],[139,22,136,20],[140,6,137,4],[140,10,137,8,"minutes"],[140,17,137,15],[140,20,137,18],[140,21,137,19],[140,23,137,21],[141,8,138,6,"unit"],[141,12,138,10],[141,15,138,13],[141,23,138,21],[142,6,139,4],[142,7,139,5],[142,13,139,11],[142,17,139,15,"minutes"],[142,24,139,22],[142,27,139,25],[142,29,139,27],[142,31,139,29],[143,8,140,6,"unit"],[143,12,140,10],[143,15,140,13],[143,23,140,21],[144,6,141,4],[144,7,141,5],[144,13,141,11],[144,17,141,15,"minutes"],[144,24,141,22],[144,27,141,25,"minutesInDay"],[144,39,141,37],[144,40,141,37,"minutesInDay"],[144,52,141,37],[144,54,141,39],[145,8,142,6,"unit"],[145,12,142,10],[145,15,142,13],[145,21,142,19],[146,6,143,4],[146,7,143,5],[146,13,143,11],[146,17,143,15,"dstNormalizedMinutes"],[146,37,143,35],[146,40,143,38,"minutesInMonth"],[146,52,143,52],[146,53,143,52,"minutesInMonth"],[146,67,143,52],[146,69,143,54],[147,8,144,6,"unit"],[147,12,144,10],[147,15,144,13],[147,20,144,18],[148,6,145,4],[148,7,145,5],[148,13,145,11],[148,17,145,15,"dstNormalizedMinutes"],[148,37,145,35],[148,40,145,38,"minutesInYear"],[148,52,145,51],[148,53,145,51,"minutesInYear"],[148,66,145,51],[148,68,145,53],[149,8,146,6,"unit"],[149,12,146,10],[149,15,146,13],[149,22,146,20],[150,6,147,4],[150,7,147,5],[150,13,147,11],[151,8,148,6,"unit"],[151,12,148,10],[151,15,148,13],[151,21,148,19],[152,6,149,4],[153,4,150,2],[153,5,150,3],[153,11,150,9],[154,6,151,4,"unit"],[154,10,151,8],[154,13,151,11,"defaultUnit"],[154,24,151,22],[155,4,152,2],[157,4,154,2],[158,4,155,2],[158,8,155,6,"unit"],[158,12,155,10],[158,17,155,15],[158,25,155,23],[158,27,155,25],[159,6,156,4],[159,10,156,10,"seconds"],[159,17,156,17],[159,20,156,20,"roundingMethod"],[159,34,156,34],[159,35,156,35,"milliseconds"],[159,47,156,47],[159,50,156,50],[159,54,156,54],[159,55,156,55],[160,6,157,4],[160,13,157,11,"locale"],[160,19,157,17],[160,20,157,18,"formatDistance"],[160,34,157,32],[160,35,157,33],[160,45,157,43],[160,47,157,45,"seconds"],[160,54,157,52],[160,56,157,54,"localizeOptions"],[160,71,157,69],[160,72,157,70],[162,6,159,4],[163,4,160,2],[163,5,160,3],[163,11,160,9],[163,15,160,13,"unit"],[163,19,160,17],[163,24,160,22],[163,32,160,30],[163,34,160,32],[164,6,161,4],[164,10,161,10,"roundedMinutes"],[164,24,161,24],[164,27,161,27,"roundingMethod"],[164,41,161,41],[164,42,161,42,"minutes"],[164,49,161,49],[164,50,161,50],[165,6,162,4],[165,13,162,11,"locale"],[165,19,162,17],[165,20,162,18,"formatDistance"],[165,34,162,32],[165,35,162,33],[165,45,162,43],[165,47,162,45,"roundedMinutes"],[165,61,162,59],[165,63,162,61,"localizeOptions"],[165,78,162,76],[165,79,162,77],[167,6,164,4],[168,4,165,2],[168,5,165,3],[168,11,165,9],[168,15,165,13,"unit"],[168,19,165,17],[168,24,165,22],[168,30,165,28],[168,32,165,30],[169,6,166,4],[169,10,166,10,"hours"],[169,15,166,15],[169,18,166,18,"roundingMethod"],[169,32,166,32],[169,33,166,33,"minutes"],[169,40,166,40],[169,43,166,43],[169,45,166,45],[169,46,166,46],[170,6,167,4],[170,13,167,11,"locale"],[170,19,167,17],[170,20,167,18,"formatDistance"],[170,34,167,32],[170,35,167,33],[170,43,167,41],[170,45,167,43,"hours"],[170,50,167,48],[170,52,167,50,"localizeOptions"],[170,67,167,65],[170,68,167,66],[172,6,169,4],[173,4,170,2],[173,5,170,3],[173,11,170,9],[173,15,170,13,"unit"],[173,19,170,17],[173,24,170,22],[173,29,170,27],[173,31,170,29],[174,6,171,4],[174,10,171,10,"days"],[174,14,171,14],[174,17,171,17,"roundingMethod"],[174,31,171,31],[174,32,171,32,"dstNormalizedMinutes"],[174,52,171,52],[174,55,171,55,"minutesInDay"],[174,67,171,67],[174,68,171,67,"minutesInDay"],[174,80,171,67],[174,81,171,68],[175,6,172,4],[175,13,172,11,"locale"],[175,19,172,17],[175,20,172,18,"formatDistance"],[175,34,172,32],[175,35,172,33],[175,42,172,40],[175,44,172,42,"days"],[175,48,172,46],[175,50,172,48,"localizeOptions"],[175,65,172,63],[175,66,172,64],[177,6,174,4],[178,4,175,2],[178,5,175,3],[178,11,175,9],[178,15,175,13,"unit"],[178,19,175,17],[178,24,175,22],[178,31,175,29],[178,33,175,31],[179,6,176,4],[179,10,176,10,"months"],[179,16,176,16],[179,19,176,19,"roundingMethod"],[179,33,176,33],[179,34,176,34,"dstNormalizedMinutes"],[179,54,176,54],[179,57,176,57,"minutesInMonth"],[179,69,176,71],[179,70,176,71,"minutesInMonth"],[179,84,176,71],[179,85,176,72],[180,6,177,4],[180,13,177,11,"months"],[180,19,177,17],[180,24,177,22],[180,26,177,24],[180,30,177,28,"defaultUnit"],[180,41,177,39],[180,46,177,44],[180,53,177,51],[180,56,178,8,"locale"],[180,62,178,14],[180,63,178,15,"formatDistance"],[180,77,178,29],[180,78,178,30],[180,86,178,38],[180,88,178,40],[180,89,178,41],[180,91,178,43,"localizeOptions"],[180,106,178,58],[180,107,178,59],[180,110,179,8,"locale"],[180,116,179,14],[180,117,179,15,"formatDistance"],[180,131,179,29],[180,132,179,30],[180,141,179,39],[180,143,179,41,"months"],[180,149,179,47],[180,151,179,49,"localizeOptions"],[180,166,179,64],[180,167,179,65],[182,6,181,4],[183,4,182,2],[183,5,182,3],[183,11,182,9],[184,6,183,4],[184,10,183,10,"years"],[184,15,183,15],[184,18,183,18,"roundingMethod"],[184,32,183,32],[184,33,183,33,"dstNormalizedMinutes"],[184,53,183,53],[184,56,183,56,"minutesInYear"],[184,68,183,69],[184,69,183,69,"minutesInYear"],[184,82,183,69],[184,83,183,70],[185,6,184,4],[185,13,184,11,"locale"],[185,19,184,17],[185,20,184,18,"formatDistance"],[185,34,184,32],[185,35,184,33],[185,43,184,41],[185,45,184,43,"years"],[185,50,184,48],[185,52,184,50,"localizeOptions"],[185,67,184,65],[185,68,184,66],[186,4,185,2],[187,2,186,0],[189,2,188,0],[190,2,189,0],[190,6,189,0,"_default"],[190,14,189,0],[190,17,189,15,"formatDistanceStrict"],[190,37,189,35],[191,0,189,36],[191,3]],"functionMap":{"names":["<global>","formatDistanceStrict"],"mappings":"AAA;OCmG;CDsF"},"hasCjsExports":false},"type":"js/module"}]}