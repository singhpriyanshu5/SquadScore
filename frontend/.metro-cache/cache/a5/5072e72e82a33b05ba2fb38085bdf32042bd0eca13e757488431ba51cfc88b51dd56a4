{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"./_lib/getTimezoneOffsetInMilliseconds.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":92,"index":92}}],"key":"AyqjCuTamFHRMXjptSd4N6rS1NE=","exportNames":["*"],"imports":1}},{"name":"./constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":93},"end":{"line":2,"column":51,"index":144}}],"key":"46QfplZMuoT7/1B4GqMDknw8q/g=","exportNames":["*"],"imports":1}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":145},"end":{"line":3,"column":37,"index":182}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.getOverlappingDaysInIntervals = getOverlappingDaysInIntervals;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _libGetTimezoneOffsetInMillisecondsJs = require(_dependencyMap[1], \"./_lib/getTimezoneOffsetInMilliseconds.js\");\n  var _constantsJs = require(_dependencyMap[2], \"./constants.js\");\n  var _toDateJs = require(_dependencyMap[3], \"./toDate.js\");\n  /**\n   * @name getOverlappingDaysInIntervals\n   * @category Interval Helpers\n   * @summary Get the number of days that overlap in two time intervals\n   *\n   * @description\n   * Get the number of days that overlap in two time intervals. It uses the time\n   * between dates to calculate the number of days, rounding it up to include\n   * partial days.\n   *\n   * Two equal 0-length intervals will result in 0. Two equal 1ms intervals will\n   * result in 1.\n   *\n   * @param intervalLeft - The first interval to compare.\n   * @param intervalRight - The second interval to compare.\n   * @param options - An object with options\n   *\n   * @returns The number of days that overlap in two time intervals\n   *\n   * @example\n   * // For overlapping time intervals adds 1 for each started overlapping day:\n   * getOverlappingDaysInIntervals(\n   *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n   *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n   * )\n   * //=> 3\n   *\n   * @example\n   * // For non-overlapping time intervals returns 0:\n   * getOverlappingDaysInIntervals(\n   *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n   *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n   * )\n   * //=> 0\n   */\n\n  function getOverlappingDaysInIntervals(intervalLeft, intervalRight) {\n    var _sort = [+(0, _toDateJs.toDate)(intervalLeft.start), +(0, _toDateJs.toDate)(intervalLeft.end)].sort((a, b) => a - b),\n      _sort2 = (0, _slicedToArray.default)(_sort, 2),\n      leftStart = _sort2[0],\n      leftEnd = _sort2[1];\n    var _sort3 = [+(0, _toDateJs.toDate)(intervalRight.start), +(0, _toDateJs.toDate)(intervalRight.end)].sort((a, b) => a - b),\n      _sort4 = (0, _slicedToArray.default)(_sort3, 2),\n      rightStart = _sort4[0],\n      rightEnd = _sort4[1];\n\n    // Prevent NaN result if intervals don't overlap at all.\n    var isOverlapping = leftStart < rightEnd && rightStart < leftEnd;\n    if (!isOverlapping) return 0;\n\n    // Remove the timezone offset to negate the DST effect on calculations.\n    var overlapLeft = rightStart < leftStart ? leftStart : rightStart;\n    var left = overlapLeft - (0, _libGetTimezoneOffsetInMillisecondsJs.getTimezoneOffsetInMilliseconds)(overlapLeft);\n    var overlapRight = rightEnd > leftEnd ? leftEnd : rightEnd;\n    var right = overlapRight - (0, _libGetTimezoneOffsetInMillisecondsJs.getTimezoneOffsetInMilliseconds)(overlapRight);\n\n    // Ceil the number to include partial days too.\n    return Math.ceil((right - left) / _constantsJs.millisecondsInDay);\n  }\n\n  // Fallback for modularized imports:\n  var _default = getOverlappingDaysInIntervals;\n});","lineCount":86,"map":[[12,2,66,0,"Object"],[12,8,66,0],[12,9,66,0,"defineProperty"],[12,23,66,0],[12,24,66,0,"exports"],[12,31,66,0],[13,4,66,0,"enumerable"],[13,14,66,0],[14,4,66,0,"get"],[14,7,66,0],[14,18,66,0,"get"],[14,19,66,0],[15,6,66,0],[15,13,66,0,"_default"],[15,21,66,0],[16,4,66,0],[17,2,66,0],[18,2,41,0,"exports"],[18,9,41,0],[18,10,41,0,"getOverlappingDaysInIntervals"],[18,39,41,0],[18,42,41,0,"getOverlappingDaysInIntervals"],[18,71,41,0],[19,2,63,1],[19,6,63,1,"_babelRuntimeHelpersSlicedToArray"],[19,39,63,1],[19,42,63,1,"require"],[19,49,63,1],[19,50,63,1,"_dependencyMap"],[19,64,63,1],[20,2,63,1],[20,6,63,1,"_slicedToArray"],[20,20,63,1],[20,23,63,1,"_interopDefault"],[20,38,63,1],[20,39,63,1,"_babelRuntimeHelpersSlicedToArray"],[20,72,63,1],[21,2,1,0],[21,6,1,0,"_libGetTimezoneOffsetInMillisecondsJs"],[21,43,1,0],[21,46,1,0,"require"],[21,53,1,0],[21,54,1,0,"_dependencyMap"],[21,68,1,0],[22,2,2,0],[22,6,2,0,"_constantsJs"],[22,18,2,0],[22,21,2,0,"require"],[22,28,2,0],[22,29,2,0,"_dependencyMap"],[22,43,2,0],[23,2,3,0],[23,6,3,0,"_toDateJs"],[23,15,3,0],[23,18,3,0,"require"],[23,25,3,0],[23,26,3,0,"_dependencyMap"],[23,40,3,0],[24,2,5,0],[25,0,6,0],[26,0,7,0],[27,0,8,0],[28,0,9,0],[29,0,10,0],[30,0,11,0],[31,0,12,0],[32,0,13,0],[33,0,14,0],[34,0,15,0],[35,0,16,0],[36,0,17,0],[37,0,18,0],[38,0,19,0],[39,0,20,0],[40,0,21,0],[41,0,22,0],[42,0,23,0],[43,0,24,0],[44,0,25,0],[45,0,26,0],[46,0,27,0],[47,0,28,0],[48,0,29,0],[49,0,30,0],[50,0,31,0],[51,0,32,0],[52,0,33,0],[53,0,34,0],[54,0,35,0],[55,0,36,0],[56,0,37,0],[57,0,38,0],[58,0,39,0],[60,2,41,7],[60,11,41,16,"getOverlappingDaysInIntervals"],[60,40,41,45,"getOverlappingDaysInIntervals"],[60,41,41,46,"intervalLeft"],[60,53,41,58],[60,55,41,60,"intervalRight"],[60,68,41,73],[60,70,41,75],[61,4,42,2],[61,8,42,2,"_sort"],[61,13,42,2],[61,16,42,31],[61,17,43,4],[61,18,43,5],[61,22,43,5,"toDate"],[61,31,43,11],[61,32,43,11,"toDate"],[61,38,43,11],[61,40,43,12,"intervalLeft"],[61,52,43,24],[61,53,43,25,"start"],[61,58,43,30],[61,59,43,31],[61,61,44,4],[61,62,44,5],[61,66,44,5,"toDate"],[61,75,44,11],[61,76,44,11,"toDate"],[61,82,44,11],[61,84,44,12,"intervalLeft"],[61,96,44,24],[61,97,44,25,"end"],[61,100,44,28],[61,101,44,29],[61,102,45,3],[61,103,45,4,"sort"],[61,107,45,8],[61,108,45,9],[61,109,45,10,"a"],[61,110,45,11],[61,112,45,13,"b"],[61,113,45,14],[61,118,45,19,"a"],[61,119,45,20],[61,122,45,23,"b"],[61,123,45,24],[61,124,45,25],[62,6,45,25,"_sort2"],[62,12,45,25],[62,19,45,25,"_slicedToArray"],[62,33,45,25],[62,34,45,25,"default"],[62,41,45,25],[62,43,45,25,"_sort"],[62,48,45,25],[63,6,42,9,"leftStart"],[63,15,42,18],[63,18,42,18,"_sort2"],[63,24,42,18],[64,6,42,20,"leftEnd"],[64,13,42,27],[64,16,42,27,"_sort2"],[64,22,42,27],[65,4,46,2],[65,8,46,2,"_sort3"],[65,14,46,2],[65,17,46,33],[65,18,47,4],[65,19,47,5],[65,23,47,5,"toDate"],[65,32,47,11],[65,33,47,11,"toDate"],[65,39,47,11],[65,41,47,12,"intervalRight"],[65,54,47,25],[65,55,47,26,"start"],[65,60,47,31],[65,61,47,32],[65,63,48,4],[65,64,48,5],[65,68,48,5,"toDate"],[65,77,48,11],[65,78,48,11,"toDate"],[65,84,48,11],[65,86,48,12,"intervalRight"],[65,99,48,25],[65,100,48,26,"end"],[65,103,48,29],[65,104,48,30],[65,105,49,3],[65,106,49,4,"sort"],[65,110,49,8],[65,111,49,9],[65,112,49,10,"a"],[65,113,49,11],[65,115,49,13,"b"],[65,116,49,14],[65,121,49,19,"a"],[65,122,49,20],[65,125,49,23,"b"],[65,126,49,24],[65,127,49,25],[66,6,49,25,"_sort4"],[66,12,49,25],[66,19,49,25,"_slicedToArray"],[66,33,49,25],[66,34,49,25,"default"],[66,41,49,25],[66,43,49,25,"_sort3"],[66,49,49,25],[67,6,46,9,"rightStart"],[67,16,46,19],[67,19,46,19,"_sort4"],[67,25,46,19],[68,6,46,21,"rightEnd"],[68,14,46,29],[68,17,46,29,"_sort4"],[68,23,46,29],[70,4,51,2],[71,4,52,2],[71,8,52,8,"isOverlapping"],[71,21,52,21],[71,24,52,24,"leftStart"],[71,33,52,33],[71,36,52,36,"rightEnd"],[71,44,52,44],[71,48,52,48,"rightStart"],[71,58,52,58],[71,61,52,61,"leftEnd"],[71,68,52,68],[72,4,53,2],[72,8,53,6],[72,9,53,7,"isOverlapping"],[72,22,53,20],[72,24,53,22],[72,31,53,29],[72,32,53,30],[74,4,55,2],[75,4,56,2],[75,8,56,8,"overlapLeft"],[75,19,56,19],[75,22,56,22,"rightStart"],[75,32,56,32],[75,35,56,35,"leftStart"],[75,44,56,44],[75,47,56,47,"leftStart"],[75,56,56,56],[75,59,56,59,"rightStart"],[75,69,56,69],[76,4,57,2],[76,8,57,8,"left"],[76,12,57,12],[76,15,57,15,"overlapLeft"],[76,26,57,26],[76,29,57,29],[76,33,57,29,"getTimezoneOffsetInMilliseconds"],[76,70,57,60],[76,71,57,60,"getTimezoneOffsetInMilliseconds"],[76,102,57,60],[76,104,57,61,"overlapLeft"],[76,115,57,72],[76,116,57,73],[77,4,58,2],[77,8,58,8,"overlapRight"],[77,20,58,20],[77,23,58,23,"rightEnd"],[77,31,58,31],[77,34,58,34,"leftEnd"],[77,41,58,41],[77,44,58,44,"leftEnd"],[77,51,58,51],[77,54,58,54,"rightEnd"],[77,62,58,62],[78,4,59,2],[78,8,59,8,"right"],[78,13,59,13],[78,16,59,16,"overlapRight"],[78,28,59,28],[78,31,59,31],[78,35,59,31,"getTimezoneOffsetInMilliseconds"],[78,72,59,62],[78,73,59,62,"getTimezoneOffsetInMilliseconds"],[78,104,59,62],[78,106,59,63,"overlapRight"],[78,118,59,75],[78,119,59,76],[80,4,61,2],[81,4,62,2],[81,11,62,9,"Math"],[81,15,62,13],[81,16,62,14,"ceil"],[81,20,62,18],[81,21,62,19],[81,22,62,20,"right"],[81,27,62,25],[81,30,62,28,"left"],[81,34,62,32],[81,38,62,36,"millisecondsInDay"],[81,50,62,53],[81,51,62,53,"millisecondsInDay"],[81,68,62,53],[81,69,62,54],[82,2,63,0],[84,2,65,0],[85,2,66,0],[85,6,66,0,"_default"],[85,14,66,0],[85,17,66,15,"getOverlappingDaysInIntervals"],[85,46,66,44],[86,0,66,45],[86,3]],"functionMap":{"names":["<global>","getOverlappingDaysInIntervals","sort$argument_0"],"mappings":"AAA;OCwC;SCI,eD;SCI,eD;CDc"},"hasCjsExports":false},"type":"js/module"}]}