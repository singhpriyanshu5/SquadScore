{"dependencies":[{"name":"./_lib/normalizeInterval.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"RgnQ5fGQDzGiH1jMCpSamjCAQN4=","exportNames":["*"],"imports":1}},{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":65},"end":{"line":2,"column":51,"index":116}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.eachMonthOfInterval = eachMonthOfInterval;\n  var _libNormalizeIntervalJs = require(_dependencyMap[0], \"./_lib/normalizeInterval.js\");\n  var _constructFromJs = require(_dependencyMap[1], \"./constructFrom.js\");\n  /**\n   * The {@link eachMonthOfInterval} function options.\n   */\n\n  /**\n   * The {@link eachMonthOfInterval} function result type. It resolves the proper data type.\n   */\n\n  /**\n   * @name eachMonthOfInterval\n   * @category Interval Helpers\n   * @summary Return the array of months within the specified time interval.\n   *\n   * @description\n   * Return the array of months within the specified time interval.\n   *\n   * @typeParam IntervalType - Interval type.\n   * @typeParam Options - Options type.\n   *\n   * @param interval - The interval.\n   * @param options - An object with options.\n   *\n   * @returns The array with starts of months from the month of the interval start to the month of the interval end\n   *\n   * @example\n   * // Each month between 6 February 2014 and 10 August 2014:\n   * const result = eachMonthOfInterval({\n   *   start: new Date(2014, 1, 6),\n   *   end: new Date(2014, 7, 10)\n   * })\n   * //=> [\n   * //   Sat Feb 01 2014 00:00:00,\n   * //   Sat Mar 01 2014 00:00:00,\n   * //   Tue Apr 01 2014 00:00:00,\n   * //   Thu May 01 2014 00:00:00,\n   * //   Sun Jun 01 2014 00:00:00,\n   * //   Tue Jul 01 2014 00:00:00,\n   * //   Fri Aug 01 2014 00:00:00\n   * // ]\n   */\n  function eachMonthOfInterval(interval, options) {\n    var _normalizeInterval = (0, _libNormalizeIntervalJs.normalizeInterval)(options?.in, interval),\n      start = _normalizeInterval.start,\n      end = _normalizeInterval.end;\n    var reversed = +start > +end;\n    var endTime = reversed ? +start : +end;\n    var date = reversed ? end : start;\n    date.setHours(0, 0, 0, 0);\n    date.setDate(1);\n    var step = options?.step ?? 1;\n    if (!step) return [];\n    if (step < 0) {\n      step = -step;\n      reversed = !reversed;\n    }\n    var dates = [];\n    while (+date <= endTime) {\n      dates.push((0, _constructFromJs.constructFrom)(start, date));\n      date.setMonth(date.getMonth() + step);\n    }\n    return reversed ? dates.reverse() : dates;\n  }\n\n  // Fallback for modularized imports:\n  var _default = eachMonthOfInterval;\n});","lineCount":81,"map":[[7,2,71,0,"Object"],[7,8,71,0],[7,9,71,0,"defineProperty"],[7,23,71,0],[7,24,71,0,"exports"],[7,31,71,0],[8,4,71,0,"enumerable"],[8,14,71,0],[9,4,71,0,"get"],[9,7,71,0],[9,18,71,0,"get"],[9,19,71,0],[10,6,71,0],[10,13,71,0,"_default"],[10,21,71,0],[11,4,71,0],[12,2,71,0],[13,2,44,0,"exports"],[13,9,44,0],[13,10,44,0,"eachMonthOfInterval"],[13,29,44,0],[13,32,44,0,"eachMonthOfInterval"],[13,51,44,0],[14,2,1,0],[14,6,1,0,"_libNormalizeIntervalJs"],[14,29,1,0],[14,32,1,0,"require"],[14,39,1,0],[14,40,1,0,"_dependencyMap"],[14,54,1,0],[15,2,2,0],[15,6,2,0,"_constructFromJs"],[15,22,2,0],[15,25,2,0,"require"],[15,32,2,0],[15,33,2,0,"_dependencyMap"],[15,47,2,0],[16,2,4,0],[17,0,5,0],[18,0,6,0],[20,2,8,0],[21,0,9,0],[22,0,10,0],[24,2,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,0,36,0],[49,0,37,0],[50,0,38,0],[51,0,39,0],[52,0,40,0],[53,0,41,0],[54,0,42,0],[55,0,43,0],[56,2,44,7],[56,11,44,16,"eachMonthOfInterval"],[56,30,44,35,"eachMonthOfInterval"],[56,31,44,36,"interval"],[56,39,44,44],[56,41,44,46,"options"],[56,48,44,53],[56,50,44,55],[57,4,45,2],[57,8,45,2,"_normalizeInterval"],[57,26,45,2],[57,29,45,25],[57,33,45,25,"normalizeInterval"],[57,56,45,42],[57,57,45,42,"normalizeInterval"],[57,74,45,42],[57,76,45,43,"options"],[57,83,45,50],[57,85,45,52,"in"],[57,87,45,54],[57,89,45,56,"interval"],[57,97,45,64],[57,98,45,65],[58,6,45,10,"start"],[58,11,45,15],[58,14,45,15,"_normalizeInterval"],[58,32,45,15],[58,33,45,10,"start"],[58,38,45,15],[59,6,45,17,"end"],[59,9,45,20],[59,12,45,20,"_normalizeInterval"],[59,30,45,20],[59,31,45,17,"end"],[59,34,45,20],[60,4,47,2],[60,8,47,6,"reversed"],[60,16,47,14],[60,19,47,17],[60,20,47,18,"start"],[60,25,47,23],[60,28,47,26],[60,29,47,27,"end"],[60,32,47,30],[61,4,48,2],[61,8,48,8,"endTime"],[61,15,48,15],[61,18,48,18,"reversed"],[61,26,48,26],[61,29,48,29],[61,30,48,30,"start"],[61,35,48,35],[61,38,48,38],[61,39,48,39,"end"],[61,42,48,42],[62,4,49,2],[62,8,49,8,"date"],[62,12,49,12],[62,15,49,15,"reversed"],[62,23,49,23],[62,26,49,26,"end"],[62,29,49,29],[62,32,49,32,"start"],[62,37,49,37],[63,4,50,2,"date"],[63,8,50,6],[63,9,50,7,"setHours"],[63,17,50,15],[63,18,50,16],[63,19,50,17],[63,21,50,19],[63,22,50,20],[63,24,50,22],[63,25,50,23],[63,27,50,25],[63,28,50,26],[63,29,50,27],[64,4,51,2,"date"],[64,8,51,6],[64,9,51,7,"setDate"],[64,16,51,14],[64,17,51,15],[64,18,51,16],[64,19,51,17],[65,4,53,2],[65,8,53,6,"step"],[65,12,53,10],[65,15,53,13,"options"],[65,22,53,20],[65,24,53,22,"step"],[65,28,53,26],[65,32,53,30],[65,33,53,31],[66,4,54,2],[66,8,54,6],[66,9,54,7,"step"],[66,13,54,11],[66,15,54,13],[66,22,54,20],[66,24,54,22],[67,4,55,2],[67,8,55,6,"step"],[67,12,55,10],[67,15,55,13],[67,16,55,14],[67,18,55,16],[68,6,56,4,"step"],[68,10,56,8],[68,13,56,11],[68,14,56,12,"step"],[68,18,56,16],[69,6,57,4,"reversed"],[69,14,57,12],[69,17,57,15],[69,18,57,16,"reversed"],[69,26,57,24],[70,4,58,2],[71,4,60,2],[71,8,60,8,"dates"],[71,13,60,13],[71,16,60,16],[71,18,60,18],[72,4,62,2],[72,11,62,9],[72,12,62,10,"date"],[72,16,62,14],[72,20,62,18,"endTime"],[72,27,62,25],[72,29,62,27],[73,6,63,4,"dates"],[73,11,63,9],[73,12,63,10,"push"],[73,16,63,14],[73,17,63,15],[73,21,63,15,"constructFrom"],[73,37,63,28],[73,38,63,28,"constructFrom"],[73,51,63,28],[73,53,63,29,"start"],[73,58,63,34],[73,60,63,36,"date"],[73,64,63,40],[73,65,63,41],[73,66,63,42],[74,6,64,4,"date"],[74,10,64,8],[74,11,64,9,"setMonth"],[74,19,64,17],[74,20,64,18,"date"],[74,24,64,22],[74,25,64,23,"getMonth"],[74,33,64,31],[74,34,64,32],[74,35,64,33],[74,38,64,36,"step"],[74,42,64,40],[74,43,64,41],[75,4,65,2],[76,4,67,2],[76,11,67,9,"reversed"],[76,19,67,17],[76,22,67,20,"dates"],[76,27,67,25],[76,28,67,26,"reverse"],[76,35,67,33],[76,36,67,34],[76,37,67,35],[76,40,67,38,"dates"],[76,45,67,43],[77,2,68,0],[79,2,70,0],[80,2,71,0],[80,6,71,0,"_default"],[80,14,71,0],[80,17,71,15,"eachMonthOfInterval"],[80,36,71,34],[81,0,71,35],[81,3]],"functionMap":{"names":["<global>","eachMonthOfInterval"],"mappings":"AAA;OC2C;CDwB"},"hasCjsExports":false},"type":"js/module"}]}