{"dependencies":[{"name":"./_lib/addLeadingZeros.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"nr19Y2AxEUlGdF0WaI8ULOMy6Cc=","exportNames":["*"],"imports":1}},{"name":"./isValid.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":39,"index":100}}],"key":"Sst1buy9uBfV7bjRtTAEggSwFYs=","exportNames":["*"],"imports":1}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":101},"end":{"line":3,"column":37,"index":138}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.formatRFC3339 = formatRFC3339;\n  var _libAddLeadingZerosJs = require(_dependencyMap[0], \"./_lib/addLeadingZeros.js\");\n  var _isValidJs = require(_dependencyMap[1], \"./isValid.js\");\n  var _toDateJs = require(_dependencyMap[2], \"./toDate.js\");\n  /**\n   * The {@link formatRFC3339} function options.\n   */\n\n  /**\n   * @name formatRFC3339\n   * @category Common Helpers\n   * @summary Format the date according to the RFC 3339 standard (https://tools.ietf.org/html/rfc3339#section-5.6).\n   *\n   * @description\n   * Return the formatted date string in RFC 3339 format. Options may be passed to control the parts and notations of the date.\n   *\n   * @param date - The original date\n   * @param options - An object with options.\n   *\n   * @returns The formatted date string\n   *\n   * @throws `date` must not be Invalid Date\n   *\n   * @example\n   * // Represent 18 September 2019 in RFC 3339 format:\n   * formatRFC3339(new Date(2019, 8, 18, 19, 0, 52))\n   * //=> '2019-09-18T19:00:52Z'\n   *\n   * @example\n   * // Represent 18 September 2019 in RFC 3339 format, 3 digits of second fraction\n   * formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), {\n   *   fractionDigits: 3\n   * })\n   * //=> '2019-09-18T19:00:52.234Z'\n   */\n  function formatRFC3339(date, options) {\n    var date_ = (0, _toDateJs.toDate)(date, options?.in);\n    if (!(0, _isValidJs.isValid)(date_)) {\n      throw new RangeError(\"Invalid time value\");\n    }\n    var fractionDigits = options?.fractionDigits ?? 0;\n    var day = (0, _libAddLeadingZerosJs.addLeadingZeros)(date_.getDate(), 2);\n    var month = (0, _libAddLeadingZerosJs.addLeadingZeros)(date_.getMonth() + 1, 2);\n    var year = date_.getFullYear();\n    var hour = (0, _libAddLeadingZerosJs.addLeadingZeros)(date_.getHours(), 2);\n    var minute = (0, _libAddLeadingZerosJs.addLeadingZeros)(date_.getMinutes(), 2);\n    var second = (0, _libAddLeadingZerosJs.addLeadingZeros)(date_.getSeconds(), 2);\n    var fractionalSecond = \"\";\n    if (fractionDigits > 0) {\n      var milliseconds = date_.getMilliseconds();\n      var fractionalSeconds = Math.trunc(milliseconds * Math.pow(10, fractionDigits - 3));\n      fractionalSecond = \".\" + (0, _libAddLeadingZerosJs.addLeadingZeros)(fractionalSeconds, fractionDigits);\n    }\n    var offset = \"\";\n    var tzOffset = date_.getTimezoneOffset();\n    if (tzOffset !== 0) {\n      var absoluteOffset = Math.abs(tzOffset);\n      var hourOffset = (0, _libAddLeadingZerosJs.addLeadingZeros)(Math.trunc(absoluteOffset / 60), 2);\n      var minuteOffset = (0, _libAddLeadingZerosJs.addLeadingZeros)(absoluteOffset % 60, 2);\n      // If less than 0, the sign is +, because it is ahead of time.\n      var sign = tzOffset < 0 ? \"+\" : \"-\";\n      offset = `${sign}${hourOffset}:${minuteOffset}`;\n    } else {\n      offset = \"Z\";\n    }\n    return `${year}-${month}-${day}T${hour}:${minute}:${second}${fractionalSecond}${offset}`;\n  }\n\n  // Fallback for modularized imports:\n  var _default = formatRFC3339;\n});","lineCount":83,"map":[[7,2,81,0,"Object"],[7,8,81,0],[7,9,81,0,"defineProperty"],[7,23,81,0],[7,24,81,0,"exports"],[7,31,81,0],[8,4,81,0,"enumerable"],[8,14,81,0],[9,4,81,0,"get"],[9,7,81,0],[9,18,81,0,"get"],[9,19,81,0],[10,6,81,0],[10,13,81,0,"_default"],[10,21,81,0],[11,4,81,0],[12,2,81,0],[13,2,36,0,"exports"],[13,9,36,0],[13,10,36,0,"formatRFC3339"],[13,23,36,0],[13,26,36,0,"formatRFC3339"],[13,39,36,0],[14,2,1,0],[14,6,1,0,"_libAddLeadingZerosJs"],[14,27,1,0],[14,30,1,0,"require"],[14,37,1,0],[14,38,1,0,"_dependencyMap"],[14,52,1,0],[15,2,2,0],[15,6,2,0,"_isValidJs"],[15,16,2,0],[15,19,2,0,"require"],[15,26,2,0],[15,27,2,0,"_dependencyMap"],[15,41,2,0],[16,2,3,0],[16,6,3,0,"_toDateJs"],[16,15,3,0],[16,18,3,0,"require"],[16,25,3,0],[16,26,3,0,"_dependencyMap"],[16,40,3,0],[17,2,5,0],[18,0,6,0],[19,0,7,0],[21,2,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,2,36,7],[48,11,36,16,"formatRFC3339"],[48,24,36,29,"formatRFC3339"],[48,25,36,30,"date"],[48,29,36,34],[48,31,36,36,"options"],[48,38,36,43],[48,40,36,45],[49,4,37,2],[49,8,37,8,"date_"],[49,13,37,13],[49,16,37,16],[49,20,37,16,"toDate"],[49,29,37,22],[49,30,37,22,"toDate"],[49,36,37,22],[49,38,37,23,"date"],[49,42,37,27],[49,44,37,29,"options"],[49,51,37,36],[49,53,37,38,"in"],[49,55,37,40],[49,56,37,41],[50,4,39,2],[50,8,39,6],[50,9,39,7],[50,13,39,7,"isValid"],[50,23,39,14],[50,24,39,14,"isValid"],[50,31,39,14],[50,33,39,15,"date_"],[50,38,39,20],[50,39,39,21],[50,41,39,23],[51,6,40,4],[51,12,40,10],[51,16,40,14,"RangeError"],[51,26,40,24],[51,27,40,25],[51,47,40,45],[51,48,40,46],[52,4,41,2],[53,4,43,2],[53,8,43,8,"fractionDigits"],[53,22,43,22],[53,25,43,25,"options"],[53,32,43,32],[53,34,43,34,"fractionDigits"],[53,48,43,48],[53,52,43,52],[53,53,43,53],[54,4,45,2],[54,8,45,8,"day"],[54,11,45,11],[54,14,45,14],[54,18,45,14,"addLeadingZeros"],[54,39,45,29],[54,40,45,29,"addLeadingZeros"],[54,55,45,29],[54,57,45,30,"date_"],[54,62,45,35],[54,63,45,36,"getDate"],[54,70,45,43],[54,71,45,44],[54,72,45,45],[54,74,45,47],[54,75,45,48],[54,76,45,49],[55,4,46,2],[55,8,46,8,"month"],[55,13,46,13],[55,16,46,16],[55,20,46,16,"addLeadingZeros"],[55,41,46,31],[55,42,46,31,"addLeadingZeros"],[55,57,46,31],[55,59,46,32,"date_"],[55,64,46,37],[55,65,46,38,"getMonth"],[55,73,46,46],[55,74,46,47],[55,75,46,48],[55,78,46,51],[55,79,46,52],[55,81,46,54],[55,82,46,55],[55,83,46,56],[56,4,47,2],[56,8,47,8,"year"],[56,12,47,12],[56,15,47,15,"date_"],[56,20,47,20],[56,21,47,21,"getFullYear"],[56,32,47,32],[56,33,47,33],[56,34,47,34],[57,4,49,2],[57,8,49,8,"hour"],[57,12,49,12],[57,15,49,15],[57,19,49,15,"addLeadingZeros"],[57,40,49,30],[57,41,49,30,"addLeadingZeros"],[57,56,49,30],[57,58,49,31,"date_"],[57,63,49,36],[57,64,49,37,"getHours"],[57,72,49,45],[57,73,49,46],[57,74,49,47],[57,76,49,49],[57,77,49,50],[57,78,49,51],[58,4,50,2],[58,8,50,8,"minute"],[58,14,50,14],[58,17,50,17],[58,21,50,17,"addLeadingZeros"],[58,42,50,32],[58,43,50,32,"addLeadingZeros"],[58,58,50,32],[58,60,50,33,"date_"],[58,65,50,38],[58,66,50,39,"getMinutes"],[58,76,50,49],[58,77,50,50],[58,78,50,51],[58,80,50,53],[58,81,50,54],[58,82,50,55],[59,4,51,2],[59,8,51,8,"second"],[59,14,51,14],[59,17,51,17],[59,21,51,17,"addLeadingZeros"],[59,42,51,32],[59,43,51,32,"addLeadingZeros"],[59,58,51,32],[59,60,51,33,"date_"],[59,65,51,38],[59,66,51,39,"getSeconds"],[59,76,51,49],[59,77,51,50],[59,78,51,51],[59,80,51,53],[59,81,51,54],[59,82,51,55],[60,4,53,2],[60,8,53,6,"fractionalSecond"],[60,24,53,22],[60,27,53,25],[60,29,53,27],[61,4,54,2],[61,8,54,6,"fractionDigits"],[61,22,54,20],[61,25,54,23],[61,26,54,24],[61,28,54,26],[62,6,55,4],[62,10,55,10,"milliseconds"],[62,22,55,22],[62,25,55,25,"date_"],[62,30,55,30],[62,31,55,31,"getMilliseconds"],[62,46,55,46],[62,47,55,47],[62,48,55,48],[63,6,56,4],[63,10,56,10,"fractionalSeconds"],[63,27,56,27],[63,30,56,30,"Math"],[63,34,56,34],[63,35,56,35,"trunc"],[63,40,56,40],[63,41,57,6,"milliseconds"],[63,53,57,18],[63,56,57,21,"Math"],[63,60,57,25],[63,61,57,26,"pow"],[63,64,57,29],[63,65,57,30],[63,67,57,32],[63,69,57,34,"fractionDigits"],[63,83,57,48],[63,86,57,51],[63,87,57,52],[63,88,58,4],[63,89,58,5],[64,6,59,4,"fractionalSecond"],[64,22,59,20],[64,25,59,23],[64,28,59,26],[64,31,59,29],[64,35,59,29,"addLeadingZeros"],[64,56,59,44],[64,57,59,44,"addLeadingZeros"],[64,72,59,44],[64,74,59,45,"fractionalSeconds"],[64,91,59,62],[64,93,59,64,"fractionDigits"],[64,107,59,78],[64,108,59,79],[65,4,60,2],[66,4,62,2],[66,8,62,6,"offset"],[66,14,62,12],[66,17,62,15],[66,19,62,17],[67,4,63,2],[67,8,63,8,"tzOffset"],[67,16,63,16],[67,19,63,19,"date_"],[67,24,63,24],[67,25,63,25,"getTimezoneOffset"],[67,42,63,42],[67,43,63,43],[67,44,63,44],[68,4,65,2],[68,8,65,6,"tzOffset"],[68,16,65,14],[68,21,65,19],[68,22,65,20],[68,24,65,22],[69,6,66,4],[69,10,66,10,"absoluteOffset"],[69,24,66,24],[69,27,66,27,"Math"],[69,31,66,31],[69,32,66,32,"abs"],[69,35,66,35],[69,36,66,36,"tzOffset"],[69,44,66,44],[69,45,66,45],[70,6,67,4],[70,10,67,10,"hourOffset"],[70,20,67,20],[70,23,67,23],[70,27,67,23,"addLeadingZeros"],[70,48,67,38],[70,49,67,38,"addLeadingZeros"],[70,64,67,38],[70,66,67,39,"Math"],[70,70,67,43],[70,71,67,44,"trunc"],[70,76,67,49],[70,77,67,50,"absoluteOffset"],[70,91,67,64],[70,94,67,67],[70,96,67,69],[70,97,67,70],[70,99,67,72],[70,100,67,73],[70,101,67,74],[71,6,68,4],[71,10,68,10,"minuteOffset"],[71,22,68,22],[71,25,68,25],[71,29,68,25,"addLeadingZeros"],[71,50,68,40],[71,51,68,40,"addLeadingZeros"],[71,66,68,40],[71,68,68,41,"absoluteOffset"],[71,82,68,55],[71,85,68,58],[71,87,68,60],[71,89,68,62],[71,90,68,63],[71,91,68,64],[72,6,69,4],[73,6,70,4],[73,10,70,10,"sign"],[73,14,70,14],[73,17,70,17,"tzOffset"],[73,25,70,25],[73,28,70,28],[73,29,70,29],[73,32,70,32],[73,35,70,35],[73,38,70,38],[73,41,70,41],[74,6,72,4,"offset"],[74,12,72,10],[74,15,72,13],[74,18,72,16,"sign"],[74,22,72,20],[74,25,72,23,"hourOffset"],[74,35,72,33],[74,39,72,37,"minuteOffset"],[74,51,72,49],[74,53,72,51],[75,4,73,2],[75,5,73,3],[75,11,73,9],[76,6,74,4,"offset"],[76,12,74,10],[76,15,74,13],[76,18,74,16],[77,4,75,2],[78,4,77,2],[78,11,77,9],[78,14,77,12,"year"],[78,18,77,16],[78,22,77,20,"month"],[78,27,77,25],[78,31,77,29,"day"],[78,34,77,32],[78,38,77,36,"hour"],[78,42,77,40],[78,46,77,44,"minute"],[78,52,77,50],[78,56,77,54,"second"],[78,62,77,60],[78,65,77,63,"fractionalSecond"],[78,81,77,79],[78,84,77,82,"offset"],[78,90,77,88],[78,92,77,90],[79,2,78,0],[81,2,80,0],[82,2,81,0],[82,6,81,0,"_default"],[82,14,81,0],[82,17,81,15,"formatRFC3339"],[82,30,81,28],[83,0,81,29],[83,3]],"functionMap":{"names":["<global>","formatRFC3339"],"mappings":"AAA;OCmC;CD0C"},"hasCjsExports":false},"type":"js/module"}]}