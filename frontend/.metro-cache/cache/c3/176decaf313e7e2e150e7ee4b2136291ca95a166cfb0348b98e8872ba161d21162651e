{"dependencies":[{"name":"../toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":38,"index":38}}],"key":"lHXK2oPUNoIPdBh5ORKs40H2CDk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.getTimezoneOffsetInMilliseconds = getTimezoneOffsetInMilliseconds;\n  var _toDateJs = require(_dependencyMap[0], \"../toDate.js\");\n  /**\n   * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n   * They usually appear for dates that denote time before the timezones were introduced\n   * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n   * and GMT+01:00:00 after that date)\n   *\n   * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n   * which would lead to incorrect calculations.\n   *\n   * This function returns the timezone offset in milliseconds that takes seconds in account.\n   */\n  function getTimezoneOffsetInMilliseconds(date) {\n    var _date = (0, _toDateJs.toDate)(date);\n    var utcDate = new Date(Date.UTC(_date.getFullYear(), _date.getMonth(), _date.getDate(), _date.getHours(), _date.getMinutes(), _date.getSeconds(), _date.getMilliseconds()));\n    utcDate.setUTCFullYear(_date.getFullYear());\n    return +date - +utcDate;\n  }\n});","lineCount":26,"map":[[7,2,14,0,"exports"],[7,9,14,0],[7,10,14,0,"getTimezoneOffsetInMilliseconds"],[7,41,14,0],[7,44,14,0,"getTimezoneOffsetInMilliseconds"],[7,75,14,0],[8,2,1,0],[8,6,1,0,"_toDateJs"],[8,15,1,0],[8,18,1,0,"require"],[8,25,1,0],[8,26,1,0,"_dependencyMap"],[8,40,1,0],[9,2,3,0],[10,0,4,0],[11,0,5,0],[12,0,6,0],[13,0,7,0],[14,0,8,0],[15,0,9,0],[16,0,10,0],[17,0,11,0],[18,0,12,0],[19,0,13,0],[20,2,14,7],[20,11,14,16,"getTimezoneOffsetInMilliseconds"],[20,42,14,47,"getTimezoneOffsetInMilliseconds"],[20,43,14,48,"date"],[20,47,14,52],[20,49,14,54],[21,4,15,2],[21,8,15,8,"_date"],[21,13,15,13],[21,16,15,16],[21,20,15,16,"toDate"],[21,29,15,22],[21,30,15,22,"toDate"],[21,36,15,22],[21,38,15,23,"date"],[21,42,15,27],[21,43,15,28],[22,4,16,2],[22,8,16,8,"utcDate"],[22,15,16,15],[22,18,16,18],[22,22,16,22,"Date"],[22,26,16,26],[22,27,17,4,"Date"],[22,31,17,8],[22,32,17,9,"UTC"],[22,35,17,12],[22,36,18,6,"_date"],[22,41,18,11],[22,42,18,12,"getFullYear"],[22,53,18,23],[22,54,18,24],[22,55,18,25],[22,57,19,6,"_date"],[22,62,19,11],[22,63,19,12,"getMonth"],[22,71,19,20],[22,72,19,21],[22,73,19,22],[22,75,20,6,"_date"],[22,80,20,11],[22,81,20,12,"getDate"],[22,88,20,19],[22,89,20,20],[22,90,20,21],[22,92,21,6,"_date"],[22,97,21,11],[22,98,21,12,"getHours"],[22,106,21,20],[22,107,21,21],[22,108,21,22],[22,110,22,6,"_date"],[22,115,22,11],[22,116,22,12,"getMinutes"],[22,126,22,22],[22,127,22,23],[22,128,22,24],[22,130,23,6,"_date"],[22,135,23,11],[22,136,23,12,"getSeconds"],[22,146,23,22],[22,147,23,23],[22,148,23,24],[22,150,24,6,"_date"],[22,155,24,11],[22,156,24,12,"getMilliseconds"],[22,171,24,27],[22,172,24,28],[22,173,25,4],[22,174,26,2],[22,175,26,3],[23,4,27,2,"utcDate"],[23,11,27,9],[23,12,27,10,"setUTCFullYear"],[23,26,27,24],[23,27,27,25,"_date"],[23,32,27,30],[23,33,27,31,"getFullYear"],[23,44,27,42],[23,45,27,43],[23,46,27,44],[23,47,27,45],[24,4,28,2],[24,11,28,9],[24,12,28,10,"date"],[24,16,28,14],[24,19,28,17],[24,20,28,18,"utcDate"],[24,27,28,25],[25,2,29,0],[26,0,29,1],[26,3]],"functionMap":{"names":["<global>","getTimezoneOffsetInMilliseconds"],"mappings":"AAA;OCa;CDe"},"hasCjsExports":false},"type":"js/module"}]}