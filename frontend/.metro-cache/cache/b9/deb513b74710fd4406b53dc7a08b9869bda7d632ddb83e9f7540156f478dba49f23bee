{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.areIntervalsOverlapping = areIntervalsOverlapping;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _toDateJs = require(_dependencyMap[1], \"./toDate.js\");\n  /**\n   * The {@link areIntervalsOverlapping} function options.\n   */\n\n  /**\n   * @name areIntervalsOverlapping\n   * @category Interval Helpers\n   * @summary Is the given time interval overlapping with another time interval?\n   *\n   * @description\n   * Is the given time interval overlapping with another time interval? Adjacent intervals do not count as overlapping unless `inclusive` is set to `true`.\n   *\n   * @param intervalLeft - The first interval to compare.\n   * @param intervalRight - The second interval to compare.\n   * @param options - The object with options\n   *\n   * @returns Whether the time intervals are overlapping\n   *\n   * @example\n   * // For overlapping time intervals:\n   * areIntervalsOverlapping(\n   *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n   *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n   * )\n   * //=> true\n   *\n   * @example\n   * // For non-overlapping time intervals:\n   * areIntervalsOverlapping(\n   *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n   *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n   * )\n   * //=> false\n   *\n   * @example\n   * // For adjacent time intervals:\n   * areIntervalsOverlapping(\n   *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n   *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 30) }\n   * )\n   * //=> false\n   *\n   * @example\n   * // Using the inclusive option:\n   * areIntervalsOverlapping(\n   *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n   *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) },\n   *   { inclusive: true }\n   * )\n   * //=> true\n   */\n  function areIntervalsOverlapping(intervalLeft, intervalRight, options) {\n    var _sort = [+(0, _toDateJs.toDate)(intervalLeft.start, options?.in), +(0, _toDateJs.toDate)(intervalLeft.end, options?.in)].sort((a, b) => a - b),\n      _sort2 = (0, _slicedToArray.default)(_sort, 2),\n      leftStartTime = _sort2[0],\n      leftEndTime = _sort2[1];\n    var _sort3 = [+(0, _toDateJs.toDate)(intervalRight.start, options?.in), +(0, _toDateJs.toDate)(intervalRight.end, options?.in)].sort((a, b) => a - b),\n      _sort4 = (0, _slicedToArray.default)(_sort3, 2),\n      rightStartTime = _sort4[0],\n      rightEndTime = _sort4[1];\n    if (options?.inclusive) return leftStartTime <= rightEndTime && rightStartTime <= leftEndTime;\n    return leftStartTime < rightEndTime && rightStartTime < leftEndTime;\n  }\n\n  // Fallback for modularized imports:\n  var _default = areIntervalsOverlapping;\n});","lineCount":88,"map":[[12,2,71,0,"Object"],[12,8,71,0],[12,9,71,0,"defineProperty"],[12,23,71,0],[12,24,71,0,"exports"],[12,31,71,0],[13,4,71,0,"enumerable"],[13,14,71,0],[14,4,71,0,"get"],[14,7,71,0],[14,18,71,0,"get"],[14,19,71,0],[15,6,71,0],[15,13,71,0,"_default"],[15,21,71,0],[16,4,71,0],[17,2,71,0],[18,2,54,0,"exports"],[18,9,54,0],[18,10,54,0,"areIntervalsOverlapping"],[18,33,54,0],[18,36,54,0,"areIntervalsOverlapping"],[18,59,54,0],[19,2,68,1],[19,6,68,1,"_babelRuntimeHelpersSlicedToArray"],[19,39,68,1],[19,42,68,1,"require"],[19,49,68,1],[19,50,68,1,"_dependencyMap"],[19,64,68,1],[20,2,68,1],[20,6,68,1,"_slicedToArray"],[20,20,68,1],[20,23,68,1,"_interopDefault"],[20,38,68,1],[20,39,68,1,"_babelRuntimeHelpersSlicedToArray"],[20,72,68,1],[21,2,1,0],[21,6,1,0,"_toDateJs"],[21,15,1,0],[21,18,1,0,"require"],[21,25,1,0],[21,26,1,0,"_dependencyMap"],[21,40,1,0],[22,2,3,0],[23,0,4,0],[24,0,5,0],[26,2,7,0],[27,0,8,0],[28,0,9,0],[29,0,10,0],[30,0,11,0],[31,0,12,0],[32,0,13,0],[33,0,14,0],[34,0,15,0],[35,0,16,0],[36,0,17,0],[37,0,18,0],[38,0,19,0],[39,0,20,0],[40,0,21,0],[41,0,22,0],[42,0,23,0],[43,0,24,0],[44,0,25,0],[45,0,26,0],[46,0,27,0],[47,0,28,0],[48,0,29,0],[49,0,30,0],[50,0,31,0],[51,0,32,0],[52,0,33,0],[53,0,34,0],[54,0,35,0],[55,0,36,0],[56,0,37,0],[57,0,38,0],[58,0,39,0],[59,0,40,0],[60,0,41,0],[61,0,42,0],[62,0,43,0],[63,0,44,0],[64,0,45,0],[65,0,46,0],[66,0,47,0],[67,0,48,0],[68,0,49,0],[69,0,50,0],[70,0,51,0],[71,0,52,0],[72,0,53,0],[73,2,54,7],[73,11,54,16,"areIntervalsOverlapping"],[73,34,54,39,"areIntervalsOverlapping"],[73,35,54,40,"intervalLeft"],[73,47,54,52],[73,49,54,54,"intervalRight"],[73,62,54,67],[73,64,54,69,"options"],[73,71,54,76],[73,73,54,78],[74,4,55,2],[74,8,55,2,"_sort"],[74,13,55,2],[74,16,55,39],[74,17,56,4],[74,18,56,5],[74,22,56,5,"toDate"],[74,31,56,11],[74,32,56,11,"toDate"],[74,38,56,11],[74,40,56,12,"intervalLeft"],[74,52,56,24],[74,53,56,25,"start"],[74,58,56,30],[74,60,56,32,"options"],[74,67,56,39],[74,69,56,41,"in"],[74,71,56,43],[74,72,56,44],[74,74,57,4],[74,75,57,5],[74,79,57,5,"toDate"],[74,88,57,11],[74,89,57,11,"toDate"],[74,95,57,11],[74,97,57,12,"intervalLeft"],[74,109,57,24],[74,110,57,25,"end"],[74,113,57,28],[74,115,57,30,"options"],[74,122,57,37],[74,124,57,39,"in"],[74,126,57,41],[74,127,57,42],[74,128,58,3],[74,129,58,4,"sort"],[74,133,58,8],[74,134,58,9],[74,135,58,10,"a"],[74,136,58,11],[74,138,58,13,"b"],[74,139,58,14],[74,144,58,19,"a"],[74,145,58,20],[74,148,58,23,"b"],[74,149,58,24],[74,150,58,25],[75,6,58,25,"_sort2"],[75,12,58,25],[75,19,58,25,"_slicedToArray"],[75,33,58,25],[75,34,58,25,"default"],[75,41,58,25],[75,43,58,25,"_sort"],[75,48,58,25],[76,6,55,9,"leftStartTime"],[76,19,55,22],[76,22,55,22,"_sort2"],[76,28,55,22],[77,6,55,24,"leftEndTime"],[77,17,55,35],[77,20,55,35,"_sort2"],[77,26,55,35],[78,4,59,2],[78,8,59,2,"_sort3"],[78,14,59,2],[78,17,59,41],[78,18,60,4],[78,19,60,5],[78,23,60,5,"toDate"],[78,32,60,11],[78,33,60,11,"toDate"],[78,39,60,11],[78,41,60,12,"intervalRight"],[78,54,60,25],[78,55,60,26,"start"],[78,60,60,31],[78,62,60,33,"options"],[78,69,60,40],[78,71,60,42,"in"],[78,73,60,44],[78,74,60,45],[78,76,61,4],[78,77,61,5],[78,81,61,5,"toDate"],[78,90,61,11],[78,91,61,11,"toDate"],[78,97,61,11],[78,99,61,12,"intervalRight"],[78,112,61,25],[78,113,61,26,"end"],[78,116,61,29],[78,118,61,31,"options"],[78,125,61,38],[78,127,61,40,"in"],[78,129,61,42],[78,130,61,43],[78,131,62,3],[78,132,62,4,"sort"],[78,136,62,8],[78,137,62,9],[78,138,62,10,"a"],[78,139,62,11],[78,141,62,13,"b"],[78,142,62,14],[78,147,62,19,"a"],[78,148,62,20],[78,151,62,23,"b"],[78,152,62,24],[78,153,62,25],[79,6,62,25,"_sort4"],[79,12,62,25],[79,19,62,25,"_slicedToArray"],[79,33,62,25],[79,34,62,25,"default"],[79,41,62,25],[79,43,62,25,"_sort3"],[79,49,62,25],[80,6,59,9,"rightStartTime"],[80,20,59,23],[80,23,59,23,"_sort4"],[80,29,59,23],[81,6,59,25,"rightEndTime"],[81,18,59,37],[81,21,59,37,"_sort4"],[81,27,59,37],[82,4,64,2],[82,8,64,6,"options"],[82,15,64,13],[82,17,64,15,"inclusive"],[82,26,64,24],[82,28,65,4],[82,35,65,11,"leftStartTime"],[82,48,65,24],[82,52,65,28,"rightEndTime"],[82,64,65,40],[82,68,65,44,"rightStartTime"],[82,82,65,58],[82,86,65,62,"leftEndTime"],[82,97,65,73],[83,4,67,2],[83,11,67,9,"leftStartTime"],[83,24,67,22],[83,27,67,25,"rightEndTime"],[83,39,67,37],[83,43,67,41,"rightStartTime"],[83,57,67,55],[83,60,67,58,"leftEndTime"],[83,71,67,69],[84,2,68,0],[86,2,70,0],[87,2,71,0],[87,6,71,0,"_default"],[87,14,71,0],[87,17,71,15,"areIntervalsOverlapping"],[87,40,71,38],[88,0,71,39],[88,3]],"functionMap":{"names":["<global>","areIntervalsOverlapping","sort$argument_0"],"mappings":"AAA;OCqD;SCI,eD;SCI,eD;CDM"},"hasCjsExports":false},"type":"js/module"}]}