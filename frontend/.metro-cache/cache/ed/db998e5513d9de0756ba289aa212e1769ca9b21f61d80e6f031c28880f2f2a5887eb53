{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"p2HPneHw/OdTsxe3h3dVkKepjMk=","exportNames":["*"],"imports":1}},{"name":"./startOfWeek.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":47,"index":106}}],"key":"P3QLf1gnhZwOwCLzrccpsspoyVY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.isSameWeek = isSameWeek;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _libNormalizeDatesJs = require(_dependencyMap[1], \"./_lib/normalizeDates.js\");\n  var _startOfWeekJs = require(_dependencyMap[2], \"./startOfWeek.js\");\n  /**\n   * The {@link isSameWeek} function options.\n   */\n\n  /**\n   * @name isSameWeek\n   * @category Week Helpers\n   * @summary Are the given dates in the same week (and month and year)?\n   *\n   * @description\n   * Are the given dates in the same week (and month and year)?\n   *\n   * @param laterDate - The first date to check\n   * @param earlierDate - The second date to check\n   * @param options - An object with options\n   *\n   * @returns The dates are in the same week (and month and year)\n   *\n   * @example\n   * // Are 31 August 2014 and 4 September 2014 in the same week?\n   * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n   * //=> true\n   *\n   * @example\n   * // If week starts with Monday,\n   * // are 31 August 2014 and 4 September 2014 in the same week?\n   * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n   *   weekStartsOn: 1\n   * })\n   * //=> false\n   *\n   * @example\n   * // Are 1 January 2014 and 1 January 2015 in the same week?\n   * const result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))\n   * //=> false\n   */\n  function isSameWeek(laterDate, earlierDate, options) {\n    var _normalizeDates = (0, _libNormalizeDatesJs.normalizeDates)(options?.in, laterDate, earlierDate),\n      _normalizeDates2 = (0, _slicedToArray.default)(_normalizeDates, 2),\n      laterDate_ = _normalizeDates2[0],\n      earlierDate_ = _normalizeDates2[1];\n    return +(0, _startOfWeekJs.startOfWeek)(laterDate_, options) === +(0, _startOfWeekJs.startOfWeek)(earlierDate_, options);\n  }\n\n  // Fallback for modularized imports:\n  var _default = isSameWeek;\n});","lineCount":69,"map":[[12,2,52,0,"Object"],[12,8,52,0],[12,9,52,0,"defineProperty"],[12,23,52,0],[12,24,52,0,"exports"],[12,31,52,0],[13,4,52,0,"enumerable"],[13,14,52,0],[14,4,52,0,"get"],[14,7,52,0],[14,18,52,0,"get"],[14,19,52,0],[15,6,52,0],[15,13,52,0,"_default"],[15,21,52,0],[16,4,52,0],[17,2,52,0],[18,2,40,0,"exports"],[18,9,40,0],[18,10,40,0,"isSameWeek"],[18,20,40,0],[18,23,40,0,"isSameWeek"],[18,33,40,0],[19,2,49,1],[19,6,49,1,"_babelRuntimeHelpersSlicedToArray"],[19,39,49,1],[19,42,49,1,"require"],[19,49,49,1],[19,50,49,1,"_dependencyMap"],[19,64,49,1],[20,2,49,1],[20,6,49,1,"_slicedToArray"],[20,20,49,1],[20,23,49,1,"_interopDefault"],[20,38,49,1],[20,39,49,1,"_babelRuntimeHelpersSlicedToArray"],[20,72,49,1],[21,2,1,0],[21,6,1,0,"_libNormalizeDatesJs"],[21,26,1,0],[21,29,1,0,"require"],[21,36,1,0],[21,37,1,0,"_dependencyMap"],[21,51,1,0],[22,2,2,0],[22,6,2,0,"_startOfWeekJs"],[22,20,2,0],[22,23,2,0,"require"],[22,30,2,0],[22,31,2,0,"_dependencyMap"],[22,45,2,0],[23,2,4,0],[24,0,5,0],[25,0,6,0],[27,2,8,0],[28,0,9,0],[29,0,10,0],[30,0,11,0],[31,0,12,0],[32,0,13,0],[33,0,14,0],[34,0,15,0],[35,0,16,0],[36,0,17,0],[37,0,18,0],[38,0,19,0],[39,0,20,0],[40,0,21,0],[41,0,22,0],[42,0,23,0],[43,0,24,0],[44,0,25,0],[45,0,26,0],[46,0,27,0],[47,0,28,0],[48,0,29,0],[49,0,30,0],[50,0,31,0],[51,0,32,0],[52,0,33,0],[53,0,34,0],[54,0,35,0],[55,0,36,0],[56,0,37,0],[57,0,38,0],[58,0,39,0],[59,2,40,7],[59,11,40,16,"isSameWeek"],[59,21,40,26,"isSameWeek"],[59,22,40,27,"laterDate"],[59,31,40,36],[59,33,40,38,"earlierDate"],[59,44,40,49],[59,46,40,51,"options"],[59,53,40,58],[59,55,40,60],[60,4,41,2],[60,8,41,2,"_normalizeDates"],[60,23,41,2],[60,26,41,37],[60,30,41,37,"normalizeDates"],[60,50,41,51],[60,51,41,51,"normalizeDates"],[60,65,41,51],[60,67,42,4,"options"],[60,74,42,11],[60,76,42,13,"in"],[60,78,42,15],[60,80,43,4,"laterDate"],[60,89,43,13],[60,91,44,4,"earlierDate"],[60,102,45,2],[60,103,45,3],[61,6,45,3,"_normalizeDates2"],[61,22,45,3],[61,29,45,3,"_slicedToArray"],[61,43,45,3],[61,44,45,3,"default"],[61,51,45,3],[61,53,45,3,"_normalizeDates"],[61,68,45,3],[62,6,41,9,"laterDate_"],[62,16,41,19],[62,19,41,19,"_normalizeDates2"],[62,35,41,19],[63,6,41,21,"earlierDate_"],[63,18,41,33],[63,21,41,33,"_normalizeDates2"],[63,37,41,33],[64,4,46,2],[64,11,47,4],[64,12,47,5],[64,16,47,5,"startOfWeek"],[64,30,47,16],[64,31,47,16,"startOfWeek"],[64,42,47,16],[64,44,47,17,"laterDate_"],[64,54,47,27],[64,56,47,29,"options"],[64,63,47,36],[64,64,47,37],[64,69,47,42],[64,70,47,43],[64,74,47,43,"startOfWeek"],[64,88,47,54],[64,89,47,54,"startOfWeek"],[64,100,47,54],[64,102,47,55,"earlierDate_"],[64,114,47,67],[64,116,47,69,"options"],[64,123,47,76],[64,124,47,77],[65,2,49,0],[67,2,51,0],[68,2,52,0],[68,6,52,0,"_default"],[68,14,52,0],[68,17,52,15,"isSameWeek"],[68,27,52,25],[69,0,52,26],[69,3]],"functionMap":{"names":["<global>","isSameWeek"],"mappings":"AAA;OCuC;CDS"},"hasCjsExports":false},"type":"js/module"}]}