{"dependencies":[{"name":"./_lib/normalizeInterval.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"RgnQ5fGQDzGiH1jMCpSamjCAQN4=","exportNames":["*"],"imports":1}},{"name":"./addQuarters.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":65},"end":{"line":2,"column":47,"index":112}}],"key":"J7VZrCZ/m6TQ//8mFrNkpjNI3Vc=","exportNames":["*"],"imports":1}},{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":113},"end":{"line":3,"column":51,"index":164}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"],"imports":1}},{"name":"./startOfQuarter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":165},"end":{"line":4,"column":53,"index":218}}],"key":"aU/n5nvPF8kBieqP++QSiTpo2xI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.eachQuarterOfInterval = eachQuarterOfInterval;\n  var _libNormalizeIntervalJs = require(_dependencyMap[0], \"./_lib/normalizeInterval.js\");\n  var _addQuartersJs = require(_dependencyMap[1], \"./addQuarters.js\");\n  var _constructFromJs = require(_dependencyMap[2], \"./constructFrom.js\");\n  var _startOfQuarterJs = require(_dependencyMap[3], \"./startOfQuarter.js\");\n  /**\n   * The {@link eachQuarterOfInterval} function options.\n   */\n\n  /**\n   * The {@link eachQuarterOfInterval} function result type. It resolves the proper data type.\n   * It uses the first argument date object type, starting from the date argument,\n   * then the start interval date, and finally the end interval date. If\n   * a context function is passed, it uses the context function return type.\n   */\n\n  /**\n   * @name eachQuarterOfInterval\n   * @category Interval Helpers\n   * @summary Return the array of quarters within the specified time interval.\n   *\n   * @description\n   * Return the array of quarters within the specified time interval.\n   *\n   * @typeParam IntervalType - Interval type.\n   * @typeParam Options - Options type.\n   *\n   * @param interval - The interval\n   * @param options - An object with options\n   *\n   * @returns The array with starts of quarters from the quarter of the interval start to the quarter of the interval end\n   *\n   * @example\n   * // Each quarter within interval 6 February 2014 - 10 August 2014:\n   * const result = eachQuarterOfInterval({\n   *   start: new Date(2014, 1, 6),\n   *   end: new Date(2014, 7, 10),\n   * })\n   * //=> [\n   * //   Wed Jan 01 2014 00:00:00,\n   * //   Tue Apr 01 2014 00:00:00,\n   * //   Tue Jul 01 2014 00:00:00,\n   * // ]\n   */\n  function eachQuarterOfInterval(interval, options) {\n    var _normalizeInterval = (0, _libNormalizeIntervalJs.normalizeInterval)(options?.in, interval),\n      start = _normalizeInterval.start,\n      end = _normalizeInterval.end;\n    var reversed = +start > +end;\n    var endTime = reversed ? +(0, _startOfQuarterJs.startOfQuarter)(start) : +(0, _startOfQuarterJs.startOfQuarter)(end);\n    var date = reversed ? (0, _startOfQuarterJs.startOfQuarter)(end) : (0, _startOfQuarterJs.startOfQuarter)(start);\n    var step = options?.step ?? 1;\n    if (!step) return [];\n    if (step < 0) {\n      step = -step;\n      reversed = !reversed;\n    }\n    var dates = [];\n    while (+date <= endTime) {\n      dates.push((0, _constructFromJs.constructFrom)(start, date));\n      date = (0, _addQuartersJs.addQuarters)(date, step);\n    }\n    return reversed ? dates.reverse() : dates;\n  }\n\n  // Fallback for modularized imports:\n  var _default = eachQuarterOfInterval;\n});","lineCount":80,"map":[[7,2,70,0,"Object"],[7,8,70,0],[7,9,70,0,"defineProperty"],[7,23,70,0],[7,24,70,0,"exports"],[7,31,70,0],[8,4,70,0,"enumerable"],[8,14,70,0],[9,4,70,0,"get"],[9,7,70,0],[9,18,70,0,"get"],[9,19,70,0],[10,6,70,0],[10,13,70,0,"_default"],[10,21,70,0],[11,4,70,0],[12,2,70,0],[13,2,45,0,"exports"],[13,9,45,0],[13,10,45,0,"eachQuarterOfInterval"],[13,31,45,0],[13,34,45,0,"eachQuarterOfInterval"],[13,55,45,0],[14,2,1,0],[14,6,1,0,"_libNormalizeIntervalJs"],[14,29,1,0],[14,32,1,0,"require"],[14,39,1,0],[14,40,1,0,"_dependencyMap"],[14,54,1,0],[15,2,2,0],[15,6,2,0,"_addQuartersJs"],[15,20,2,0],[15,23,2,0,"require"],[15,30,2,0],[15,31,2,0,"_dependencyMap"],[15,45,2,0],[16,2,3,0],[16,6,3,0,"_constructFromJs"],[16,22,3,0],[16,25,3,0,"require"],[16,32,3,0],[16,33,3,0,"_dependencyMap"],[16,47,3,0],[17,2,4,0],[17,6,4,0,"_startOfQuarterJs"],[17,23,4,0],[17,26,4,0,"require"],[17,33,4,0],[17,34,4,0,"_dependencyMap"],[17,48,4,0],[18,2,6,0],[19,0,7,0],[20,0,8,0],[22,2,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[29,2,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,0,36,0],[49,0,37,0],[50,0,38,0],[51,0,39,0],[52,0,40,0],[53,0,41,0],[54,0,42,0],[55,0,43,0],[56,0,44,0],[57,2,45,7],[57,11,45,16,"eachQuarterOfInterval"],[57,32,45,37,"eachQuarterOfInterval"],[57,33,45,38,"interval"],[57,41,45,46],[57,43,45,48,"options"],[57,50,45,55],[57,52,45,57],[58,4,46,2],[58,8,46,2,"_normalizeInterval"],[58,26,46,2],[58,29,46,25],[58,33,46,25,"normalizeInterval"],[58,56,46,42],[58,57,46,42,"normalizeInterval"],[58,74,46,42],[58,76,46,43,"options"],[58,83,46,50],[58,85,46,52,"in"],[58,87,46,54],[58,89,46,56,"interval"],[58,97,46,64],[58,98,46,65],[59,6,46,10,"start"],[59,11,46,15],[59,14,46,15,"_normalizeInterval"],[59,32,46,15],[59,33,46,10,"start"],[59,38,46,15],[60,6,46,17,"end"],[60,9,46,20],[60,12,46,20,"_normalizeInterval"],[60,30,46,20],[60,31,46,17,"end"],[60,34,46,20],[61,4,48,2],[61,8,48,6,"reversed"],[61,16,48,14],[61,19,48,17],[61,20,48,18,"start"],[61,25,48,23],[61,28,48,26],[61,29,48,27,"end"],[61,32,48,30],[62,4,49,2],[62,8,49,8,"endTime"],[62,15,49,15],[62,18,49,18,"reversed"],[62,26,49,26],[62,29,49,29],[62,30,49,30],[62,34,49,30,"startOfQuarter"],[62,51,49,44],[62,52,49,44,"startOfQuarter"],[62,66,49,44],[62,68,49,45,"start"],[62,73,49,50],[62,74,49,51],[62,77,49,54],[62,78,49,55],[62,82,49,55,"startOfQuarter"],[62,99,49,69],[62,100,49,69,"startOfQuarter"],[62,114,49,69],[62,116,49,70,"end"],[62,119,49,73],[62,120,49,74],[63,4,50,2],[63,8,50,6,"date"],[63,12,50,10],[63,15,50,13,"reversed"],[63,23,50,21],[63,26,50,24],[63,30,50,24,"startOfQuarter"],[63,47,50,38],[63,48,50,38,"startOfQuarter"],[63,62,50,38],[63,64,50,39,"end"],[63,67,50,42],[63,68,50,43],[63,71,50,46],[63,75,50,46,"startOfQuarter"],[63,92,50,60],[63,93,50,60,"startOfQuarter"],[63,107,50,60],[63,109,50,61,"start"],[63,114,50,66],[63,115,50,67],[64,4,52,2],[64,8,52,6,"step"],[64,12,52,10],[64,15,52,13,"options"],[64,22,52,20],[64,24,52,22,"step"],[64,28,52,26],[64,32,52,30],[64,33,52,31],[65,4,53,2],[65,8,53,6],[65,9,53,7,"step"],[65,13,53,11],[65,15,53,13],[65,22,53,20],[65,24,53,22],[66,4,54,2],[66,8,54,6,"step"],[66,12,54,10],[66,15,54,13],[66,16,54,14],[66,18,54,16],[67,6,55,4,"step"],[67,10,55,8],[67,13,55,11],[67,14,55,12,"step"],[67,18,55,16],[68,6,56,4,"reversed"],[68,14,56,12],[68,17,56,15],[68,18,56,16,"reversed"],[68,26,56,24],[69,4,57,2],[70,4,59,2],[70,8,59,8,"dates"],[70,13,59,13],[70,16,59,16],[70,18,59,18],[71,4,61,2],[71,11,61,9],[71,12,61,10,"date"],[71,16,61,14],[71,20,61,18,"endTime"],[71,27,61,25],[71,29,61,27],[72,6,62,4,"dates"],[72,11,62,9],[72,12,62,10,"push"],[72,16,62,14],[72,17,62,15],[72,21,62,15,"constructFrom"],[72,37,62,28],[72,38,62,28,"constructFrom"],[72,51,62,28],[72,53,62,29,"start"],[72,58,62,34],[72,60,62,36,"date"],[72,64,62,40],[72,65,62,41],[72,66,62,42],[73,6,63,4,"date"],[73,10,63,8],[73,13,63,11],[73,17,63,11,"addQuarters"],[73,31,63,22],[73,32,63,22,"addQuarters"],[73,43,63,22],[73,45,63,23,"date"],[73,49,63,27],[73,51,63,29,"step"],[73,55,63,33],[73,56,63,34],[74,4,64,2],[75,4,66,2],[75,11,66,9,"reversed"],[75,19,66,17],[75,22,66,20,"dates"],[75,27,66,25],[75,28,66,26,"reverse"],[75,35,66,33],[75,36,66,34],[75,37,66,35],[75,40,66,38,"dates"],[75,45,66,43],[76,2,67,0],[78,2,69,0],[79,2,70,0],[79,6,70,0,"_default"],[79,14,70,0],[79,17,70,15,"eachQuarterOfInterval"],[79,38,70,36],[80,0,70,37],[80,3]],"functionMap":{"names":["<global>","eachQuarterOfInterval"],"mappings":"AAA;OC4C;CDsB"},"hasCjsExports":false},"type":"js/module"}]}