{"dependencies":[{"name":"./_lib/addLeadingZeros.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"nr19Y2AxEUlGdF0WaI8ULOMy6Cc=","exportNames":["*"],"imports":1}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":37,"index":98}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.formatISO = formatISO;\n  var _libAddLeadingZerosJs = require(_dependencyMap[0], \"./_lib/addLeadingZeros.js\");\n  var _toDateJs = require(_dependencyMap[1], \"./toDate.js\");\n  /**\n   * The {@link formatISO} function options.\n   */\n\n  /**\n   * @name formatISO\n   * @category Common Helpers\n   * @summary Format the date according to the ISO 8601 standard (https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).\n   *\n   * @description\n   * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.\n   *\n   * @param date - The original date\n   * @param options - An object with options.\n   *\n   * @returns The formatted date string (in local time zone)\n   *\n   * @throws `date` must not be Invalid Date\n   *\n   * @example\n   * // Represent 18 September 2019 in ISO 8601 format (local time zone is UTC):\n   * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))\n   * //=> '2019-09-18T19:00:52Z'\n   *\n   * @example\n   * // Represent 18 September 2019 in ISO 8601, short format (local time zone is UTC):\n   * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n   * //=> '20190918T190052'\n   *\n   * @example\n   * // Represent 18 September 2019 in ISO 8601 format, date only:\n   * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n   * //=> '2019-09-18'\n   *\n   * @example\n   * // Represent 18 September 2019 in ISO 8601 format, time only (local time zone is UTC):\n   * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n   * //=> '19:00:52Z'\n   */\n  function formatISO(date, options) {\n    var date_ = (0, _toDateJs.toDate)(date, options?.in);\n    if (isNaN(+date_)) {\n      throw new RangeError(\"Invalid time value\");\n    }\n    var format = options?.format ?? \"extended\";\n    var representation = options?.representation ?? \"complete\";\n    var result = \"\";\n    var tzOffset = \"\";\n    var dateDelimiter = format === \"extended\" ? \"-\" : \"\";\n    var timeDelimiter = format === \"extended\" ? \":\" : \"\";\n\n    // Representation is either 'date' or 'complete'\n    if (representation !== \"time\") {\n      var day = (0, _libAddLeadingZerosJs.addLeadingZeros)(date_.getDate(), 2);\n      var month = (0, _libAddLeadingZerosJs.addLeadingZeros)(date_.getMonth() + 1, 2);\n      var year = (0, _libAddLeadingZerosJs.addLeadingZeros)(date_.getFullYear(), 4);\n\n      // yyyyMMdd or yyyy-MM-dd.\n      result = `${year}${dateDelimiter}${month}${dateDelimiter}${day}`;\n    }\n\n    // Representation is either 'time' or 'complete'\n    if (representation !== \"date\") {\n      // Add the timezone.\n      var offset = date_.getTimezoneOffset();\n      if (offset !== 0) {\n        var absoluteOffset = Math.abs(offset);\n        var hourOffset = (0, _libAddLeadingZerosJs.addLeadingZeros)(Math.trunc(absoluteOffset / 60), 2);\n        var minuteOffset = (0, _libAddLeadingZerosJs.addLeadingZeros)(absoluteOffset % 60, 2);\n        // If less than 0, the sign is +, because it is ahead of time.\n        var sign = offset < 0 ? \"+\" : \"-\";\n        tzOffset = `${sign}${hourOffset}:${minuteOffset}`;\n      } else {\n        tzOffset = \"Z\";\n      }\n      var hour = (0, _libAddLeadingZerosJs.addLeadingZeros)(date_.getHours(), 2);\n      var minute = (0, _libAddLeadingZerosJs.addLeadingZeros)(date_.getMinutes(), 2);\n      var second = (0, _libAddLeadingZerosJs.addLeadingZeros)(date_.getSeconds(), 2);\n\n      // If there's also date, separate it with time with 'T'\n      var separator = result === \"\" ? \"\" : \"T\";\n\n      // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.\n      var time = [hour, minute, second].join(timeDelimiter);\n\n      // HHmmss or HH:mm:ss.\n      result = `${result}${separator}${time}${tzOffset}`;\n    }\n    return result;\n  }\n\n  // Fallback for modularized imports:\n  var _default = formatISO;\n});","lineCount":109,"map":[[7,2,104,0,"Object"],[7,8,104,0],[7,9,104,0,"defineProperty"],[7,23,104,0],[7,24,104,0,"exports"],[7,31,104,0],[8,4,104,0,"enumerable"],[8,14,104,0],[9,4,104,0,"get"],[9,7,104,0],[9,18,104,0,"get"],[9,19,104,0],[10,6,104,0],[10,13,104,0,"_default"],[10,21,104,0],[11,4,104,0],[12,2,104,0],[13,2,43,0,"exports"],[13,9,43,0],[13,10,43,0,"formatISO"],[13,19,43,0],[13,22,43,0,"formatISO"],[13,31,43,0],[14,2,1,0],[14,6,1,0,"_libAddLeadingZerosJs"],[14,27,1,0],[14,30,1,0,"require"],[14,37,1,0],[14,38,1,0,"_dependencyMap"],[14,52,1,0],[15,2,2,0],[15,6,2,0,"_toDateJs"],[15,15,2,0],[15,18,2,0,"require"],[15,25,2,0],[15,26,2,0,"_dependencyMap"],[15,40,2,0],[16,2,4,0],[17,0,5,0],[18,0,6,0],[20,2,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,0,36,0],[49,0,37,0],[50,0,38,0],[51,0,39,0],[52,0,40,0],[53,0,41,0],[54,0,42,0],[55,2,43,7],[55,11,43,16,"formatISO"],[55,20,43,25,"formatISO"],[55,21,43,26,"date"],[55,25,43,30],[55,27,43,32,"options"],[55,34,43,39],[55,36,43,41],[56,4,44,2],[56,8,44,8,"date_"],[56,13,44,13],[56,16,44,16],[56,20,44,16,"toDate"],[56,29,44,22],[56,30,44,22,"toDate"],[56,36,44,22],[56,38,44,23,"date"],[56,42,44,27],[56,44,44,29,"options"],[56,51,44,36],[56,53,44,38,"in"],[56,55,44,40],[56,56,44,41],[57,4,46,2],[57,8,46,6,"isNaN"],[57,13,46,11],[57,14,46,12],[57,15,46,13,"date_"],[57,20,46,18],[57,21,46,19],[57,23,46,21],[58,6,47,4],[58,12,47,10],[58,16,47,14,"RangeError"],[58,26,47,24],[58,27,47,25],[58,47,47,45],[58,48,47,46],[59,4,48,2],[60,4,50,2],[60,8,50,8,"format"],[60,14,50,14],[60,17,50,17,"options"],[60,24,50,24],[60,26,50,26,"format"],[60,32,50,32],[60,36,50,36],[60,46,50,46],[61,4,51,2],[61,8,51,8,"representation"],[61,22,51,22],[61,25,51,25,"options"],[61,32,51,32],[61,34,51,34,"representation"],[61,48,51,48],[61,52,51,52],[61,62,51,62],[62,4,53,2],[62,8,53,6,"result"],[62,14,53,12],[62,17,53,15],[62,19,53,17],[63,4,54,2],[63,8,54,6,"tzOffset"],[63,16,54,14],[63,19,54,17],[63,21,54,19],[64,4,56,2],[64,8,56,8,"dateDelimiter"],[64,21,56,21],[64,24,56,24,"format"],[64,30,56,30],[64,35,56,35],[64,45,56,45],[64,48,56,48],[64,51,56,51],[64,54,56,54],[64,56,56,56],[65,4,57,2],[65,8,57,8,"timeDelimiter"],[65,21,57,21],[65,24,57,24,"format"],[65,30,57,30],[65,35,57,35],[65,45,57,45],[65,48,57,48],[65,51,57,51],[65,54,57,54],[65,56,57,56],[67,4,59,2],[68,4,60,2],[68,8,60,6,"representation"],[68,22,60,20],[68,27,60,25],[68,33,60,31],[68,35,60,33],[69,6,61,4],[69,10,61,10,"day"],[69,13,61,13],[69,16,61,16],[69,20,61,16,"addLeadingZeros"],[69,41,61,31],[69,42,61,31,"addLeadingZeros"],[69,57,61,31],[69,59,61,32,"date_"],[69,64,61,37],[69,65,61,38,"getDate"],[69,72,61,45],[69,73,61,46],[69,74,61,47],[69,76,61,49],[69,77,61,50],[69,78,61,51],[70,6,62,4],[70,10,62,10,"month"],[70,15,62,15],[70,18,62,18],[70,22,62,18,"addLeadingZeros"],[70,43,62,33],[70,44,62,33,"addLeadingZeros"],[70,59,62,33],[70,61,62,34,"date_"],[70,66,62,39],[70,67,62,40,"getMonth"],[70,75,62,48],[70,76,62,49],[70,77,62,50],[70,80,62,53],[70,81,62,54],[70,83,62,56],[70,84,62,57],[70,85,62,58],[71,6,63,4],[71,10,63,10,"year"],[71,14,63,14],[71,17,63,17],[71,21,63,17,"addLeadingZeros"],[71,42,63,32],[71,43,63,32,"addLeadingZeros"],[71,58,63,32],[71,60,63,33,"date_"],[71,65,63,38],[71,66,63,39,"getFullYear"],[71,77,63,50],[71,78,63,51],[71,79,63,52],[71,81,63,54],[71,82,63,55],[71,83,63,56],[73,6,65,4],[74,6,66,4,"result"],[74,12,66,10],[74,15,66,13],[74,18,66,16,"year"],[74,22,66,20],[74,25,66,23,"dateDelimiter"],[74,38,66,36],[74,41,66,39,"month"],[74,46,66,44],[74,49,66,47,"dateDelimiter"],[74,62,66,60],[74,65,66,63,"day"],[74,68,66,66],[74,70,66,68],[75,4,67,2],[77,4,69,2],[78,4,70,2],[78,8,70,6,"representation"],[78,22,70,20],[78,27,70,25],[78,33,70,31],[78,35,70,33],[79,6,71,4],[80,6,72,4],[80,10,72,10,"offset"],[80,16,72,16],[80,19,72,19,"date_"],[80,24,72,24],[80,25,72,25,"getTimezoneOffset"],[80,42,72,42],[80,43,72,43],[80,44,72,44],[81,6,74,4],[81,10,74,8,"offset"],[81,16,74,14],[81,21,74,19],[81,22,74,20],[81,24,74,22],[82,8,75,6],[82,12,75,12,"absoluteOffset"],[82,26,75,26],[82,29,75,29,"Math"],[82,33,75,33],[82,34,75,34,"abs"],[82,37,75,37],[82,38,75,38,"offset"],[82,44,75,44],[82,45,75,45],[83,8,76,6],[83,12,76,12,"hourOffset"],[83,22,76,22],[83,25,76,25],[83,29,76,25,"addLeadingZeros"],[83,50,76,40],[83,51,76,40,"addLeadingZeros"],[83,66,76,40],[83,68,76,41,"Math"],[83,72,76,45],[83,73,76,46,"trunc"],[83,78,76,51],[83,79,76,52,"absoluteOffset"],[83,93,76,66],[83,96,76,69],[83,98,76,71],[83,99,76,72],[83,101,76,74],[83,102,76,75],[83,103,76,76],[84,8,77,6],[84,12,77,12,"minuteOffset"],[84,24,77,24],[84,27,77,27],[84,31,77,27,"addLeadingZeros"],[84,52,77,42],[84,53,77,42,"addLeadingZeros"],[84,68,77,42],[84,70,77,43,"absoluteOffset"],[84,84,77,57],[84,87,77,60],[84,89,77,62],[84,91,77,64],[84,92,77,65],[84,93,77,66],[85,8,78,6],[86,8,79,6],[86,12,79,12,"sign"],[86,16,79,16],[86,19,79,19,"offset"],[86,25,79,25],[86,28,79,28],[86,29,79,29],[86,32,79,32],[86,35,79,35],[86,38,79,38],[86,41,79,41],[87,8,81,6,"tzOffset"],[87,16,81,14],[87,19,81,17],[87,22,81,20,"sign"],[87,26,81,24],[87,29,81,27,"hourOffset"],[87,39,81,37],[87,43,81,41,"minuteOffset"],[87,55,81,53],[87,57,81,55],[88,6,82,4],[88,7,82,5],[88,13,82,11],[89,8,83,6,"tzOffset"],[89,16,83,14],[89,19,83,17],[89,22,83,20],[90,6,84,4],[91,6,86,4],[91,10,86,10,"hour"],[91,14,86,14],[91,17,86,17],[91,21,86,17,"addLeadingZeros"],[91,42,86,32],[91,43,86,32,"addLeadingZeros"],[91,58,86,32],[91,60,86,33,"date_"],[91,65,86,38],[91,66,86,39,"getHours"],[91,74,86,47],[91,75,86,48],[91,76,86,49],[91,78,86,51],[91,79,86,52],[91,80,86,53],[92,6,87,4],[92,10,87,10,"minute"],[92,16,87,16],[92,19,87,19],[92,23,87,19,"addLeadingZeros"],[92,44,87,34],[92,45,87,34,"addLeadingZeros"],[92,60,87,34],[92,62,87,35,"date_"],[92,67,87,40],[92,68,87,41,"getMinutes"],[92,78,87,51],[92,79,87,52],[92,80,87,53],[92,82,87,55],[92,83,87,56],[92,84,87,57],[93,6,88,4],[93,10,88,10,"second"],[93,16,88,16],[93,19,88,19],[93,23,88,19,"addLeadingZeros"],[93,44,88,34],[93,45,88,34,"addLeadingZeros"],[93,60,88,34],[93,62,88,35,"date_"],[93,67,88,40],[93,68,88,41,"getSeconds"],[93,78,88,51],[93,79,88,52],[93,80,88,53],[93,82,88,55],[93,83,88,56],[93,84,88,57],[95,6,90,4],[96,6,91,4],[96,10,91,10,"separator"],[96,19,91,19],[96,22,91,22,"result"],[96,28,91,28],[96,33,91,33],[96,35,91,35],[96,38,91,38],[96,40,91,40],[96,43,91,43],[96,46,91,46],[98,6,93,4],[99,6,94,4],[99,10,94,10,"time"],[99,14,94,14],[99,17,94,17],[99,18,94,18,"hour"],[99,22,94,22],[99,24,94,24,"minute"],[99,30,94,30],[99,32,94,32,"second"],[99,38,94,38],[99,39,94,39],[99,40,94,40,"join"],[99,44,94,44],[99,45,94,45,"timeDelimiter"],[99,58,94,58],[99,59,94,59],[101,6,96,4],[102,6,97,4,"result"],[102,12,97,10],[102,15,97,13],[102,18,97,16,"result"],[102,24,97,22],[102,27,97,25,"separator"],[102,36,97,34],[102,39,97,37,"time"],[102,43,97,41],[102,46,97,44,"tzOffset"],[102,54,97,52],[102,56,97,54],[103,4,98,2],[104,4,100,2],[104,11,100,9,"result"],[104,17,100,15],[105,2,101,0],[107,2,103,0],[108,2,104,0],[108,6,104,0,"_default"],[108,14,104,0],[108,17,104,15,"formatISO"],[108,26,104,24],[109,0,104,25],[109,3]],"functionMap":{"names":["<global>","formatISO"],"mappings":"AAA;OC0C;CD0D"},"hasCjsExports":false},"type":"js/module"}]}