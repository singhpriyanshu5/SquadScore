{"dependencies":[{"name":"./_lib/normalizeInterval.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"RgnQ5fGQDzGiH1jMCpSamjCAQN4=","exportNames":["*"],"imports":1}},{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":65},"end":{"line":2,"column":51,"index":116}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.eachHourOfInterval = eachHourOfInterval;\n  var _libNormalizeIntervalJs = require(_dependencyMap[0], \"./_lib/normalizeInterval.js\");\n  var _constructFromJs = require(_dependencyMap[1], \"./constructFrom.js\");\n  /**\n   * The {@link eachHourOfInterval} function options.\n   */\n\n  /**\n   * The {@link eachHourOfInterval} function result type.\n   * Resolves to the appropriate date type based on inputs.\n   */\n\n  /**\n   * @name eachHourOfInterval\n   * @category Interval Helpers\n   * @summary Return the array of hours within the specified time interval.\n   *\n   * @description\n   * Return the array of hours within the specified time interval.\n   *\n   * @typeParam IntervalType - Interval type.\n   * @typeParam Options - Options type.\n   *\n   * @param interval - The interval.\n   * @param options - An object with options.\n   *\n   * @returns The array with starts of hours from the hour of the interval start to the hour of the interval end\n   *\n   * @example\n   * // Each hour between 6 October 2014, 12:00 and 6 October 2014, 15:00\n   * const result = eachHourOfInterval({\n   *   start: new Date(2014, 9, 6, 12),\n   *   end: new Date(2014, 9, 6, 15)\n   * });\n   * //=> [\n   * //   Mon Oct 06 2014 12:00:00,\n   * //   Mon Oct 06 2014 13:00:00,\n   * //   Mon Oct 06 2014 14:00:00,\n   * //   Mon Oct 06 2014 15:00:00\n   * // ]\n   */\n  function eachHourOfInterval(interval, options) {\n    var _normalizeInterval = (0, _libNormalizeIntervalJs.normalizeInterval)(options?.in, interval),\n      start = _normalizeInterval.start,\n      end = _normalizeInterval.end;\n    var reversed = +start > +end;\n    var endTime = reversed ? +start : +end;\n    var date = reversed ? end : start;\n    date.setMinutes(0, 0, 0);\n    var step = options?.step ?? 1;\n    if (!step) return [];\n    if (step < 0) {\n      step = -step;\n      reversed = !reversed;\n    }\n    var dates = [];\n    while (+date <= endTime) {\n      dates.push((0, _constructFromJs.constructFrom)(start, date));\n      date.setHours(date.getHours() + step);\n    }\n    return reversed ? dates.reverse() : dates;\n  }\n\n  // Fallback for modularized imports:\n  var _default = eachHourOfInterval;\n});","lineCount":78,"map":[[7,2,68,0,"Object"],[7,8,68,0],[7,9,68,0,"defineProperty"],[7,23,68,0],[7,24,68,0,"exports"],[7,31,68,0],[8,4,68,0,"enumerable"],[8,14,68,0],[9,4,68,0,"get"],[9,7,68,0],[9,18,68,0,"get"],[9,19,68,0],[10,6,68,0],[10,13,68,0,"_default"],[10,21,68,0],[11,4,68,0],[12,2,68,0],[13,2,42,0,"exports"],[13,9,42,0],[13,10,42,0,"eachHourOfInterval"],[13,28,42,0],[13,31,42,0,"eachHourOfInterval"],[13,49,42,0],[14,2,1,0],[14,6,1,0,"_libNormalizeIntervalJs"],[14,29,1,0],[14,32,1,0,"require"],[14,39,1,0],[14,40,1,0,"_dependencyMap"],[14,54,1,0],[15,2,2,0],[15,6,2,0,"_constructFromJs"],[15,22,2,0],[15,25,2,0,"require"],[15,32,2,0],[15,33,2,0,"_dependencyMap"],[15,47,2,0],[16,2,4,0],[17,0,5,0],[18,0,6,0],[20,2,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[25,2,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,0,36,0],[49,0,37,0],[50,0,38,0],[51,0,39,0],[52,0,40,0],[53,0,41,0],[54,2,42,7],[54,11,42,16,"eachHourOfInterval"],[54,29,42,34,"eachHourOfInterval"],[54,30,42,35,"interval"],[54,38,42,43],[54,40,42,45,"options"],[54,47,42,52],[54,49,42,54],[55,4,43,2],[55,8,43,2,"_normalizeInterval"],[55,26,43,2],[55,29,43,25],[55,33,43,25,"normalizeInterval"],[55,56,43,42],[55,57,43,42,"normalizeInterval"],[55,74,43,42],[55,76,43,43,"options"],[55,83,43,50],[55,85,43,52,"in"],[55,87,43,54],[55,89,43,56,"interval"],[55,97,43,64],[55,98,43,65],[56,6,43,10,"start"],[56,11,43,15],[56,14,43,15,"_normalizeInterval"],[56,32,43,15],[56,33,43,10,"start"],[56,38,43,15],[57,6,43,17,"end"],[57,9,43,20],[57,12,43,20,"_normalizeInterval"],[57,30,43,20],[57,31,43,17,"end"],[57,34,43,20],[58,4,45,2],[58,8,45,6,"reversed"],[58,16,45,14],[58,19,45,17],[58,20,45,18,"start"],[58,25,45,23],[58,28,45,26],[58,29,45,27,"end"],[58,32,45,30],[59,4,46,2],[59,8,46,8,"endTime"],[59,15,46,15],[59,18,46,18,"reversed"],[59,26,46,26],[59,29,46,29],[59,30,46,30,"start"],[59,35,46,35],[59,38,46,38],[59,39,46,39,"end"],[59,42,46,42],[60,4,47,2],[60,8,47,8,"date"],[60,12,47,12],[60,15,47,15,"reversed"],[60,23,47,23],[60,26,47,26,"end"],[60,29,47,29],[60,32,47,32,"start"],[60,37,47,37],[61,4,48,2,"date"],[61,8,48,6],[61,9,48,7,"setMinutes"],[61,19,48,17],[61,20,48,18],[61,21,48,19],[61,23,48,21],[61,24,48,22],[61,26,48,24],[61,27,48,25],[61,28,48,26],[62,4,50,2],[62,8,50,6,"step"],[62,12,50,10],[62,15,50,13,"options"],[62,22,50,20],[62,24,50,22,"step"],[62,28,50,26],[62,32,50,30],[62,33,50,31],[63,4,51,2],[63,8,51,6],[63,9,51,7,"step"],[63,13,51,11],[63,15,51,13],[63,22,51,20],[63,24,51,22],[64,4,52,2],[64,8,52,6,"step"],[64,12,52,10],[64,15,52,13],[64,16,52,14],[64,18,52,16],[65,6,53,4,"step"],[65,10,53,8],[65,13,53,11],[65,14,53,12,"step"],[65,18,53,16],[66,6,54,4,"reversed"],[66,14,54,12],[66,17,54,15],[66,18,54,16,"reversed"],[66,26,54,24],[67,4,55,2],[68,4,57,2],[68,8,57,8,"dates"],[68,13,57,13],[68,16,57,16],[68,18,57,18],[69,4,59,2],[69,11,59,9],[69,12,59,10,"date"],[69,16,59,14],[69,20,59,18,"endTime"],[69,27,59,25],[69,29,59,27],[70,6,60,4,"dates"],[70,11,60,9],[70,12,60,10,"push"],[70,16,60,14],[70,17,60,15],[70,21,60,15,"constructFrom"],[70,37,60,28],[70,38,60,28,"constructFrom"],[70,51,60,28],[70,53,60,29,"start"],[70,58,60,34],[70,60,60,36,"date"],[70,64,60,40],[70,65,60,41],[70,66,60,42],[71,6,61,4,"date"],[71,10,61,8],[71,11,61,9,"setHours"],[71,19,61,17],[71,20,61,18,"date"],[71,24,61,22],[71,25,61,23,"getHours"],[71,33,61,31],[71,34,61,32],[71,35,61,33],[71,38,61,36,"step"],[71,42,61,40],[71,43,61,41],[72,4,62,2],[73,4,64,2],[73,11,64,9,"reversed"],[73,19,64,17],[73,22,64,20,"dates"],[73,27,64,25],[73,28,64,26,"reverse"],[73,35,64,33],[73,36,64,34],[73,37,64,35],[73,40,64,38,"dates"],[73,45,64,43],[74,2,65,0],[76,2,67,0],[77,2,68,0],[77,6,68,0,"_default"],[77,14,68,0],[77,17,68,15,"eachHourOfInterval"],[77,35,68,33],[78,0,68,34],[78,3]],"functionMap":{"names":["<global>","eachHourOfInterval"],"mappings":"AAA;OCyC;CDuB"},"hasCjsExports":false},"type":"js/module"}]}