{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"p2HPneHw/OdTsxe3h3dVkKepjMk=","exportNames":["*"],"imports":1}},{"name":"./max.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":31,"index":90}}],"key":"/ig9kvdgCUKfntz07z+RRKdvFCY=","exportNames":["*"],"imports":1}},{"name":"./min.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":91},"end":{"line":3,"column":31,"index":122}}],"key":"IaiS1NqD3bj2r8kvzJAuj5V7ZVA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.clamp = clamp;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _libNormalizeDatesJs = require(_dependencyMap[1], \"./_lib/normalizeDates.js\");\n  var _maxJs = require(_dependencyMap[2], \"./max.js\");\n  var _minJs = require(_dependencyMap[3], \"./min.js\");\n  /**\n   * The {@link clamp} function options.\n   */\n\n  /**\n   * The {@link clamp} function result type. It resolves the proper data type.\n   * It uses the first argument date object type, starting from the date argument,\n   * then the start interval date, and finally the end interval date. If\n   * a context function is passed, it uses the context function return type.\n   */\n\n  /**\n   * @name clamp\n   * @category Interval Helpers\n   * @summary Return a date bounded by the start and the end of the given interval.\n   *\n   * @description\n   * Clamps a date to the lower bound with the start of the interval and the upper\n   * bound with the end of the interval.\n   *\n   * - When the date is less than the start of the interval, the start is returned.\n   * - When the date is greater than the end of the interval, the end is returned.\n   * - Otherwise the date is returned.\n   *\n   * @typeParam DateType - Date argument type.\n   * @typeParam IntervalType - Interval argument type.\n   * @typeParam Options - Options type.\n   *\n   * @param date - The date to be bounded\n   * @param interval - The interval to bound to\n   * @param options - An object with options\n   *\n   * @returns The date bounded by the start and the end of the interval\n   *\n   * @example\n   * // What is Mar 21, 2021 bounded to an interval starting at Mar 22, 2021 and ending at Apr 01, 2021\n   * const result = clamp(new Date(2021, 2, 21), {\n   *   start: new Date(2021, 2, 22),\n   *   end: new Date(2021, 3, 1),\n   * })\n   * //=> Mon Mar 22 2021 00:00:00\n   */\n  function clamp(date, interval, options) {\n    var _normalizeDates = (0, _libNormalizeDatesJs.normalizeDates)(options?.in, date, interval.start, interval.end),\n      _normalizeDates2 = (0, _slicedToArray.default)(_normalizeDates, 3),\n      date_ = _normalizeDates2[0],\n      start = _normalizeDates2[1],\n      end = _normalizeDates2[2];\n    return (0, _minJs.min)([(0, _maxJs.max)([date_, start], options), end], options);\n  }\n\n  // Fallback for modularized imports:\n  var _default = clamp;\n});","lineCount":77,"map":[[12,2,59,0,"Object"],[12,8,59,0],[12,9,59,0,"defineProperty"],[12,23,59,0],[12,24,59,0,"exports"],[12,31,59,0],[13,4,59,0,"enumerable"],[13,14,59,0],[14,4,59,0,"get"],[14,7,59,0],[14,18,59,0,"get"],[14,19,59,0],[15,6,59,0],[15,13,59,0,"_default"],[15,21,59,0],[16,4,59,0],[17,2,59,0],[18,2,47,0,"exports"],[18,9,47,0],[18,10,47,0,"clamp"],[18,15,47,0],[18,18,47,0,"clamp"],[18,23,47,0],[19,2,56,1],[19,6,56,1,"_babelRuntimeHelpersSlicedToArray"],[19,39,56,1],[19,42,56,1,"require"],[19,49,56,1],[19,50,56,1,"_dependencyMap"],[19,64,56,1],[20,2,56,1],[20,6,56,1,"_slicedToArray"],[20,20,56,1],[20,23,56,1,"_interopDefault"],[20,38,56,1],[20,39,56,1,"_babelRuntimeHelpersSlicedToArray"],[20,72,56,1],[21,2,1,0],[21,6,1,0,"_libNormalizeDatesJs"],[21,26,1,0],[21,29,1,0,"require"],[21,36,1,0],[21,37,1,0,"_dependencyMap"],[21,51,1,0],[22,2,2,0],[22,6,2,0,"_maxJs"],[22,12,2,0],[22,15,2,0,"require"],[22,22,2,0],[22,23,2,0,"_dependencyMap"],[22,37,2,0],[23,2,3,0],[23,6,3,0,"_minJs"],[23,12,3,0],[23,15,3,0,"require"],[23,22,3,0],[23,23,3,0,"_dependencyMap"],[23,37,3,0],[24,2,5,0],[25,0,6,0],[26,0,7,0],[28,2,9,0],[29,0,10,0],[30,0,11,0],[31,0,12,0],[32,0,13,0],[33,0,14,0],[35,2,16,0],[36,0,17,0],[37,0,18,0],[38,0,19,0],[39,0,20,0],[40,0,21,0],[41,0,22,0],[42,0,23,0],[43,0,24,0],[44,0,25,0],[45,0,26,0],[46,0,27,0],[47,0,28,0],[48,0,29,0],[49,0,30,0],[50,0,31,0],[51,0,32,0],[52,0,33,0],[53,0,34,0],[54,0,35,0],[55,0,36,0],[56,0,37,0],[57,0,38,0],[58,0,39,0],[59,0,40,0],[60,0,41,0],[61,0,42,0],[62,0,43,0],[63,0,44,0],[64,0,45,0],[65,0,46,0],[66,2,47,7],[66,11,47,16,"clamp"],[66,16,47,21,"clamp"],[66,17,47,22,"date"],[66,21,47,26],[66,23,47,28,"interval"],[66,31,47,36],[66,33,47,38,"options"],[66,40,47,45],[66,42,47,47],[67,4,48,2],[67,8,48,2,"_normalizeDates"],[67,23,48,2],[67,26,48,30],[67,30,48,30,"normalizeDates"],[67,50,48,44],[67,51,48,44,"normalizeDates"],[67,65,48,44],[67,67,49,4,"options"],[67,74,49,11],[67,76,49,13,"in"],[67,78,49,15],[67,80,50,4,"date"],[67,84,50,8],[67,86,51,4,"interval"],[67,94,51,12],[67,95,51,13,"start"],[67,100,51,18],[67,102,52,4,"interval"],[67,110,52,12],[67,111,52,13,"end"],[67,114,53,2],[67,115,53,3],[68,6,53,3,"_normalizeDates2"],[68,22,53,3],[68,29,53,3,"_slicedToArray"],[68,43,53,3],[68,44,53,3,"default"],[68,51,53,3],[68,53,53,3,"_normalizeDates"],[68,68,53,3],[69,6,48,9,"date_"],[69,11,48,14],[69,14,48,14,"_normalizeDates2"],[69,30,48,14],[70,6,48,16,"start"],[70,11,48,21],[70,14,48,21,"_normalizeDates2"],[70,30,48,21],[71,6,48,23,"end"],[71,9,48,26],[71,12,48,26,"_normalizeDates2"],[71,28,48,26],[72,4,55,2],[72,11,55,9],[72,15,55,9,"min"],[72,21,55,12],[72,22,55,12,"min"],[72,25,55,12],[72,27,55,13],[72,28,55,14],[72,32,55,14,"max"],[72,38,55,17],[72,39,55,17,"max"],[72,42,55,17],[72,44,55,18],[72,45,55,19,"date_"],[72,50,55,24],[72,52,55,26,"start"],[72,57,55,31],[72,58,55,32],[72,60,55,34,"options"],[72,67,55,41],[72,68,55,42],[72,70,55,44,"end"],[72,73,55,47],[72,74,55,48],[72,76,55,50,"options"],[72,83,55,57],[72,84,55,58],[73,2,56,0],[75,2,58,0],[76,2,59,0],[76,6,59,0,"_default"],[76,14,59,0],[76,17,59,15,"clamp"],[76,22,59,20],[77,0,59,21],[77,3]],"functionMap":{"names":["<global>","clamp"],"mappings":"AAA;OC8C;CDS"},"hasCjsExports":false},"type":"js/module"}]}