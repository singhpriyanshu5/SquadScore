{"dependencies":[{"name":"./path","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0,"index":1134},"end":{"line":22,"column":38,"index":1172}}],"key":"fLgVgLGCXWzozZVWish/SygMBB4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.encodeURLChars = encodeURLChars;\n  exports.isUrl = isUrl;\n  exports.asUrl = asUrl;\n  var _path = require(_dependencyMap[0], \"./path\");\n  // Copyright Joyent, Inc. and other Node contributors.\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a\n  // copy of this software and associated documentation files (the\n  // \"Software\"), to deal in the Software without restriction, including\n  // without limitation the rights to use, copy, modify, merge, publish,\n  // distribute, sublicense, and/or sell copies of the Software, and to permit\n  // persons to whom the Software is furnished to do so, subject to the\n  // following conditions:\n  //\n  // The above copyright notice and this permission notice shall be included\n  // in all copies or substantial portions of the Software.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n  // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n  const percentRegEx = /%/g;\n  const backslashRegEx = /\\\\/g;\n  const newlineRegEx = /\\n/g;\n  const carriageReturnRegEx = /\\r/g;\n  const tabRegEx = /\\t/g;\n  const questionRegex = /\\?/g;\n  const hashRegex = /#/g;\n  const spaceRegEx = / /g;\n  function encodePathChars(filepath) {\n    if (filepath.indexOf('%') !== -1) filepath = filepath.replace(percentRegEx, '%25');\n    // In posix, backslash is a valid character in paths:\n    if (filepath.indexOf('\\\\') !== -1) filepath = filepath.replace(backslashRegEx, '%5C');\n    if (filepath.indexOf('\\n') !== -1) filepath = filepath.replace(newlineRegEx, '%0A');\n    if (filepath.indexOf('\\r') !== -1) filepath = filepath.replace(carriageReturnRegEx, '%0D');\n    if (filepath.indexOf('\\t') !== -1) filepath = filepath.replace(tabRegEx, '%09');\n    if (filepath.indexOf(' ') !== -1) filepath = filepath.replace(spaceRegEx, '%20');\n    return filepath;\n  }\n  function encodeURLChars(path) {\n    let resolved = (0, _path.resolve)(path);\n    // path.resolve strips trailing slashes so we must add them back\n    const filePathLast = path.charAt(path.length - 1);\n    if (filePathLast === '/' && resolved[resolved.length - 1] !== _path.sep) resolved += '/';\n\n    // Call encodePathChars first to avoid encoding % again for ? and #.\n    resolved = encodePathChars(resolved);\n\n    // Question and hash character should be included in pathname.\n    // Therefore, encoding is required to eliminate parsing them in different states.\n    // This is done as an optimization to not creating a URL instance and\n    // later triggering pathname setter, which impacts performance\n    if (resolved.indexOf('?') !== -1) resolved = resolved.replace(questionRegex, '%3F');\n    if (resolved.indexOf('#') !== -1) resolved = resolved.replace(hashRegex, '%23');\n    return resolved;\n  }\n  function isUrl(url) {\n    try {\n      return !!new URL(url);\n    } catch (error) {\n      return false;\n    }\n  }\n  function asUrl(url) {\n    try {\n      const newUrl = new URL(url);\n      newUrl.hash = '';\n      return newUrl;\n    } catch (error) {\n      return null;\n    }\n  }\n});","lineCount":83,"map":[[7,2,44,0,"exports"],[7,9,44,0],[7,10,44,0,"encodeURLChars"],[7,24,44,0],[7,27,44,0,"encodeURLChars"],[7,41,44,0],[8,2,62,0,"exports"],[8,9,62,0],[8,10,62,0,"isUrl"],[8,15,62,0],[8,18,62,0,"isUrl"],[8,23,62,0],[9,2,70,0,"exports"],[9,9,70,0],[9,10,70,0,"asUrl"],[9,15,70,0],[9,18,70,0,"asUrl"],[9,23,70,0],[10,2,22,0],[10,6,22,0,"_path"],[10,11,22,0],[10,14,22,0,"require"],[10,21,22,0],[10,22,22,0,"_dependencyMap"],[10,36,22,0],[11,2,1,0],[12,2,2,0],[13,2,3,0],[14,2,4,0],[15,2,5,0],[16,2,6,0],[17,2,7,0],[18,2,8,0],[19,2,9,0],[20,2,10,0],[21,2,11,0],[22,2,12,0],[23,2,13,0],[24,2,14,0],[25,2,15,0],[26,2,16,0],[27,2,17,0],[28,2,18,0],[29,2,19,0],[30,2,20,0],[32,2,24,0],[32,8,24,6,"percentRegEx"],[32,20,24,18],[32,23,24,21],[32,27,24,25],[33,2,25,0],[33,8,25,6,"backslashRegEx"],[33,22,25,20],[33,25,25,23],[33,30,25,28],[34,2,26,0],[34,8,26,6,"newlineRegEx"],[34,20,26,18],[34,23,26,21],[34,28,26,26],[35,2,27,0],[35,8,27,6,"carriageReturnRegEx"],[35,27,27,25],[35,30,27,28],[35,35,27,33],[36,2,28,0],[36,8,28,6,"tabRegEx"],[36,16,28,14],[36,19,28,17],[36,24,28,22],[37,2,29,0],[37,8,29,6,"questionRegex"],[37,21,29,19],[37,24,29,22],[37,29,29,27],[38,2,30,0],[38,8,30,6,"hashRegex"],[38,17,30,15],[38,20,30,18],[38,24,30,22],[39,2,31,0],[39,8,31,6,"spaceRegEx"],[39,18,31,16],[39,21,31,19],[39,25,31,23],[40,2,33,0],[40,11,33,9,"encodePathChars"],[40,26,33,24,"encodePathChars"],[40,27,33,25,"filepath"],[40,35,33,41],[40,37,33,43],[41,4,34,2],[41,8,34,6,"filepath"],[41,16,34,14],[41,17,34,15,"indexOf"],[41,24,34,22],[41,25,34,23],[41,28,34,26],[41,29,34,27],[41,34,34,32],[41,35,34,33],[41,36,34,34],[41,38,34,36,"filepath"],[41,46,34,44],[41,49,34,47,"filepath"],[41,57,34,55],[41,58,34,56,"replace"],[41,65,34,63],[41,66,34,64,"percentRegEx"],[41,78,34,76],[41,80,34,78],[41,85,34,83],[41,86,34,84],[42,4,35,2],[43,4,36,2],[43,8,36,6,"filepath"],[43,16,36,14],[43,17,36,15,"indexOf"],[43,24,36,22],[43,25,36,23],[43,29,36,27],[43,30,36,28],[43,35,36,33],[43,36,36,34],[43,37,36,35],[43,39,36,37,"filepath"],[43,47,36,45],[43,50,36,48,"filepath"],[43,58,36,56],[43,59,36,57,"replace"],[43,66,36,64],[43,67,36,65,"backslashRegEx"],[43,81,36,79],[43,83,36,81],[43,88,36,86],[43,89,36,87],[44,4,37,2],[44,8,37,6,"filepath"],[44,16,37,14],[44,17,37,15,"indexOf"],[44,24,37,22],[44,25,37,23],[44,29,37,27],[44,30,37,28],[44,35,37,33],[44,36,37,34],[44,37,37,35],[44,39,37,37,"filepath"],[44,47,37,45],[44,50,37,48,"filepath"],[44,58,37,56],[44,59,37,57,"replace"],[44,66,37,64],[44,67,37,65,"newlineRegEx"],[44,79,37,77],[44,81,37,79],[44,86,37,84],[44,87,37,85],[45,4,38,2],[45,8,38,6,"filepath"],[45,16,38,14],[45,17,38,15,"indexOf"],[45,24,38,22],[45,25,38,23],[45,29,38,27],[45,30,38,28],[45,35,38,33],[45,36,38,34],[45,37,38,35],[45,39,38,37,"filepath"],[45,47,38,45],[45,50,38,48,"filepath"],[45,58,38,56],[45,59,38,57,"replace"],[45,66,38,64],[45,67,38,65,"carriageReturnRegEx"],[45,86,38,84],[45,88,38,86],[45,93,38,91],[45,94,38,92],[46,4,39,2],[46,8,39,6,"filepath"],[46,16,39,14],[46,17,39,15,"indexOf"],[46,24,39,22],[46,25,39,23],[46,29,39,27],[46,30,39,28],[46,35,39,33],[46,36,39,34],[46,37,39,35],[46,39,39,37,"filepath"],[46,47,39,45],[46,50,39,48,"filepath"],[46,58,39,56],[46,59,39,57,"replace"],[46,66,39,64],[46,67,39,65,"tabRegEx"],[46,75,39,73],[46,77,39,75],[46,82,39,80],[46,83,39,81],[47,4,40,2],[47,8,40,6,"filepath"],[47,16,40,14],[47,17,40,15,"indexOf"],[47,24,40,22],[47,25,40,23],[47,28,40,26],[47,29,40,27],[47,34,40,32],[47,35,40,33],[47,36,40,34],[47,38,40,36,"filepath"],[47,46,40,44],[47,49,40,47,"filepath"],[47,57,40,55],[47,58,40,56,"replace"],[47,65,40,63],[47,66,40,64,"spaceRegEx"],[47,76,40,74],[47,78,40,76],[47,83,40,81],[47,84,40,82],[48,4,41,2],[48,11,41,9,"filepath"],[48,19,41,17],[49,2,42,0],[50,2,44,7],[50,11,44,16,"encodeURLChars"],[50,25,44,30,"encodeURLChars"],[50,26,44,31,"path"],[50,30,44,43],[50,32,44,45],[51,4,45,2],[51,8,45,6,"resolved"],[51,16,45,14],[51,19,45,17],[51,23,45,17,"resolve"],[51,28,45,24],[51,29,45,24,"resolve"],[51,36,45,24],[51,38,45,25,"path"],[51,42,45,29],[51,43,45,30],[52,4,46,2],[53,4,47,2],[53,10,47,8,"filePathLast"],[53,22,47,20],[53,25,47,23,"path"],[53,29,47,27],[53,30,47,28,"charAt"],[53,36,47,34],[53,37,47,35,"path"],[53,41,47,39],[53,42,47,40,"length"],[53,48,47,46],[53,51,47,49],[53,52,47,50],[53,53,47,51],[54,4,48,2],[54,8,48,6,"filePathLast"],[54,20,48,18],[54,25,48,23],[54,28,48,26],[54,32,48,30,"resolved"],[54,40,48,38],[54,41,48,39,"resolved"],[54,49,48,47],[54,50,48,48,"length"],[54,56,48,54],[54,59,48,57],[54,60,48,58],[54,61,48,59],[54,66,48,64,"sep"],[54,71,48,67],[54,72,48,67,"sep"],[54,75,48,67],[54,77,48,69,"resolved"],[54,85,48,77],[54,89,48,81],[54,92,48,84],[56,4,50,2],[57,4,51,2,"resolved"],[57,12,51,10],[57,15,51,13,"encodePathChars"],[57,30,51,28],[57,31,51,29,"resolved"],[57,39,51,37],[57,40,51,38],[59,4,53,2],[60,4,54,2],[61,4,55,2],[62,4,56,2],[63,4,57,2],[63,8,57,6,"resolved"],[63,16,57,14],[63,17,57,15,"indexOf"],[63,24,57,22],[63,25,57,23],[63,28,57,26],[63,29,57,27],[63,34,57,32],[63,35,57,33],[63,36,57,34],[63,38,57,36,"resolved"],[63,46,57,44],[63,49,57,47,"resolved"],[63,57,57,55],[63,58,57,56,"replace"],[63,65,57,63],[63,66,57,64,"questionRegex"],[63,79,57,77],[63,81,57,79],[63,86,57,84],[63,87,57,85],[64,4,58,2],[64,8,58,6,"resolved"],[64,16,58,14],[64,17,58,15,"indexOf"],[64,24,58,22],[64,25,58,23],[64,28,58,26],[64,29,58,27],[64,34,58,32],[64,35,58,33],[64,36,58,34],[64,38,58,36,"resolved"],[64,46,58,44],[64,49,58,47,"resolved"],[64,57,58,55],[64,58,58,56,"replace"],[64,65,58,63],[64,66,58,64,"hashRegex"],[64,75,58,73],[64,77,58,75],[64,82,58,80],[64,83,58,81],[65,4,59,2],[65,11,59,9,"resolved"],[65,19,59,17],[66,2,60,0],[67,2,62,7],[67,11,62,16,"isUrl"],[67,16,62,21,"isUrl"],[67,17,62,22,"url"],[67,20,62,33],[67,22,62,35],[68,4,63,2],[68,8,63,6],[69,6,64,4],[69,13,64,11],[69,14,64,12],[69,15,64,13],[69,19,64,17,"URL"],[69,22,64,20],[69,23,64,21,"url"],[69,26,64,24],[69,27,64,25],[70,4,65,2],[70,5,65,3],[70,6,65,4],[70,13,65,11,"error"],[70,18,65,16],[70,20,65,18],[71,6,66,4],[71,13,66,11],[71,18,66,16],[72,4,67,2],[73,2,68,0],[74,2,70,7],[74,11,70,16,"asUrl"],[74,16,70,21,"asUrl"],[74,17,70,22,"url"],[74,20,70,39],[74,22,70,41],[75,4,71,2],[75,8,71,6],[76,6,72,4],[76,12,72,10,"newUrl"],[76,18,72,16],[76,21,72,19],[76,25,72,23,"URL"],[76,28,72,26],[76,29,72,27,"url"],[76,32,72,30],[76,33,72,31],[77,6,73,4,"newUrl"],[77,12,73,10],[77,13,73,11,"hash"],[77,17,73,15],[77,20,73,18],[77,22,73,20],[78,6,74,4],[78,13,74,11,"newUrl"],[78,19,74,17],[79,4,75,2],[79,5,75,3],[79,6,75,4],[79,13,75,11,"error"],[79,18,75,16],[79,20,75,18],[80,6,76,4],[80,13,76,11],[80,17,76,15],[81,4,77,2],[82,2,78,0],[83,0,78,1],[83,3]],"functionMap":{"names":["<global>","encodePathChars","encodeURLChars","isUrl","asUrl"],"mappings":"AAA;ACgC;CDS;OEE;CFgB;OGE;CHM;OIE;CJQ"},"hasCjsExports":false},"type":"js/module"}]}