{"dependencies":[{"name":"./constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"46QfplZMuoT7/1B4GqMDknw8q/g=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.milliseconds = milliseconds;\n  var _constantsJs = require(_dependencyMap[0], \"./constants.js\");\n  /**\n   * @name milliseconds\n   * @category Millisecond Helpers\n   * @summary\n   * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\n   *\n   * @description\n   * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\n   *\n   * One years equals 365.2425 days according to the formula:\n   *\n   * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n   * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n   *\n   * One month is a year divided by 12.\n   *\n   * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be added.\n   *\n   * @returns The milliseconds\n   *\n   * @example\n   * // 1 year in milliseconds\n   * milliseconds({ years: 1 })\n   * //=> 31556952000\n   *\n   * // 3 months in milliseconds\n   * milliseconds({ months: 3 })\n   * //=> 7889238000\n   */\n  function milliseconds(_ref) {\n    var years = _ref.years,\n      months = _ref.months,\n      weeks = _ref.weeks,\n      days = _ref.days,\n      hours = _ref.hours,\n      minutes = _ref.minutes,\n      seconds = _ref.seconds;\n    var totalDays = 0;\n    if (years) totalDays += years * _constantsJs.daysInYear;\n    if (months) totalDays += months * (_constantsJs.daysInYear / 12);\n    if (weeks) totalDays += weeks * 7;\n    if (days) totalDays += days;\n    var totalSeconds = totalDays * 24 * 60 * 60;\n    if (hours) totalSeconds += hours * 60 * 60;\n    if (minutes) totalSeconds += minutes * 60;\n    if (seconds) totalSeconds += seconds;\n    return Math.trunc(totalSeconds * 1000);\n  }\n\n  // Fallback for modularized imports:\n  var _default = milliseconds;\n});","lineCount":66,"map":[[7,2,58,0,"Object"],[7,8,58,0],[7,9,58,0,"defineProperty"],[7,23,58,0],[7,24,58,0,"exports"],[7,31,58,0],[8,4,58,0,"enumerable"],[8,14,58,0],[9,4,58,0,"get"],[9,7,58,0],[9,18,58,0,"get"],[9,19,58,0],[10,6,58,0],[10,13,58,0,"_default"],[10,21,58,0],[11,4,58,0],[12,2,58,0],[13,2,32,0,"exports"],[13,9,32,0],[13,10,32,0,"milliseconds"],[13,22,32,0],[13,25,32,0,"milliseconds"],[13,37,32,0],[14,2,1,0],[14,6,1,0,"_constantsJs"],[14,18,1,0],[14,21,1,0,"require"],[14,28,1,0],[14,29,1,0,"_dependencyMap"],[14,43,1,0],[15,2,3,0],[16,0,4,0],[17,0,5,0],[18,0,6,0],[19,0,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,2,32,7],[44,11,32,16,"milliseconds"],[44,23,32,28,"milliseconds"],[44,24,32,28,"_ref"],[44,28,32,28],[44,30,40,3],[45,4,40,3],[45,8,33,2,"years"],[45,13,33,7],[45,16,33,7,"_ref"],[45,20,33,7],[45,21,33,2,"years"],[45,26,33,7],[46,6,34,2,"months"],[46,12,34,8],[46,15,34,8,"_ref"],[46,19,34,8],[46,20,34,2,"months"],[46,26,34,8],[47,6,35,2,"weeks"],[47,11,35,7],[47,14,35,7,"_ref"],[47,18,35,7],[47,19,35,2,"weeks"],[47,24,35,7],[48,6,36,2,"days"],[48,10,36,6],[48,13,36,6,"_ref"],[48,17,36,6],[48,18,36,2,"days"],[48,22,36,6],[49,6,37,2,"hours"],[49,11,37,7],[49,14,37,7,"_ref"],[49,18,37,7],[49,19,37,2,"hours"],[49,24,37,7],[50,6,38,2,"minutes"],[50,13,38,9],[50,16,38,9,"_ref"],[50,20,38,9],[50,21,38,2,"minutes"],[50,28,38,9],[51,6,39,2,"seconds"],[51,13,39,9],[51,16,39,9,"_ref"],[51,20,39,9],[51,21,39,2,"seconds"],[51,28,39,9],[52,4,41,2],[52,8,41,6,"totalDays"],[52,17,41,15],[52,20,41,18],[52,21,41,19],[53,4,43,2],[53,8,43,6,"years"],[53,13,43,11],[53,15,43,13,"totalDays"],[53,24,43,22],[53,28,43,26,"years"],[53,33,43,31],[53,36,43,34,"daysInYear"],[53,48,43,44],[53,49,43,44,"daysInYear"],[53,59,43,44],[54,4,44,2],[54,8,44,6,"months"],[54,14,44,12],[54,16,44,14,"totalDays"],[54,25,44,23],[54,29,44,27,"months"],[54,35,44,33],[54,39,44,37,"daysInYear"],[54,51,44,47],[54,52,44,47,"daysInYear"],[54,62,44,47],[54,65,44,50],[54,67,44,52],[54,68,44,53],[55,4,45,2],[55,8,45,6,"weeks"],[55,13,45,11],[55,15,45,13,"totalDays"],[55,24,45,22],[55,28,45,26,"weeks"],[55,33,45,31],[55,36,45,34],[55,37,45,35],[56,4,46,2],[56,8,46,6,"days"],[56,12,46,10],[56,14,46,12,"totalDays"],[56,23,46,21],[56,27,46,25,"days"],[56,31,46,29],[57,4,48,2],[57,8,48,6,"totalSeconds"],[57,20,48,18],[57,23,48,21,"totalDays"],[57,32,48,30],[57,35,48,33],[57,37,48,35],[57,40,48,38],[57,42,48,40],[57,45,48,43],[57,47,48,45],[58,4,50,2],[58,8,50,6,"hours"],[58,13,50,11],[58,15,50,13,"totalSeconds"],[58,27,50,25],[58,31,50,29,"hours"],[58,36,50,34],[58,39,50,37],[58,41,50,39],[58,44,50,42],[58,46,50,44],[59,4,51,2],[59,8,51,6,"minutes"],[59,15,51,13],[59,17,51,15,"totalSeconds"],[59,29,51,27],[59,33,51,31,"minutes"],[59,40,51,38],[59,43,51,41],[59,45,51,43],[60,4,52,2],[60,8,52,6,"seconds"],[60,15,52,13],[60,17,52,15,"totalSeconds"],[60,29,52,27],[60,33,52,31,"seconds"],[60,40,52,38],[61,4,54,2],[61,11,54,9,"Math"],[61,15,54,13],[61,16,54,14,"trunc"],[61,21,54,19],[61,22,54,20,"totalSeconds"],[61,34,54,32],[61,37,54,35],[61,41,54,39],[61,42,54,40],[62,2,55,0],[64,2,57,0],[65,2,58,0],[65,6,58,0,"_default"],[65,14,58,0],[65,17,58,15,"milliseconds"],[65,29,58,27],[66,0,58,28],[66,3]],"functionMap":{"names":["<global>","milliseconds"],"mappings":"AAA;OC+B;CDuB"},"hasCjsExports":false},"type":"js/module"}]}