{"dependencies":[{"name":"@babel/runtime/helpers/toArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yxbT34yjmkVZuhOKwnPlwW2nTdA=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"./path","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":54},"end":{"line":2,"column":35,"index":89}}],"key":"fLgVgLGCXWzozZVWish/SygMBB4=","exportNames":["*"],"imports":1}},{"name":"./url","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":90},"end":{"line":3,"column":53,"index":143}}],"key":"yvV8OElsINQcWHj+V4jjurOl35o=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"PathUtilities\", {\n    enumerable: true,\n    get: function () {\n      return PathUtilities;\n    }\n  });\n  var _babelRuntimeHelpersToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/toArray\");\n  var _toArray = _interopDefault(_babelRuntimeHelpersToArray);\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _path = require(_dependencyMap[3], \"./path\");\n  var nodePath = _interopNamespace(_path);\n  var _url = require(_dependencyMap[4], \"./url\");\n  function uriObjectToString(path) {\n    return typeof path === 'string' ? path : path.uri;\n  }\n  var PathUtilities = /*#__PURE__*/function () {\n    function PathUtilities() {\n      (0, _classCallCheck.default)(this, PathUtilities);\n    }\n    return (0, _createClass.default)(PathUtilities, null, [{\n      key: \"join\",\n      value:\n      /**\n       * Joins path segments into a single path.\n       * @param paths - An array of path segments.\n       * @returns A string representing the joined path.\n       */\n      function join() {\n        for (var _len = arguments.length, paths = new Array(_len), _key = 0; _key < _len; _key++) {\n          paths[_key] = arguments[_key];\n        }\n        var _paths$map = paths.map(uriObjectToString),\n          _paths$map2 = (0, _toArray.default)(_paths$map),\n          firstSegment = _paths$map2[0],\n          rest = _paths$map2.slice(1);\n        var pathAsUrl = (0, _url.asUrl)(firstSegment);\n        if (pathAsUrl) {\n          pathAsUrl.pathname = nodePath.join(pathAsUrl.pathname, ...rest.map(_url.encodeURLChars));\n          return pathAsUrl.toString();\n        }\n        return nodePath.join(firstSegment, ...rest.map(_url.encodeURLChars));\n      }\n\n      /**\n       * Resolves a relative path to an absolute path.\n       * @param from - The base path.\n       * @param to - The relative path.\n       * @returns A string representing the resolved path.\n       */\n    }, {\n      key: \"relative\",\n      value: function relative(from, to) {\n        var fromString = uriObjectToString(from);\n        var toString = uriObjectToString(to);\n\n        // If the first path is a file URL, convert it to a path\n        if ((0, _url.isUrl)(fromString)) {\n          from = (0, _url.asUrl)(fromString).pathname;\n        }\n        // If the second path is a file URL, convert it to a path\n        if ((0, _url.isUrl)(toString)) {\n          to = (0, _url.asUrl)(toString).pathname;\n        }\n        return nodePath.relative(fromString, toString);\n      }\n\n      /**\n       * Checks if a path is absolute.\n       * @param path - The path to check.\n       * @returns `true` if the path is absolute, `false` otherwise.\n       */\n    }, {\n      key: \"isAbsolute\",\n      value: function isAbsolute(path) {\n        var pathString = uriObjectToString(path);\n        if ((0, _url.isUrl)(pathString)) {\n          return true;\n        }\n        return nodePath.isAbsolute(pathString);\n      }\n\n      /**\n       * Normalizes a path.\n       * @param path - The path to normalize.\n       * @returns A string representing the normalized path.\n       */\n    }, {\n      key: \"normalize\",\n      value: function normalize(path) {\n        var pathString = uriObjectToString(path);\n        var pathURL = (0, _url.asUrl)((0, _url.encodeURLChars)(pathString));\n        if (pathURL) {\n          pathURL.pathname = (0, _url.encodeURLChars)(nodePath.normalize(decodeURIComponent(pathURL.pathname)));\n          return pathURL.toString();\n        }\n        return nodePath.normalize(pathString);\n      }\n\n      /**\n       * Returns the directory name of a path.\n       * @param path - The path to get the directory name from.\n       * @returns A string representing the directory name.\n       */\n    }, {\n      key: \"dirname\",\n      value: function dirname(path) {\n        var pathString = uriObjectToString(path);\n        var pathURL = (0, _url.asUrl)(pathString);\n        if (pathURL) {\n          pathURL.pathname = (0, _url.encodeURLChars)(nodePath.dirname(decodeURIComponent(pathURL.pathname)));\n          return pathURL.toString();\n        }\n        return nodePath.dirname(pathString);\n      }\n\n      /**\n       * Returns the base name of a path.\n       * @param path - The path to get the base name from.\n       * @param ext - An optional file extension.\n       * @returns A string representing the base name.\n       */\n    }, {\n      key: \"basename\",\n      value: function basename(path, ext) {\n        var pathString = uriObjectToString(path);\n        var pathURL = (0, _url.asUrl)(pathString);\n        if (pathURL) {\n          return nodePath.basename(decodeURIComponent(pathURL.pathname));\n        }\n        return nodePath.basename(pathString, ext);\n      }\n\n      /**\n       * Returns the extension of a path.\n       * @param path - The path to get the extension from.\n       * @returns A string representing the extension.\n       */\n    }, {\n      key: \"extname\",\n      value: function extname(path) {\n        var pathString = uriObjectToString(path);\n        var pathURL = (0, _url.asUrl)(pathString);\n        if (pathURL) {\n          return nodePath.extname(decodeURIComponent(pathURL.pathname));\n        }\n        return nodePath.extname(pathString);\n      }\n\n      /**\n       * Parses a path into its components.\n       * @param path - The path to parse.\n       * @returns An object containing the parsed path components.\n       */\n    }, {\n      key: \"parse\",\n      value: function parse(path) {\n        var pathString = uriObjectToString(path);\n        var pathURL = (0, _url.asUrl)(pathString);\n        if (pathURL) {\n          return nodePath.parse(decodeURIComponent(pathURL.pathname));\n        }\n        return nodePath.parse(pathString);\n      }\n    }]);\n  }();\n});","lineCount":195,"map":[[27,2,9,0,"Object"],[27,8,9,0],[27,9,9,0,"defineProperty"],[27,23,9,0],[27,24,9,0,"exports"],[27,31,9,0],[28,4,9,0,"enumerable"],[28,14,9,0],[29,4,9,0,"get"],[29,7,9,0],[29,18,9,0,"get"],[29,19,9,0],[30,6,9,0],[30,13,9,0,"PathUtilities"],[30,26,9,0],[31,4,9,0],[32,2,9,0],[33,2,137,1],[33,6,137,1,"_babelRuntimeHelpersToArray"],[33,33,137,1],[33,36,137,1,"require"],[33,43,137,1],[33,44,137,1,"_dependencyMap"],[33,58,137,1],[34,2,137,1],[34,6,137,1,"_toArray"],[34,14,137,1],[34,17,137,1,"_interopDefault"],[34,32,137,1],[34,33,137,1,"_babelRuntimeHelpersToArray"],[34,60,137,1],[35,2,137,1],[35,6,137,1,"_babelRuntimeHelpersClassCallCheck"],[35,40,137,1],[35,43,137,1,"require"],[35,50,137,1],[35,51,137,1,"_dependencyMap"],[35,65,137,1],[36,2,137,1],[36,6,137,1,"_classCallCheck"],[36,21,137,1],[36,24,137,1,"_interopDefault"],[36,39,137,1],[36,40,137,1,"_babelRuntimeHelpersClassCallCheck"],[36,74,137,1],[37,2,137,1],[37,6,137,1,"_babelRuntimeHelpersCreateClass"],[37,37,137,1],[37,40,137,1,"require"],[37,47,137,1],[37,48,137,1,"_dependencyMap"],[37,62,137,1],[38,2,137,1],[38,6,137,1,"_createClass"],[38,18,137,1],[38,21,137,1,"_interopDefault"],[38,36,137,1],[38,37,137,1,"_babelRuntimeHelpersCreateClass"],[38,68,137,1],[39,2,2,0],[39,6,2,0,"_path"],[39,11,2,0],[39,14,2,0,"require"],[39,21,2,0],[39,22,2,0,"_dependencyMap"],[39,36,2,0],[40,2,2,0],[40,6,2,0,"nodePath"],[40,14,2,0],[40,17,2,0,"_interopNamespace"],[40,34,2,0],[40,35,2,0,"_path"],[40,40,2,0],[41,2,3,0],[41,6,3,0,"_url"],[41,10,3,0],[41,13,3,0,"require"],[41,20,3,0],[41,21,3,0,"_dependencyMap"],[41,35,3,0],[42,2,5,0],[42,11,5,9,"uriObjectToString"],[42,28,5,26,"uriObjectToString"],[42,29,5,27,"path"],[42,33,5,58],[42,35,5,68],[43,4,6,2],[43,11,6,9],[43,18,6,16,"path"],[43,22,6,20],[43,27,6,25],[43,35,6,33],[43,38,6,36,"path"],[43,42,6,40],[43,45,6,43,"path"],[43,49,6,47],[43,50,6,48,"uri"],[43,53,6,51],[44,2,7,0],[45,2,7,1],[45,6,9,13,"PathUtilities"],[45,19,9,26],[46,4,9,26],[46,13,9,26,"PathUtilities"],[46,27,9,26],[47,6,9,26],[47,10,9,26,"_classCallCheck"],[47,25,9,26],[47,26,9,26,"default"],[47,33,9,26],[47,41,9,26,"PathUtilities"],[47,54,9,26],[48,4,9,26],[49,4,9,26],[49,15,9,26,"_createClass"],[49,27,9,26],[49,28,9,26,"default"],[49,35,9,26],[49,37,9,26,"PathUtilities"],[49,50,9,26],[50,6,9,26,"key"],[50,9,9,26],[51,6,9,26,"value"],[51,11,9,26],[52,6,10,2],[53,0,11,0],[54,0,12,0],[55,0,13,0],[56,0,14,0],[57,6,15,2],[57,15,15,9,"join"],[57,19,15,13,"join"],[57,20,15,13],[57,22,15,63],[58,8,15,63],[58,17,15,63,"_len"],[58,21,15,63],[58,24,15,63,"arguments"],[58,33,15,63],[58,34,15,63,"length"],[58,40,15,63],[58,42,15,17,"paths"],[58,47,15,22],[58,54,15,22,"Array"],[58,59,15,22],[58,60,15,22,"_len"],[58,64,15,22],[58,67,15,22,"_key"],[58,71,15,22],[58,77,15,22,"_key"],[58,81,15,22],[58,84,15,22,"_len"],[58,88,15,22],[58,90,15,22,"_key"],[58,94,15,22],[59,10,15,17,"paths"],[59,15,15,22],[59,16,15,22,"_key"],[59,20,15,22],[59,24,15,22,"arguments"],[59,33,15,22],[59,34,15,22,"_key"],[59,38,15,22],[60,8,15,22],[61,8,16,4],[61,12,16,4,"_paths$map"],[61,22,16,4],[61,25,16,36,"paths"],[61,30,16,41],[61,31,16,42,"map"],[61,34,16,45],[61,35,16,46,"uriObjectToString"],[61,52,16,63],[61,53,16,64],[62,10,16,64,"_paths$map2"],[62,21,16,64],[62,28,16,64,"_toArray"],[62,36,16,64],[62,37,16,64,"default"],[62,44,16,64],[62,46,16,64,"_paths$map"],[62,56,16,64],[63,10,16,11,"firstSegment"],[63,22,16,23],[63,25,16,23,"_paths$map2"],[63,36,16,23],[64,10,16,28,"rest"],[64,14,16,32],[64,17,16,32,"_paths$map2"],[64,28,16,32],[64,29,16,32,"slice"],[64,34,16,32],[65,8,17,4],[65,12,17,10,"pathAsUrl"],[65,21,17,19],[65,24,17,22],[65,28,17,22,"asUrl"],[65,32,17,27],[65,33,17,27,"asUrl"],[65,38,17,27],[65,40,17,28,"firstSegment"],[65,52,17,40],[65,53,17,41],[66,8,18,4],[66,12,18,8,"pathAsUrl"],[66,21,18,17],[66,23,18,19],[67,10,19,6,"pathAsUrl"],[67,19,19,15],[67,20,19,16,"pathname"],[67,28,19,24],[67,31,19,27,"nodePath"],[67,39,19,35],[67,40,19,36,"join"],[67,44,19,40],[67,45,19,41,"pathAsUrl"],[67,54,19,50],[67,55,19,51,"pathname"],[67,63,19,59],[67,65,19,61],[67,68,19,64,"rest"],[67,72,19,68],[67,73,19,69,"map"],[67,76,19,72],[67,77,19,73,"encodeURLChars"],[67,81,19,87],[67,82,19,87,"encodeURLChars"],[67,96,19,87],[67,97,19,88],[67,98,19,89],[68,10,20,6],[68,17,20,13,"pathAsUrl"],[68,26,20,22],[68,27,20,23,"toString"],[68,35,20,31],[68,36,20,32],[68,37,20,33],[69,8,21,4],[70,8,22,4],[70,15,22,11,"nodePath"],[70,23,22,19],[70,24,22,20,"join"],[70,28,22,24],[70,29,22,25,"firstSegment"],[70,41,22,37],[70,43,22,39],[70,46,22,42,"rest"],[70,50,22,46],[70,51,22,47,"map"],[70,54,22,50],[70,55,22,51,"encodeURLChars"],[70,59,22,65],[70,60,22,65,"encodeURLChars"],[70,74,22,65],[70,75,22,66],[70,76,22,67],[71,6,23,2],[73,6,25,2],[74,0,26,0],[75,0,27,0],[76,0,28,0],[77,0,29,0],[78,0,30,0],[79,4,25,2],[80,6,25,2,"key"],[80,9,25,2],[81,6,25,2,"value"],[81,11,25,2],[81,13,31,2],[81,22,31,9,"relative"],[81,30,31,17,"relative"],[81,31,31,18,"from"],[81,35,31,49],[81,37,31,51,"to"],[81,39,31,80],[81,41,31,90],[82,8,32,4],[82,12,32,10,"fromString"],[82,22,32,20],[82,25,32,23,"uriObjectToString"],[82,42,32,40],[82,43,32,41,"from"],[82,47,32,45],[82,48,32,46],[83,8,33,4],[83,12,33,10,"toString"],[83,20,33,18],[83,23,33,21,"uriObjectToString"],[83,40,33,38],[83,41,33,39,"to"],[83,43,33,41],[83,44,33,42],[85,8,35,4],[86,8,36,4],[86,12,36,8],[86,16,36,8,"isUrl"],[86,20,36,13],[86,21,36,13,"isUrl"],[86,26,36,13],[86,28,36,14,"fromString"],[86,38,36,24],[86,39,36,25],[86,41,36,27],[87,10,37,6,"from"],[87,14,37,10],[87,17,37,13],[87,21,37,13,"asUrl"],[87,25,37,18],[87,26,37,18,"asUrl"],[87,31,37,18],[87,33,37,19,"fromString"],[87,43,37,29],[87,44,37,30],[87,45,37,32,"pathname"],[87,53,37,40],[88,8,38,4],[89,8,39,4],[90,8,40,4],[90,12,40,8],[90,16,40,8,"isUrl"],[90,20,40,13],[90,21,40,13,"isUrl"],[90,26,40,13],[90,28,40,14,"toString"],[90,36,40,22],[90,37,40,23],[90,39,40,25],[91,10,41,6,"to"],[91,12,41,8],[91,15,41,11],[91,19,41,11,"asUrl"],[91,23,41,16],[91,24,41,16,"asUrl"],[91,29,41,16],[91,31,41,17,"toString"],[91,39,41,25],[91,40,41,26],[91,41,41,28,"pathname"],[91,49,41,36],[92,8,42,4],[93,8,43,4],[93,15,43,11,"nodePath"],[93,23,43,19],[93,24,43,20,"relative"],[93,32,43,28],[93,33,43,29,"fromString"],[93,43,43,39],[93,45,43,41,"toString"],[93,53,43,49],[93,54,43,50],[94,6,44,2],[96,6,46,2],[97,0,47,0],[98,0,48,0],[99,0,49,0],[100,0,50,0],[101,4,46,2],[102,6,46,2,"key"],[102,9,46,2],[103,6,46,2,"value"],[103,11,46,2],[103,13,51,2],[103,22,51,9,"isAbsolute"],[103,32,51,19,"isAbsolute"],[103,33,51,20,"path"],[103,37,51,51],[103,39,51,62],[104,8,52,4],[104,12,52,10,"pathString"],[104,22,52,20],[104,25,52,23,"uriObjectToString"],[104,42,52,40],[104,43,52,41,"path"],[104,47,52,45],[104,48,52,46],[105,8,53,4],[105,12,53,8],[105,16,53,8,"isUrl"],[105,20,53,13],[105,21,53,13,"isUrl"],[105,26,53,13],[105,28,53,14,"pathString"],[105,38,53,24],[105,39,53,25],[105,41,53,27],[106,10,54,6],[106,17,54,13],[106,21,54,17],[107,8,55,4],[108,8,56,4],[108,15,56,11,"nodePath"],[108,23,56,19],[108,24,56,20,"isAbsolute"],[108,34,56,30],[108,35,56,31,"pathString"],[108,45,56,41],[108,46,56,42],[109,6,57,2],[111,6,59,2],[112,0,60,0],[113,0,61,0],[114,0,62,0],[115,0,63,0],[116,4,59,2],[117,6,59,2,"key"],[117,9,59,2],[118,6,59,2,"value"],[118,11,59,2],[118,13,64,2],[118,22,64,9,"normalize"],[118,31,64,18,"normalize"],[118,32,64,19,"path"],[118,36,64,50],[118,38,64,60],[119,8,65,4],[119,12,65,10,"pathString"],[119,22,65,20],[119,25,65,23,"uriObjectToString"],[119,42,65,40],[119,43,65,41,"path"],[119,47,65,45],[119,48,65,46],[120,8,66,4],[120,12,66,10,"pathURL"],[120,19,66,17],[120,22,66,20],[120,26,66,20,"asUrl"],[120,30,66,25],[120,31,66,25,"asUrl"],[120,36,66,25],[120,38,66,26],[120,42,66,26,"encodeURLChars"],[120,46,66,40],[120,47,66,40,"encodeURLChars"],[120,61,66,40],[120,63,66,41,"pathString"],[120,73,66,51],[120,74,66,52],[120,75,66,53],[121,8,67,4],[121,12,67,8,"pathURL"],[121,19,67,15],[121,21,67,17],[122,10,68,6,"pathURL"],[122,17,68,13],[122,18,68,14,"pathname"],[122,26,68,22],[122,29,68,25],[122,33,68,25,"encodeURLChars"],[122,37,68,39],[122,38,68,39,"encodeURLChars"],[122,52,68,39],[122,54,68,40,"nodePath"],[122,62,68,48],[122,63,68,49,"normalize"],[122,72,68,58],[122,73,68,59,"decodeURIComponent"],[122,91,68,77],[122,92,68,78,"pathURL"],[122,99,68,85],[122,100,68,86,"pathname"],[122,108,68,94],[122,109,68,95],[122,110,68,96],[122,111,68,97],[123,10,69,6],[123,17,69,13,"pathURL"],[123,24,69,20],[123,25,69,21,"toString"],[123,33,69,29],[123,34,69,30],[123,35,69,31],[124,8,70,4],[125,8,71,4],[125,15,71,11,"nodePath"],[125,23,71,19],[125,24,71,20,"normalize"],[125,33,71,29],[125,34,71,30,"pathString"],[125,44,71,40],[125,45,71,41],[126,6,72,2],[128,6,74,2],[129,0,75,0],[130,0,76,0],[131,0,77,0],[132,0,78,0],[133,4,74,2],[134,6,74,2,"key"],[134,9,74,2],[135,6,74,2,"value"],[135,11,74,2],[135,13,79,2],[135,22,79,9,"dirname"],[135,29,79,16,"dirname"],[135,30,79,17,"path"],[135,34,79,48],[135,36,79,58],[136,8,80,4],[136,12,80,10,"pathString"],[136,22,80,20],[136,25,80,23,"uriObjectToString"],[136,42,80,40],[136,43,80,41,"path"],[136,47,80,45],[136,48,80,46],[137,8,81,4],[137,12,81,10,"pathURL"],[137,19,81,17],[137,22,81,20],[137,26,81,20,"asUrl"],[137,30,81,25],[137,31,81,25,"asUrl"],[137,36,81,25],[137,38,81,26,"pathString"],[137,48,81,36],[137,49,81,37],[138,8,82,4],[138,12,82,8,"pathURL"],[138,19,82,15],[138,21,82,17],[139,10,83,6,"pathURL"],[139,17,83,13],[139,18,83,14,"pathname"],[139,26,83,22],[139,29,83,25],[139,33,83,25,"encodeURLChars"],[139,37,83,39],[139,38,83,39,"encodeURLChars"],[139,52,83,39],[139,54,83,40,"nodePath"],[139,62,83,48],[139,63,83,49,"dirname"],[139,70,83,56],[139,71,83,57,"decodeURIComponent"],[139,89,83,75],[139,90,83,76,"pathURL"],[139,97,83,83],[139,98,83,84,"pathname"],[139,106,83,92],[139,107,83,93],[139,108,83,94],[139,109,83,95],[140,10,84,6],[140,17,84,13,"pathURL"],[140,24,84,20],[140,25,84,21,"toString"],[140,33,84,29],[140,34,84,30],[140,35,84,31],[141,8,85,4],[142,8,86,4],[142,15,86,11,"nodePath"],[142,23,86,19],[142,24,86,20,"dirname"],[142,31,86,27],[142,32,86,28,"pathString"],[142,42,86,38],[142,43,86,39],[143,6,87,2],[145,6,89,2],[146,0,90,0],[147,0,91,0],[148,0,92,0],[149,0,93,0],[150,0,94,0],[151,4,89,2],[152,6,89,2,"key"],[152,9,89,2],[153,6,89,2,"value"],[153,11,89,2],[153,13,95,2],[153,22,95,9,"basename"],[153,30,95,17,"basename"],[153,31,95,18,"path"],[153,35,95,49],[153,37,95,51,"ext"],[153,40,95,63],[153,42,95,73],[154,8,96,4],[154,12,96,10,"pathString"],[154,22,96,20],[154,25,96,23,"uriObjectToString"],[154,42,96,40],[154,43,96,41,"path"],[154,47,96,45],[154,48,96,46],[155,8,97,4],[155,12,97,10,"pathURL"],[155,19,97,17],[155,22,97,20],[155,26,97,20,"asUrl"],[155,30,97,25],[155,31,97,25,"asUrl"],[155,36,97,25],[155,38,97,26,"pathString"],[155,48,97,36],[155,49,97,37],[156,8,98,4],[156,12,98,8,"pathURL"],[156,19,98,15],[156,21,98,17],[157,10,99,6],[157,17,99,13,"nodePath"],[157,25,99,21],[157,26,99,22,"basename"],[157,34,99,30],[157,35,99,31,"decodeURIComponent"],[157,53,99,49],[157,54,99,50,"pathURL"],[157,61,99,57],[157,62,99,58,"pathname"],[157,70,99,66],[157,71,99,67],[157,72,99,68],[158,8,100,4],[159,8,101,4],[159,15,101,11,"nodePath"],[159,23,101,19],[159,24,101,20,"basename"],[159,32,101,28],[159,33,101,29,"pathString"],[159,43,101,39],[159,45,101,41,"ext"],[159,48,101,44],[159,49,101,45],[160,6,102,2],[162,6,104,2],[163,0,105,0],[164,0,106,0],[165,0,107,0],[166,0,108,0],[167,4,104,2],[168,6,104,2,"key"],[168,9,104,2],[169,6,104,2,"value"],[169,11,104,2],[169,13,109,2],[169,22,109,9,"extname"],[169,29,109,16,"extname"],[169,30,109,17,"path"],[169,34,109,48],[169,36,109,58],[170,8,110,4],[170,12,110,10,"pathString"],[170,22,110,20],[170,25,110,23,"uriObjectToString"],[170,42,110,40],[170,43,110,41,"path"],[170,47,110,45],[170,48,110,46],[171,8,111,4],[171,12,111,10,"pathURL"],[171,19,111,17],[171,22,111,20],[171,26,111,20,"asUrl"],[171,30,111,25],[171,31,111,25,"asUrl"],[171,36,111,25],[171,38,111,26,"pathString"],[171,48,111,36],[171,49,111,37],[172,8,112,4],[172,12,112,8,"pathURL"],[172,19,112,15],[172,21,112,17],[173,10,113,6],[173,17,113,13,"nodePath"],[173,25,113,21],[173,26,113,22,"extname"],[173,33,113,29],[173,34,113,30,"decodeURIComponent"],[173,52,113,48],[173,53,113,49,"pathURL"],[173,60,113,56],[173,61,113,57,"pathname"],[173,69,113,65],[173,70,113,66],[173,71,113,67],[174,8,114,4],[175,8,115,4],[175,15,115,11,"nodePath"],[175,23,115,19],[175,24,115,20,"extname"],[175,31,115,27],[175,32,115,28,"pathString"],[175,42,115,38],[175,43,115,39],[176,6,116,2],[178,6,118,2],[179,0,119,0],[180,0,120,0],[181,0,121,0],[182,0,122,0],[183,4,118,2],[184,6,118,2,"key"],[184,9,118,2],[185,6,118,2,"value"],[185,11,118,2],[185,13,123,2],[185,22,123,9,"parse"],[185,27,123,14,"parse"],[185,28,123,15,"path"],[185,32,123,46],[185,34,129,4],[186,8,130,4],[186,12,130,10,"pathString"],[186,22,130,20],[186,25,130,23,"uriObjectToString"],[186,42,130,40],[186,43,130,41,"path"],[186,47,130,45],[186,48,130,46],[187,8,131,4],[187,12,131,10,"pathURL"],[187,19,131,17],[187,22,131,20],[187,26,131,20,"asUrl"],[187,30,131,25],[187,31,131,25,"asUrl"],[187,36,131,25],[187,38,131,26,"pathString"],[187,48,131,36],[187,49,131,37],[188,8,132,4],[188,12,132,8,"pathURL"],[188,19,132,15],[188,21,132,17],[189,10,133,6],[189,17,133,13,"nodePath"],[189,25,133,21],[189,26,133,22,"parse"],[189,31,133,27],[189,32,133,28,"decodeURIComponent"],[189,50,133,46],[189,51,133,47,"pathURL"],[189,58,133,54],[189,59,133,55,"pathname"],[189,67,133,63],[189,68,133,64],[189,69,133,65],[190,8,134,4],[191,8,135,4],[191,15,135,11,"nodePath"],[191,23,135,19],[191,24,135,20,"parse"],[191,29,135,25],[191,30,135,26,"pathString"],[191,40,135,36],[191,41,135,37],[192,6,136,2],[193,4,136,3],[194,2,136,3],[195,0,136,3],[195,3]],"functionMap":{"names":["<global>","uriObjectToString","PathUtilities","PathUtilities.join","PathUtilities.relative","PathUtilities.isAbsolute","PathUtilities.normalize","PathUtilities.dirname","PathUtilities.basename","PathUtilities.extname","PathUtilities.parse"],"mappings":"AAA;ACI;CDE;OEE;ECM;GDQ;EEQ;GFa;EGO;GHM;EIO;GJQ;EKO;GLQ;EMQ;GNO;EOO;GPO;EQO;GRa;CFC"},"hasCjsExports":false},"type":"js/module"}]}