{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"p2HPneHw/OdTsxe3h3dVkKepjMk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.interval = interval;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _libNormalizeDatesJs = require(_dependencyMap[1], \"./_lib/normalizeDates.js\");\n  /**\n   * The {@link interval} function options.\n   */\n\n  /**\n   * The {@link interval} function result type. It resolves the proper data type.\n   * It uses the first argument date object type, starting from the start argument,\n   * then the end interval date. If a context function is passed, it uses the context\n   * function return type.\n   */\n\n  /**\n   * @name interval\n   * @category Interval Helpers\n   * @summary Creates an interval object and validates its values.\n   *\n   * @description\n   * Creates a normalized interval object and validates its values. If the interval is invalid, an exception is thrown.\n   *\n   * @typeParam StartDate - Start date type.\n   * @typeParam EndDate - End date type.\n   * @typeParam Options - Options type.\n   *\n   * @param start - The start of the interval.\n   * @param end - The end of the interval.\n   * @param options - The options object.\n   *\n   * @throws `Start date is invalid` when `start` is invalid.\n   * @throws `End date is invalid` when `end` is invalid.\n   * @throws `End date must be after start date` when end is before `start` and `options.assertPositive` is true.\n   *\n   * @returns The normalized and validated interval object.\n   */\n  function interval(start, end, options) {\n    var _normalizeDates = (0, _libNormalizeDatesJs.normalizeDates)(options?.in, start, end),\n      _normalizeDates2 = (0, _slicedToArray.default)(_normalizeDates, 2),\n      _start = _normalizeDates2[0],\n      _end = _normalizeDates2[1];\n    if (isNaN(+_start)) throw new TypeError(\"Start date is invalid\");\n    if (isNaN(+_end)) throw new TypeError(\"End date is invalid\");\n    if (options?.assertPositive && +_start > +_end) throw new TypeError(\"End date must be after start date\");\n    return {\n      start: _start,\n      end: _end\n    };\n  }\n\n  // Fallback for modularized imports:\n  var _default = interval;\n});","lineCount":71,"map":[[12,2,49,0,"Object"],[12,8,49,0],[12,9,49,0,"defineProperty"],[12,23,49,0],[12,24,49,0,"exports"],[12,31,49,0],[13,4,49,0,"enumerable"],[13,14,49,0],[14,4,49,0,"get"],[14,7,49,0],[14,18,49,0,"get"],[14,19,49,0],[15,6,49,0],[15,13,49,0,"_default"],[15,21,49,0],[16,4,49,0],[17,2,49,0],[18,2,36,0,"exports"],[18,9,36,0],[18,10,36,0,"interval"],[18,18,36,0],[18,21,36,0,"interval"],[18,29,36,0],[19,2,46,1],[19,6,46,1,"_babelRuntimeHelpersSlicedToArray"],[19,39,46,1],[19,42,46,1,"require"],[19,49,46,1],[19,50,46,1,"_dependencyMap"],[19,64,46,1],[20,2,46,1],[20,6,46,1,"_slicedToArray"],[20,20,46,1],[20,23,46,1,"_interopDefault"],[20,38,46,1],[20,39,46,1,"_babelRuntimeHelpersSlicedToArray"],[20,72,46,1],[21,2,1,0],[21,6,1,0,"_libNormalizeDatesJs"],[21,26,1,0],[21,29,1,0,"require"],[21,36,1,0],[21,37,1,0,"_dependencyMap"],[21,51,1,0],[22,2,3,0],[23,0,4,0],[24,0,5,0],[26,2,7,0],[27,0,8,0],[28,0,9,0],[29,0,10,0],[30,0,11,0],[31,0,12,0],[33,2,14,0],[34,0,15,0],[35,0,16,0],[36,0,17,0],[37,0,18,0],[38,0,19,0],[39,0,20,0],[40,0,21,0],[41,0,22,0],[42,0,23,0],[43,0,24,0],[44,0,25,0],[45,0,26,0],[46,0,27,0],[47,0,28,0],[48,0,29,0],[49,0,30,0],[50,0,31,0],[51,0,32,0],[52,0,33,0],[53,0,34,0],[54,0,35,0],[55,2,36,7],[55,11,36,16,"interval"],[55,19,36,24,"interval"],[55,20,36,25,"start"],[55,25,36,30],[55,27,36,32,"end"],[55,30,36,35],[55,32,36,37,"options"],[55,39,36,44],[55,41,36,46],[56,4,37,2],[56,8,37,2,"_normalizeDates"],[56,23,37,2],[56,26,37,25],[56,30,37,25,"normalizeDates"],[56,50,37,39],[56,51,37,39,"normalizeDates"],[56,65,37,39],[56,67,37,40,"options"],[56,74,37,47],[56,76,37,49,"in"],[56,78,37,51],[56,80,37,53,"start"],[56,85,37,58],[56,87,37,60,"end"],[56,90,37,63],[56,91,37,64],[57,6,37,64,"_normalizeDates2"],[57,22,37,64],[57,29,37,64,"_slicedToArray"],[57,43,37,64],[57,44,37,64,"default"],[57,51,37,64],[57,53,37,64,"_normalizeDates"],[57,68,37,64],[58,6,37,9,"_start"],[58,12,37,15],[58,15,37,15,"_normalizeDates2"],[58,31,37,15],[59,6,37,17,"_end"],[59,10,37,21],[59,13,37,21,"_normalizeDates2"],[59,29,37,21],[60,4,39,2],[60,8,39,6,"isNaN"],[60,13,39,11],[60,14,39,12],[60,15,39,13,"_start"],[60,21,39,19],[60,22,39,20],[60,24,39,22],[60,30,39,28],[60,34,39,32,"TypeError"],[60,43,39,41],[60,44,39,42],[60,67,39,65],[60,68,39,66],[61,4,40,2],[61,8,40,6,"isNaN"],[61,13,40,11],[61,14,40,12],[61,15,40,13,"_end"],[61,19,40,17],[61,20,40,18],[61,22,40,20],[61,28,40,26],[61,32,40,30,"TypeError"],[61,41,40,39],[61,42,40,40],[61,63,40,61],[61,64,40,62],[62,4,42,2],[62,8,42,6,"options"],[62,15,42,13],[62,17,42,15,"assertPositive"],[62,31,42,29],[62,35,42,33],[62,36,42,34,"_start"],[62,42,42,40],[62,45,42,43],[62,46,42,44,"_end"],[62,50,42,48],[62,52,43,4],[62,58,43,10],[62,62,43,14,"TypeError"],[62,71,43,23],[62,72,43,24],[62,107,43,59],[62,108,43,60],[63,4,45,2],[63,11,45,9],[64,6,45,11,"start"],[64,11,45,16],[64,13,45,18,"_start"],[64,19,45,24],[65,6,45,26,"end"],[65,9,45,29],[65,11,45,31,"_end"],[66,4,45,36],[66,5,45,37],[67,2,46,0],[69,2,48,0],[70,2,49,0],[70,6,49,0,"_default"],[70,14,49,0],[70,17,49,15,"interval"],[70,25,49,23],[71,0,49,24],[71,3]],"functionMap":{"names":["<global>","interval"],"mappings":"AAA;OCmC;CDU"},"hasCjsExports":false},"type":"js/module"}]}