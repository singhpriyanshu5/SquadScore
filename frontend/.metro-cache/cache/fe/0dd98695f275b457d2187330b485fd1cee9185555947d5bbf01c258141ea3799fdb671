{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"FileSystemReadableStreamSource\", {\n    enumerable: true,\n    get: function () {\n      return FileSystemReadableStreamSource;\n    }\n  });\n  Object.defineProperty(exports, \"FileSystemWritableSink\", {\n    enumerable: true,\n    get: function () {\n      return FileSystemWritableSink;\n    }\n  });\n  class FileSystemReadableStreamSource {\n    size = 1024;\n    type = 'bytes';\n    constructor(handle) {\n      this.handle = handle;\n    }\n    cancel() {\n      this.handle.close();\n    }\n    pull(controller) {\n      const theView = controller.byobRequest?.view;\n      if (!theView) {\n        const bytes = this.handle.readBytes(this.size);\n        if (bytes.length === 0) {\n          controller.close();\n          return;\n        }\n        controller.enqueue(bytes);\n        return;\n      }\n\n      // TODO: Optimize by adding a native method that can write into a TypedArray at a given offset.\n      const bytes = this.handle.readBytes(theView.byteLength - theView.byteOffset);\n      if (bytes.length === 0) {\n        controller.close();\n        controller.byobRequest.respond(0);\n        return;\n      }\n      if (theView instanceof Uint8Array) {\n        theView.set(bytes, theView.byteOffset);\n      } else {\n        const array = new Uint8Array(theView.buffer);\n        for (let i = 0; i < bytes.length; i++) {\n          array[i + (theView.byteOffset ?? 0)] = bytes[i];\n        }\n      }\n      controller.byobRequest.respond(bytes.length);\n    }\n  }\n  class FileSystemWritableSink {\n    constructor(handle) {\n      this.handle = handle;\n    }\n    abort() {\n      this.close();\n    }\n    close() {\n      this.handle.close();\n    }\n    write(chunk) {\n      this.handle.writeBytes(chunk);\n    }\n  }\n});","lineCount":72,"map":[[7,2,3,0,"Object"],[7,8,3,0],[7,9,3,0,"defineProperty"],[7,23,3,0],[7,24,3,0,"exports"],[7,31,3,0],[8,4,3,0,"enumerable"],[8,14,3,0],[9,4,3,0,"get"],[9,7,3,0],[9,18,3,0,"get"],[9,19,3,0],[10,6,3,0],[10,13,3,0,"FileSystemReadableStreamSource"],[10,43,3,0],[11,4,3,0],[12,2,3,0],[13,2,47,0,"Object"],[13,8,47,0],[13,9,47,0,"defineProperty"],[13,23,47,0],[13,24,47,0,"exports"],[13,31,47,0],[14,4,47,0,"enumerable"],[14,14,47,0],[15,4,47,0,"get"],[15,7,47,0],[15,18,47,0,"get"],[15,19,47,0],[16,6,47,0],[16,13,47,0,"FileSystemWritableSink"],[16,35,47,0],[17,4,47,0],[18,2,47,0],[19,2,3,7],[19,8,3,13,"FileSystemReadableStreamSource"],[19,38,3,43],[19,39,3,76],[20,4,5,2,"size"],[20,8,5,6],[20,11,5,17],[20,15,5,21],[21,4,6,2,"type"],[21,8,6,6],[21,11,6,9],[21,18,6,16],[22,4,8,2,"constructor"],[22,15,8,13,"constructor"],[22,16,8,14,"handle"],[22,22,8,32],[22,24,8,34],[23,6,9,4],[23,10,9,8],[23,11,9,9,"handle"],[23,17,9,15],[23,20,9,18,"handle"],[23,26,9,24],[24,4,10,2],[25,4,12,2,"cancel"],[25,10,12,8,"cancel"],[25,11,12,8],[25,13,12,11],[26,6,13,4],[26,10,13,8],[26,11,13,9,"handle"],[26,17,13,15],[26,18,13,16,"close"],[26,23,13,21],[26,24,13,22],[26,25,13,23],[27,4,14,2],[28,4,16,2,"pull"],[28,8,16,6,"pull"],[28,9,16,7,"controller"],[28,19,16,47],[28,21,16,49],[29,6,17,4],[29,12,17,10,"theView"],[29,19,17,17],[29,22,17,20,"controller"],[29,32,17,30],[29,33,17,31,"byobRequest"],[29,44,17,42],[29,46,17,44,"view"],[29,50,17,48],[30,6,18,4],[30,10,18,8],[30,11,18,9,"theView"],[30,18,18,16],[30,20,18,18],[31,8,19,6],[31,14,19,12,"bytes"],[31,19,19,17],[31,22,19,20],[31,26,19,24],[31,27,19,25,"handle"],[31,33,19,31],[31,34,19,32,"readBytes"],[31,43,19,41],[31,44,19,42],[31,48,19,46],[31,49,19,47,"size"],[31,53,19,51],[31,54,19,52],[32,8,20,6],[32,12,20,10,"bytes"],[32,17,20,15],[32,18,20,16,"length"],[32,24,20,22],[32,29,20,27],[32,30,20,28],[32,32,20,30],[33,10,21,8,"controller"],[33,20,21,18],[33,21,21,19,"close"],[33,26,21,24],[33,27,21,25],[33,28,21,26],[34,10,22,8],[35,8,23,6],[36,8,24,6,"controller"],[36,18,24,16],[36,19,24,17,"enqueue"],[36,26,24,24],[36,27,24,25,"bytes"],[36,32,24,30],[36,33,24,31],[37,8,25,6],[38,6,26,4],[40,6,28,4],[41,6,29,4],[41,12,29,10,"bytes"],[41,17,29,15],[41,20,29,18],[41,24,29,22],[41,25,29,23,"handle"],[41,31,29,29],[41,32,29,30,"readBytes"],[41,41,29,39],[41,42,29,40,"theView"],[41,49,29,47],[41,50,29,48,"byteLength"],[41,60,29,58],[41,63,29,61,"theView"],[41,70,29,68],[41,71,29,69,"byteOffset"],[41,81,29,79],[41,82,29,80],[42,6,30,4],[42,10,30,8,"bytes"],[42,15,30,13],[42,16,30,14,"length"],[42,22,30,20],[42,27,30,25],[42,28,30,26],[42,30,30,28],[43,8,31,6,"controller"],[43,18,31,16],[43,19,31,17,"close"],[43,24,31,22],[43,25,31,23],[43,26,31,24],[44,8,32,6,"controller"],[44,18,32,16],[44,19,32,17,"byobRequest"],[44,30,32,28],[44,31,32,29,"respond"],[44,38,32,36],[44,39,32,37],[44,40,32,38],[44,41,32,39],[45,8,33,6],[46,6,34,4],[47,6,35,4],[47,10,35,8,"theView"],[47,17,35,15],[47,29,35,27,"Uint8Array"],[47,39,35,37],[47,41,35,39],[48,8,36,6,"theView"],[48,15,36,13],[48,16,36,14,"set"],[48,19,36,17],[48,20,36,18,"bytes"],[48,25,36,23],[48,27,36,25,"theView"],[48,34,36,32],[48,35,36,33,"byteOffset"],[48,45,36,43],[48,46,36,44],[49,6,37,4],[49,7,37,5],[49,13,37,11],[50,8,38,6],[50,14,38,12,"array"],[50,19,38,17],[50,22,38,20],[50,26,38,24,"Uint8Array"],[50,36,38,34],[50,37,38,35,"theView"],[50,44,38,42],[50,45,38,43,"buffer"],[50,51,38,49],[50,52,38,50],[51,8,39,6],[51,13,39,11],[51,17,39,15,"i"],[51,18,39,16],[51,21,39,19],[51,22,39,20],[51,24,39,22,"i"],[51,25,39,23],[51,28,39,26,"bytes"],[51,33,39,31],[51,34,39,32,"length"],[51,40,39,38],[51,42,39,40,"i"],[51,43,39,41],[51,45,39,43],[51,47,39,45],[52,10,40,8,"array"],[52,15,40,13],[52,16,40,14,"i"],[52,17,40,15],[52,21,40,19,"theView"],[52,28,40,26],[52,29,40,27,"byteOffset"],[52,39,40,37],[52,43,40,41],[52,44,40,42],[52,45,40,43],[52,46,40,44],[52,49,40,47,"bytes"],[52,54,40,52],[52,55,40,53,"i"],[52,56,40,54],[52,57,40,56],[53,8,41,6],[54,6,42,4],[55,6,43,4,"controller"],[55,16,43,14],[55,17,43,15,"byobRequest"],[55,28,43,26],[55,29,43,27,"respond"],[55,36,43,34],[55,37,43,35,"bytes"],[55,42,43,40],[55,43,43,41,"length"],[55,49,43,47],[55,50,43,48],[56,4,44,2],[57,2,45,0],[58,2,47,7],[58,8,47,13,"FileSystemWritableSink"],[58,30,47,35],[58,31,47,62],[59,4,50,2,"constructor"],[59,15,50,13,"constructor"],[59,16,50,14,"handle"],[59,22,50,32],[59,24,50,34],[60,6,51,4],[60,10,51,8],[60,11,51,9,"handle"],[60,17,51,15],[60,20,51,18,"handle"],[60,26,51,24],[61,4,52,2],[62,4,54,2,"abort"],[62,9,54,7,"abort"],[62,10,54,7],[62,12,54,10],[63,6,55,4],[63,10,55,8],[63,11,55,9,"close"],[63,16,55,14],[63,17,55,15],[63,18,55,16],[64,4,56,2],[65,4,58,2,"close"],[65,9,58,7,"close"],[65,10,58,7],[65,12,58,10],[66,6,59,4],[66,10,59,8],[66,11,59,9,"handle"],[66,17,59,15],[66,18,59,16,"close"],[66,23,59,21],[66,24,59,22],[66,25,59,23],[67,4,60,2],[68,4,62,2,"write"],[68,9,62,7,"write"],[68,10,62,8,"chunk"],[68,15,62,25],[68,17,62,27],[69,6,63,4],[69,10,63,8],[69,11,63,9,"handle"],[69,17,63,15],[69,18,63,16,"writeBytes"],[69,28,63,26],[69,29,63,27,"chunk"],[69,34,63,32],[69,35,63,33],[70,4,64,2],[71,2,65,0],[72,0,65,1],[72,3]],"functionMap":{"names":["<global>","FileSystemReadableStreamSource","FileSystemReadableStreamSource#constructor","FileSystemReadableStreamSource#cancel","FileSystemReadableStreamSource#pull","FileSystemWritableSink","FileSystemWritableSink#constructor","FileSystemWritableSink#abort","FileSystemWritableSink#close","FileSystemWritableSink#write"],"mappings":"AAA;OCE;ECK;GDE;EEE;GFE;EGE;GH4B;CDC;OKE;ECG;GDE;EEE;GFE;EGE;GHE;EIE;GJE;CLC"},"hasCjsExports":false},"type":"js/module"}]}